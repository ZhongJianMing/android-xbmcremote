%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (ehinger) ()
%%Title: (xbox-remote_portrait_text.ai)
%%CreationDate: 9/10/2009 10:40 PM
%%Canvassize: 16383
%%BoundingBox: 55 44 783 557
%%HiResBoundingBox: 55.4614 44.3926 782.2344 556.251
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 421.5 296.7803 421.5 296.7803
%AI3_TileBox: 24.9448 -8.36035 816.9453 603.6401
%AI3_DocumentPreview: None
%AI5_ArtSize: 841.8896 595.2803
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -88.0005 675.6138 1.5 1798 1031 18 0 0 73 116 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 1 72 1 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 92 8
%%BeginData: 4177 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD1EFFA8A8A9A8FFA8A9A8A8A8FD13FFFD04A8FFFFA8A8A8FFA8FD
%0FFFA8A8A8FFA8FFA8FFA8A8A8FD3EFFFD05A8FFFD05A8FFA8FD10FFFD04
%A8FFFD05A8FD11FFFD05A8FFFD06A8FD3BFFA8FFA8A8A8FFA8A8A8FFAFA8
%A8A8FD10FFA8A8FFA8FFFD04A8FD11FFA8FFA8A8A8FFA8A8A8FFA8A87DFD
%3CFFA8A8A8FFFD04A8FD18FFA8A8A8FFA8FFA8FD11FF7EA8A8FFA8A8A8AF
%FFFFA8A8FDFCFFFDAAFFA8FFA8A8A8FFA8FD7AFFA8A8A8FFA8FD7CFFA8FF
%A8A8A8FD7BFFA8FFAF84FD7CFFA8FFA8FDFCFFFDFCFFFD67FFA8FFAFFFA8
%FFA8FFA8FFA8FFA8FFFFFFA8FFA8FD6EFFFD06A8FFFFA8AFFD05A8FFA8A8
%A8FD6CFFFD04A87DFFFD05A8FFFD05A8FF7EA9FD6CFFFD06A8FF84FF84FF
%A8A8A8FFFD05A8FD6CFFA8FFA8FFA8A8A8FFFFA8A8FFFFFFA8A8A8FFA8A8
%FD1CFFA8A8FFA8A9A8FFFFFFA8A8FD32FFA8FFFFFFA8A8A8FFA8FD3AFFA8
%A8A8A9A8A8A8FFA8A8A8FD31FFA8A87DFD08A8FD3AFFA8FFA8FFA8A8FFFF
%A8FD33FFFD07A8FFFFA8FD39FFA8FFA8FFA8FFA8A87EA8A8FD31FFA8A8A8
%FFA8A8FFFF7DA8A8FD40FFA8FD66FFA8FFA8FFFFFFA8A8A8FFA8FFA8FD72
%FFFD05A8FFA8A87DFFA8A8A8FD73FFA87DA87DFD08A8FD74FFA8AFA8A9A8
%A8A8FFA8A8A8FFA8FD74FFA8FFA9FFA8FFFFA8A8FFFFFFA8FDFCFFFDFCFF
%FD5DFFA8FD11FFA9FD6CFFFD05A8FFA8A8A8FFA8FFA8A8FFA9A8FFA8A8A8
%FD6AFFFD08A87EA87DA8A8A87DFF7DFD05A8FD6BFFA8FFA8FFA8A8A8FFFD
%09A8FFA8FFA8FD6AFFA8FFFFFF7DFFA8FFA8FFA8FFA8FFFFA8A8FFA8A8A8
%FDFCFFFDFCFFFD93FFA8FFA8FFA8FFA8A8A8FFA8FFFD05A8FFA8A8FD6BFF
%FD05A8FFA8FFA8A8A8FFA8A8A8FFA8FFA8A8A8FD6BFFA87DA8A8A8AFFFFF
%A8A8FFA8A87EFD04A8FFA8A8AFFD19FFA8FFAFFFA8FFFFFFA8A8A8FFA8FF
%A8FD42FFA8FFFFFFA8A8A8FFA8FFFD05A8FFA8A9A8FFA8FD19FFFD05A8FF
%A8FFFFFD04A8AFA8A8A8FD44FFA8FFA8FD05FFA8FFAFFFA8FFA8FFA8FD1B
%FFFD07A8FF7DFFA8A9FFFFA8FD70FFA8FFA8A8A8FFFD05A8FFA8FFFFA8FD
%71FFA8FFFFA8A8FFA8FFA8A8A8A9A8FFA8FDFCFFFDB0FFA8FFA8FD05FFA8
%AFA8FFA8FD72FFFD04A87DA8A8FF7DFD04A8FD74FFA8FFA8A884FFFD07A8
%FD72FFA8FFFD04A87DA8A8A884A8A8A8FDFCFFFDFCFFFD94FFA8FFA8FFFF
%A8A8FFA8FFA8A8A8FD70FFA8FFA8AFA8AFA8A8A8FFA8FFA8A87EFD72FF7D
%A8A8A8FFA87DA8A8A8FFFD04A8FD71FFA8FFFFA8A8A8FFA8FFA8A8A8FFA8
%A8FD75FFA8FFFFFFA8FFA8FFFFA8A8FDFCFFFDFCFFFDE4FFA8A8A8FFA8FF
%A8FFFFA8A8FD74FFA8A87EFD05A884A8A8A8FD75FFA8A8A8FFA8A8FFFFA8
%A8A8FD75FFFD04A8FFA8A8A8A9A8FD7CFFA9FDFCFFFDFCFFFDFCFFFDFCFF
%FDFCFFFDFCFFFD9DFFA8FFA8FFA8FFA8FD05FFA8FD11FFA8FFA8FFA8FFA8
%FD33FFA8FD05FFA8FD0FFFA8FFA8FFA8FFFFFFA8FFA8FFA8FD04FF7DA9A8
%A87DFD06A8FFFD05A8FD0AFFA87DFF7DA87EFD06A8A9A8FD2FFF7DA8A8A8
%7DFFA8A884A8A8FD0BFFA8A87DFD07A87DA8A8A87DFFFFFFA8FFA8A8FFA8
%FFA8A8A8A9FFFF7DFFA8FD0BFFFD07A8FFA8A884FFA8FD30FFFD06A8FFFF
%A884FD0CFFFD04A8FFA8A87DFD04A8FFA8A8FFFFFF7EFD05A87DA8FFFF7E
%A87DFD04A8FD0BFFFD05A8FFA8FFA8A87DA8A8FD2FFFA8A87DFD08A8A9FD
%0AFF7DFFA8A87DFFA8A87DFFA8FFA8AFA8A9FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
12 Bn
%AI5_BeginGradient: (Copper Radial)
(Copper Radial) 1 4 Bd
[
0
<
0A0B0B0C0D0D0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F20202122222324
24252627272829292A2B2B2C2D2D2E2F2F303131323333343536
>
<
242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F40414243444546474849
4A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
>
<
0001010202030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A
1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B
>
1 %_Br
<
00010102020303040405060607070808090A0A0B0B0C0C0D0E0E0F0F101111121213131415151616
17181819191A1B1B1C1C1D1E1E1F1F202121222223242425252627272828292A2A2B2B2C2D2D2E2E
2F30303131323333343435363637383839393A3B3B3C3C3D3E3E3F3F404141424343444445464647
474849494A4A4B4C4C4D4E4E4F4F50515152525354545556565757585959
>
<
3636373839393A3B3C3D3D3E3F4041424243444546464748494A4B4B4C4D4E4F5051515253545556
565758595A5B5C5C5D5E5F6061626263646566676868696A6B6C6D6E6E6F70717273747475767778
797A7A7B7C7D7E7F8081818283848586878788898A8B8C8D8E8E8F90919293949595969798999A9B
9C9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B2B3B4B5
>
<
636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788
898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7
D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
<
2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F303030
30303030303131313131313131323232323232323232333333333333333334343434343434343535
3535353535353536363636363636363737373737373737383838383838383839393939393939393A
3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D
>
1 %_Br
<
595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363
636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D
6D6E
>
<
B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECF
CFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9
EAEB
>
<
F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEB
EBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1
E1E0
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
656768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D
8E8F
>
1 %_Br
[
0 0.04 0.14 0 1 51.0204 0.395812 %_BS
%_0 0.04 0.14 0 1 51.0204 0.395812 Bs
0 0.21 0.39 0.17 1 51.0204 30.8989 %_BS
%_0 0.21 0.39 0.17 1 51.0204 30.8989 Bs
0.35 0.71 0.96 0.24 1 50 78.0899 %_BS
%_0.35 0.71 0.96 0.24 1 50 78.0899 Bs
0.43 0.92 0.88 0.56 1 50 100 %_BS
%_0.43 0.92 0.88 0.56 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Desert Sunset)
(Desert Sunset) 0 6 Bd
[
<
38393A3A3B3C3D3E3E3F404141424344444546474748494A4A4B4C4C4D4E4F4F5051515253535455
555657575859595A5B5B5C5D5D5E5F5F60616162626364646565666767686869696A6B6B6C6C6D6D
6E6E6F6F7070717172727373747475757676777778787879797A7A7B7B7B7C7C7C7D7D7E7E7E7E7F
7F7F80808080818181818282828282
>
<
5758595A5B5C5D5E5F60616263636465666768696A6B6C6D6E6F70717272737475767778797A7A7B
7C7D7E7F808081828384858586878889898A8B8C8D8D8E8F90909192939394959696979899999A9B
9B9C9D9D9E9F9FA0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1
B1B2B2B2B3B3B3B4B4B4B4B5B5B5B5
>
<
2E2E2F2F2F3030303131313232323333333434343535353636363737373838383939393A3A3A3A3B
3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F3F404040414141414242424243434344444444454545454646
464646474747474848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4D4E
4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F
>
0
1 %_Br
<
1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F303132323334343536373738
>
<
4040414242434444454646474848494A4A4B4C4C4D4E4E4F4F5051515253535455555657
>
<
5251504F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
>
0
1 %_Br
<
050606070808090A0A0B0B0C0D0D0E0F0F101111121213141415151617171818191A1A1B1B1C1C1D
1E1E1F
>
<
2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F
3F3F40
>
<
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A595857565554
535252
>
0
1 %_Br
<
00000000000000000001010101010101010101010101010101010202020202020202020202020202
02020303030303030303030303030303030304040404040404040404040404040405050505050505
050505
>
<
7A7A79787776757474737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B
>
<
9E9E9D9D9D9C9C9B9B9B9A9A99999998989797969696959594949393939292919190908F8F8F8E8E
8D8D8C8C8C8B8B8A8A898988888887878686858584848383838282818180807F7F7E7E7E7D7D7C7C
7B7B7A
>
<
03030202020202020202020202020202020202020202020202020202020202020202020201010101
01010101010101010101010101010101010101010101010101010100000000000000000000000000
000000
>
1 %_Br
<
05050505050505050404040404040404040404030303030303030303030303020202020202020202
020202010101010101010101010101000000000000
>
<
91919190908F8F8F8E8E8E8D8D8C8C8C8B8B8A8A8A89898988888787878686858585848484838382
828281818180807F7F7F7E7E7D7D7D7C7C7C7B7B7A
>
<
DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4
B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
>
<
2928282726262524242322222121201F1F1E1D1D1C1B1B1A19191818171616151414131212111110
0F0F0E0D0D0C0B0B0A0A0908080706060504040303
>
1 %_Br
[
0.51 0.71 0.31 0 1 50 100 %_BS
%_0.51 0.71 0.31 0 1 50 100 Bs
0.22 0.34 0.18 0 1 38.4615 71.0424 %_BS
%_0.22 0.34 0.18 0 1 38.4615 71.0424 Bs
0.12 0.25 0.32 0 1 50 53.6679 %_BS
%_0.12 0.25 0.32 0 1 50 53.6679 Bs
0.02 0.17 0.48 0 1 48 38.764 %_BS
%_0.02 0.17 0.48 0 1 48 38.764 Bs
0.000031 0.48 0.62 0.01 1 51.6129 13.1273 %_BS
%_0.000031 0.48 0.62 0.01 1 51.6129 13.1273 Bs
0.02 0.57 0.86 0.16 1 50 0 %_BS
%_0.02 0.57 0.86 0.16 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Fade to Black)
(Fade to Black) 0 2 Bd
[
0
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 1 1 50 0 %_BS
%_0 0 0 1 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Linear Gradient)
(Linear Gradient) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial Gradient)
(Radial Gradient) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Soft Black Vignette)
(Soft Black Vignette) 1 3 Bd
[
0.2
0.2
0.2
1
1 %_Br
0.2
0.2
0.2
1
1 %_Br
[
0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS
%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs
0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS
%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs
0.2 0.2 0.2 1 1 50 100 %_BS
%_0.2 0.2 0.2 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 17)
(Unnamed gradient 17) 0 6 Bd
[
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
>
<
2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D
2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A292929292929
29292929292929292929292929292929292929292929292929292929292929292929292929292929
292928282828282828282828282828
>
<
2B2B2B2B2A2A2A2A2A2A292929292929282828282827272727272726262626262625252525252524
24242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E
1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717
17171616161616161515151515151414141414131313131313121212121212111111111111101010
1010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A0909
09090909080808080808070707070707060606060606050505050505040404040404030303030303
020202020202010101010101000000
>
1 %_Br
<
C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCF
CFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDB
DBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7
E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4
F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
65666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDC
DDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3939393939393939393939393939393838383838
38383838383838383837373737373737373737373737373736363636363636363636363636363635
35353535353535353535353535343434343434343434343434343434333333333333333333333333
33333332323232323232323232323232323131313131313131313131313131313030303030303030
3030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E
>
<
00010101010102020202030303030304040404050505050506060606060707070708080808080909
09090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F1010101010111111111212
12121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B
1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F202020202021212121222222222223232323
2424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B
>
1 %_Br
<
DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5
D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1
D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCC
CCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7
C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3
>
<
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
>
<
1A1A1A1A1A1A19191919191919191818181818181817171717171717171616161616161615151515
15151515141414141414141313131313131313121212121212121211111111111111101010101010
10100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A
0A0A0A0A0A0A0A090909090909090908080808080808070707070707070706060606060606050505
05050505050404040404040403030303030303030202020202020202010101010101010000
>
1 %_Br
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
>
<
000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C
0D0D0D0D0E0E0E0F0F0F101010111111121212131313131414141515151616161717171818181819
19191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525
262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F3030303131313232
3232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4
F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
00000000010101010101010102020202020202030303030303030304040404040404050505050505
05050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010
10101010111111111111111112121212121212131313131313131314141414141414151515151515
15151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A
>
1 %_Br
<
00000000000000010101010101010101010101020202020202020202020202020303030303030303
03030303040404040404040404040404040505050505050505050505050606060606060606060606
06060707070707070707070707070708080808080808080808080809090909090909090909090909
0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F1010101010
10101010101010101111111111111111111111111212121212121212121212121213131313131313
131313131314141414141414141414
>
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEDEDED
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000
>
1 %_Br
[
0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS
%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs
0.997467 1 0.178775 0.168856 1 50 80 %_BS
%_0.997467 1 0.178775 0.168856 1 50 80 Bs
0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS
%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs
0.85388 0.242313 1 0.102846 1 50 40 %_BS
%_0.85388 0.242313 1 0.102846 1 50 40 Bs
0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs
0.000031 0.99472 1 0.001282 1 50 0 %_BS
%_0.000031 0.99472 1 0.001282 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 18)
(Unnamed gradient 18) 1 6 Bd
[
<
00000000000000010101010101010101010101020202020202020202020202020303030303030303
03030303040404040404040404040404040505050505050505050505050606060606060606060606
06060707070707070707070707070708080808080808080808080809090909090909090909090909
0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F1010101010
10101010101010101111111111111111111111111212121212121212121212121213131313131313
131313131314141414141414141414
>
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEDEDED
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000
>
1 %_Br
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
>
<
000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C
0D0D0D0D0E0E0E0F0F0F101010111111121212131313131414141515151616161717171818181819
19191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525
262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F3030303131313232
3232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4
F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
00000000010101010101010102020202020202030303030303030304040404040404050505050505
05050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010
10101010111111111111111112121212121212131313131313131314141414141414151515151515
15151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A
>
1 %_Br
<
DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5
D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1
D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCC
CCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7
C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3
>
<
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
>
<
1A1A1A1A1A1A19191919191919191818181818181817171717171717171616161616161615151515
15151515141414141414141313131313131313121212121212121211111111111111101010101010
10100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A
0A0A0A0A0A0A0A090909090909090908080808080808070707070707070706060606060606050505
05050505050404040404040403030303030303030202020202020202010101010101010000
>
1 %_Br
<
C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCF
CFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDB
DBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7
E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4
F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
65666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDC
DDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3939393939393939393939393939393838383838
38383838383838383837373737373737373737373737373736363636363636363636363636363635
35353535353535353535353535343434343434343434343434343434333333333333333333333333
33333332323232323232323232323232323131313131313131313131313131313030303030303030
3030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E
>
<
00010101010102020202030303030304040404050505050506060606060707070708080808080909
09090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F1010101010111111111212
12121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B
1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F202020202021212121222222222223232323
2424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B
>
1 %_Br
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
>
<
2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D
2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A292929292929
29292929292929292929292929292929292929292929292929292929292929292929292929292929
292928282828282828282828282828
>
<
2B2B2B2B2A2A2A2A2A2A292929292929282828282827272727272726262626262625252525252524
24242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E
1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717
17171616161616161515151515151414141414131313131313121212121212111111111111101010
1010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A0909
09090909080808080808070707070707060606060606050505050505040404040404030303030303
020202020202010101010101000000
>
1 %_Br
[
0.000031 0.99472 1 0.001282 1 50 0 %_BS
%_0.000031 0.99472 1 0.001282 1 50 0 Bs
0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs
0.85388 0.242313 1 0.102846 1 50 40 %_BS
%_0.85388 0.242313 1 0.102846 1 50 40 Bs
0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS
%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs
0.997467 1 0.178775 0.168856 1 50 80 %_BS
%_0.997467 1 0.178775 0.168856 1 50 80 Bs
0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS
%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 20)
(Unnamed gradient 20) 0 2 Bd
[
<
0001020303040506070708090A0B0C0C0D0E0F1011111213141516161718191A1B1B1C1D1E1F2020
212223242525262728292A2A2B2C2D2E2F2F3031323334343536373839393A3B3C3D3E3E3F404142
4343444546474848494A4B4C4D4D4E4F5051525253545556575758595A5B5B5C5D5E5F6060616263
646565666768696A6A6B6C6D6E6F6F7071727374747576777879797A7B7C7D7E7E7F808182838384
8586878888898A8B8C8D8D8E8F9091929293949596979798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A6
A6A7A8A9AAABABACADAEAFB0B0B1B2B3B4B4B5B6B7B8B9B9BABBBCBDBEBEBF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353636373839393A3B3C
3C3D3E3F3F404142424344454546474848494A4B4B4C4D4E4E4F505151525354545556575758595A
5A5B5C5D5D5E5F606061626363646566666768696A6A6B6C6D6D6E6F707071727373747576767778
79797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596
979798999A9A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADAD
>
<
000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D
1E1E1F202121222324242526272728292A2A2B2C2D2D2E2F30303132333334353636373838393A3B
3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858
595A5B5B5C5D5E5E5F606161626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576
777878797A7B7B7C7D7E7E7F80818182838484858686878889898A8B8C8C8D8E8F8F909192929394
959596979898999A9B9B9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A9A9AAAB
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6
>
1 %_Br
[
0.75021 0.679683 0.670222 0.90164 1 50 100 %_BS
%_0.75021 0.679683 0.670222 0.90164 1 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 21)
(Unnamed gradient 21) 0 5 Bd
[
<
04050505050505050505050505060606060606060606060606070707070707070707070707070808
080808080808080808080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D
0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F
0F0F0F10101010101010101010101010101010101010101010111111111111111111111111111111
11111111111111111111111212121212121212121212121212121212121212121212121212121212
1212121212121212121213131313131313131313131313131313
>
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C4C3C2C1C0BF
BFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6A5A4A3A3A2A1A09F9E9E9D
9C9B9A9A9998979696959493929291908F8F8E8D8C8B8B8A89888887868585848383828180807F7E
7E7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6A696868676766656564
64636262616160605F5E5E5D5D5C5C5B5B5A5A59595857575656555554545353535252515150504F
4F4E4E4E4D4D4C4C4B4B4B4A4A494949484848474746464645454544444443434343424242414141
41404040403F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D
>
<
FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFA
FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000
>
1 %_Br
<
14141414141414141414141313131313131313131313131313131212121212121212121212121212
11111111111111111111111111111110101010101010101010101010100F0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A09090909
09090909090909090909090808080808080808080808080808070707070707070707070707070707
060606060606060606060606060605050505050505050505050505050504
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0
F0F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3
F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFA
FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFD
FDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
>
1 %_Br
<
1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D
1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A191919191919191919
19191919191919191919191918181818181818181818181818181818181818181717171717171717
17171717171717171717171717161616161616161616161616161616161616161615151515151515
1515151515151515151515151515141414141414
>
<
848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757574737372727170706F6F6E6D6D6C
6C6B6A6A69696867676666656464636362616160605F5E5E5D5D5C5B5B5A5A595858575756555554
545352525151504F4F4E4E4D4C4C4B4B4A49494848474646454544434342424140403F3E3E3D3D3C
3B3B3A3A393838373736353534343332323131302F2F2E2E2D2C2C2B2B2A29292828272626252524
232322222120201F1F1E1D1D1C1C1B1A1A19191817171616151414131312111110100F0E0E0D0D0C
0B0B0A0A09080807070605050404030202010100
>
<
131415161718191A1B1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343536373839
3A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061
62636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586878889
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9
DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED
>
0.000031
1 %_Br
<
C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99
98979694939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727170
6F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948
47464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120
1F
>
<
2E2F303031313232333334343535363637383839393A3A3B3B3C3C3D3D3E3E3F3F40414142424343
44444545464647474849494A4A4B4B4C4C4D4D4E4E4F4F5051515252535354545555565657575859
595A5A5B5B5C5C5D5D5E5E5F5F6060616262636364646565666667676868696A6A6B6B6C6C6D6D6E
6E6F6F707071727273737474757576767777787879797A7B7B7C7C7D7D7E7E7F7F80808181828383
84
>
<
424141414040403F3F3F3F3E3E3E3D3D3D3D3C3C3C3B3B3B3A3A3A3A393939383838383737373636
363535353534343433333333323232313131303030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A
2A2A292929292828282727272626262625252524242424232323222222212121212020201F1F1F1F
1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A1A1919191818181817171716161615151515141414131313
13
>
0.000031
1 %_Br
[
0.073152 0.237522 0.969482 0.000031 1 50 100 %_BS
%_0.073152 0.237522 0.969482 0.000031 1 50 100 Bs
0.017517 0.897581 1 0.001343 1 35.5263 79.7753 %_BS
%_0.017517 0.897581 1 0.001343 1 35.5263 79.7753 Bs
0.079316 0.000031 0.930816 0.000031 1 50 55.618 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 55.618 Bs
0.121096 0.516075 0.072572 0.000031 1 50 44.9438 %_BS
%_0.121096 0.516075 0.072572 0.000031 1 50 44.9438 Bs
0.751858 0.182254 0.256992 0.000031 1 50 19.1011 %_BS
%_0.751858 0.182254 0.256992 0.000031 1 50 19.1011 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 396)
(Unnamed gradient 396) 1 2 Bd
[
0.000031
0.000031
0.000031
0.000031
1 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 87 44.4444 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 87 44.4444 Bs
0.000031 0.000031 0.000031 0.000031 1 50 100 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 72)
(Unnamed gradient 72) 0 2 Bd
[
<
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECE
CECE
>
<
09090A0B0C0C0D0E0E0F10111112131414151617171819191A1B1C1C1D1E1F1F2021222223242425
26272728292A2A2B2C2D2D2E2F2F303132323334353536373838393A3A3B3C3D3D3E3F4040414242
4344454546474848494A4B4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5E5E5F60
616162636364656666676869696A6B6C6C6D6E6E6F70717172737474757677777879797A7B7C7C7D
7E7F
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAFA
FAF9F9F9F9F9F9F9F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4
F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0EFEFEFEFEFEF
EFEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9
E9E9
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454647494A4B4C4D4E4F50
5152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778
797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0
A1A2
>
1 %_Br
[
0.806394 0.496437 0.913573 0.634302 1 50 98.3146 %_BS
%_0.806394 0.496437 0.913573 0.634302 1 50 98.3146 Bs
0.798978 0.033753 1 0.00119 1 50 0 %_BS
%_0.798978 0.033753 1 0.00119 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Fish Pattern)
(Fish Pattern) 77.5215 31.4824 155.3037 96.7959 [
%AI3_Tile
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 96.7959 m
157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c
154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c
153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c
156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 c
f
142.3477 90.6719 m
142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C
151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c
145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c
140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c
151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C
146.54 80.6494 142.3477 85.1709 142.3477 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 96.7959 m
79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c
76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c
75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c
78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 c
f
64.5654 90.6719 m
64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C
73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c
67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c
62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c
73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C
68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.874 64.1396 m
13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c
16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c
17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c
14.7539 66.1064 13.874 65.2266 13.874 64.1396 c
f
28.7969 58.0156 m
28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C
19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c
26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c
30.8857 52.1611 26.1396 47.416 20.2861 47.416 c
19.9326 47.416 19.585 47.4355 19.2412 47.4688 C
24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
91.6563 64.1396 m
91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c
94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c
95.5889 65.2266 94.709 66.1064 93.623 66.1064 c
92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 c
f
106.5781 58.0156 m
106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C
97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c
103.9219 68.6152 108.668 63.8691 108.668 58.0156 c
108.668 52.1611 103.9219 47.416 98.0684 47.416 c
97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C
102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 31.4824 m
157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c
154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c
153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c
156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 c
f
142.3477 25.3594 m
142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C
151.5596 35.9395 151.2109 35.959 150.8584 35.959 c
145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c
140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c
151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C
146.54 15.3359 142.3477 19.8574 142.3477 25.3594 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 31.4824 m
79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c
76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c
75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c
78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 c
f
64.5654 25.3594 m
64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C
73.7773 35.9395 73.4297 35.959 73.0762 35.959 c
67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c
62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c
73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C
68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3897.5 4615.7153 m
-3683.8999 4615.7153 L
-3683.8999 4607.9146 L
-3897.5 4607.9146 L
-3897.5 4615.7153 L
n
0 O
0 0 0 1 k
-3897.5 4611.8154 m
-3887.4856 4614.3071 -3880.6863 4615.6553 -3868.7007 4615.7153 c
-3855.7185 4615.7803 -3790.6997 4615.7153 y
-3725.6816 4615.7803 -3712.6997 4615.7153 v
-3700.7124 4615.6553 -3693.9136 4614.3071 -3683.8999 4611.8154 C
-3693.9136 4609.3237 -3700.7124 4607.9756 -3712.6997 4607.9146 c
-3725.6816 4607.8491 -3790.6997 4607.9146 y
-3855.7185 4607.8491 -3868.7007 4607.9146 v
-3880.6863 4607.9756 -3887.4856 4609.3237 -3897.5 4611.8154 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 12)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7770 8488.2803 m
-7672.2451 8488.2803 L
-7672.2451 8467.5645 L
-7770 8467.5645 L
-7770 8488.2803 L
n
0 O
0 g
1 XR
-7672.5586 8483.5986 m
-7687.8247 8469.8105 -7705.5537 8490.7295 -7720.9277 8478.4463 C
-7719.4199 8472.7939 -7713.7598 8479.748 -7711.5176 8475.1016 C
-7711.4341 8473.501 -7714.6313 8475.001 -7714.5127 8472.8809 C
-7712.6245 8469.4717 -7707.8955 8469.9688 -7706.5664 8474.0176 C
-7700.3115 8472.0479 -7693.7734 8466.1045 -7687.7847 8467.8975 C
-7686.2671 8469.248 -7687.0708 8470.4316 -7686.6211 8471.708 C
-7679.2871 8467.2725 -7670.4644 8476.4082 -7672.5586 8483.5986 C
f
-7716.2842 8485.2129 m
-7716.8247 8485.5889 -7715.9277 8486.7002 -7716.2529 8487.1885 C
-7718.3237 8486.4365 -7720.6919 8482.3584 -7722.4731 8479.5908 C
-7722.2632 8481.1201 -7723.6641 8482.4443 -7725.0781 8480.2129 C
-7725.2383 8479.3955 -7724.3667 8479.1084 -7724.6729 8478.2168 C
-7725.8306 8476.6484 -7726.8472 8478.1338 -7727.7798 8477.9053 C
-7728.3184 8477.1416 -7728.6143 8476.499 -7728.6816 8475.9746 C
-7722.5537 8473.1543 -7715.9263 8484.957 -7709.7456 8485.3828 C
-7709.9048 8488.3955 -7713.8555 8490.0811 -7716.2842 8485.2129 C
f
u
u
0 XR
-7713.1602 8479.9404 m
-7728.0142 8473.4004 -7749.4731 8477.6221 -7765.3687 8477.5996 c
-7771.2988 8477.5928 -7760.8965 8477.6016 -7766.8267 8477.6064 c
N
0 O
0 g
-7710.8052 8478.7197 m
-7728.1475 8471.5439 -7747.9341 8476.3359 -7766.0532 8476.2666 C
-7766.8608 8477.1533 -7767.6685 8478.042 -7768.4751 8478.9277 C
-7767.6973 8478.9277 -7766.9194 8478.9268 -7766.1421 8478.9336 C
-7765.3345 8478.0459 -7764.5273 8477.1592 -7763.7202 8476.2725 C
-7764.3516 8476.2822 -7764.9844 8476.2754 -7765.6157 8476.2754 c
-7767.3735 8476.2783 -7771.9165 8478.9424 -7768.0376 8478.9375 c
-7767.4063 8478.9375 -7766.7734 8478.9443 -7766.1421 8478.9336 c
-7764.4155 8478.9063 -7759.8184 8476.3037 -7763.7202 8476.2725 c
-7764.4976 8476.2637 -7765.2759 8476.2666 -7766.0532 8476.2666 c
-7767.8081 8476.2656 -7772.3574 8478.9131 -7768.4751 8478.9277 c
-7751.1177 8478.9951 -7732.1025 8474.2939 -7715.5151 8481.1592 c
-7714.1035 8481.7441 -7708.8081 8479.5469 -7710.8052 8478.7197 c
-7710.8052 8478.7197 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 158)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7770 8488.2803 m
-7758.0078 8488.2803 L
-7758.0078 8477.6436 L
-7770 8477.6436 L
-7770 8488.2803 L
n
-7769.3218 8477.6436 m
-7769.3218 8481.5928 L
-7769.3218 8482.6279 L
-7769.3218 8483.2666 L
-7769.3218 8484.3652 L
-7769.3218 8488.2803 L
-7758.6865 8488.2803 L
-7758.6865 8484.3652 L
-7758.6865 8483.2666 L
-7758.6865 8482.6279 L
-7758.6865 8481.5928 L
-7758.6865 8477.6436 L
-7769.3218 8477.6436 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-7758.0078 8484.3652 m
-7758.0078 8483.7197 L
-7770 8483.7217 L
-7770 8484.3652 L
-7770 8484.4307 L
-7758.0078 8484.4297 L
-7758.0078 8484.3652 L
f
-7758.0078 8481.5928 m
-7770 8481.5928 L
-7770 8482.3018 L
-7758.0078 8482.3018 L
-7758.0078 8481.5928 L
f
0.15 1 0.9 0.1 k
-7758.0078 8483.332 m
-7770 8483.332 L
-7770 8483.7217 L
-7758.0078 8483.7197 L
-7758.0078 8483.332 L
f
-7758.0078 8482.6279 m
-7758.0078 8482.3018 L
-7770 8482.3018 L
-7770 8482.6279 L
-7770 8482.6924 L
-7758.0078 8482.6924 L
-7758.0078 8482.6279 L
f
0 1 1 0 k
-7758.0078 8483.2666 m
-7758.0078 8482.6924 L
-7770 8482.6924 L
-7770 8483.2666 L
-7770 8483.332 L
-7758.0078 8483.332 L
-7758.0078 8483.2666 L
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 160)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7770 8487.085 m
-7759.3638 8487.085 L
-7759.3638 8476.4482 L
-7770 8476.4482 L
-7770 8487.085 L
n
-7770 8476.4482 m
-7770 8480.3389 L
-7770 8481.0488 L
-7770 8481.4316 L
-7770 8482.0732 L
-7770 8482.4619 L
-7770 8483.1709 L
-7770 8487.085 L
-7759.3638 8487.085 L
-7759.3638 8476.4482 L
-7770 8476.4482 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-7763.9585 8488.2803 m
-7763.2515 8488.2803 L
-7763.2607 8483.2363 L
-7757.5229 8483.2354 L
-7757.5229 8482.5244 L
-7763.9707 8482.5273 L
-7763.9585 8488.2803 L
f
-7765.6055 8480.8145 m
-7765.8696 8481.0771 -7766.0215 8481.4434 -7766.0215 8481.8164 C
-7766.0073 8488.2803 L
-7765.2979 8488.2803 L
-7765.3125 8481.8164 L
-7765.3125 8481.6299 -7765.2363 8481.4482 -7765.1045 8481.3154 c
-7764.9717 8481.1836 -7764.7891 8481.1084 -7764.6021 8481.1084 C
-7757.5229 8481.1084 L
-7757.5229 8480.3984 L
-7764.6021 8480.3984 L
-7764.9761 8480.3984 -7765.3418 8480.5498 -7765.6055 8480.8145 c
f
0.15 1 0.9 0.1 k
-7764.2827 8488.2803 m
-7763.9585 8488.2803 L
-7763.9707 8482.5273 L
-7757.5229 8482.5244 L
-7757.5229 8482.1357 L
-7764.2827 8482.1357 L
-7764.2827 8488.2803 L
f
-7765.1045 8481.3154 m
-7765.2363 8481.4482 -7765.3125 8481.6299 -7765.3125 8481.8164 C
-7765.2979 8488.2803 L
-7764.9219 8488.2803 L
-7764.9219 8481.8164 L
-7764.9219 8481.7324 -7764.8877 8481.6514 -7764.8281 8481.5908 c
-7764.7695 8481.5322 -7764.6865 8481.499 -7764.6025 8481.499 C
-7757.5229 8481.499 L
-7757.5229 8481.1084 L
-7764.6021 8481.1084 L
-7764.7891 8481.1084 -7764.9717 8481.1836 -7765.1045 8481.3154 c
f
0 1 1 0 k
-7764.8281 8481.5908 m
-7764.8877 8481.6514 -7764.9219 8481.7324 -7764.9219 8481.8164 C
-7764.9219 8488.2803 L
-7764.2827 8488.2803 L
-7764.2827 8482.1357 L
-7757.5229 8482.1357 L
-7757.5229 8481.499 L
-7764.6025 8481.499 L
-7764.6865 8481.499 -7764.7695 8481.5322 -7764.8281 8481.5908 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 161)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7770 8488.2803 m
-7758.0078 8488.2803 L
-7758.0078 8477.6436 L
-7770 8477.6436 L
-7770 8488.2803 L
n
-7769.0117 8477.6436 m
-7769.0117 8481.5928 L
-7769.0117 8482.6279 L
-7769.0117 8483.2666 L
-7769.0117 8484.3652 L
-7769.0117 8488.2803 L
-7758.3765 8488.2803 L
-7758.3765 8484.3652 L
-7758.3765 8483.2666 L
-7758.3765 8482.6279 L
-7758.3765 8481.5928 L
-7758.3765 8477.6436 L
-7769.0117 8477.6436 L
n
0 O
0.15 1 0.9 0.1 k
-7758.0078 8483.332 m
-7770 8483.332 L
-7770 8483.7217 L
-7758.0078 8483.7197 L
-7758.0078 8483.332 L
f
-7758.0078 8482.6279 m
-7758.0078 8482.3018 L
-7770 8482.3018 L
-7770 8482.6279 L
-7770 8482.6924 L
-7758.0078 8482.6924 L
-7758.0078 8482.6279 L
f
0 1 1 0 k
-7758.0078 8483.2666 m
-7758.0078 8482.6924 L
-7770 8482.6924 L
-7770 8483.2666 L
-7770 8483.332 L
-7758.0078 8483.332 L
-7758.0078 8483.2666 L
f
1 Ap
0.746094 0.675781 0.667969 0.898438 k
-7768.2715 8484.4307 m
-7770 8484.4307 L
-7770 8481.5928 L
-7768.2715 8481.5928 L
-7768.2715 8484.4307 L
f
0.15 1 0.9 0.1 k
-7767.5967 8484.4141 m
-7768.4492 8484.4141 L
-7768.4492 8481.5771 L
-7767.5967 8481.5771 L
-7767.5967 8484.4141 L
f
0 Ap
0.746094 0.675781 0.667969 0.898438 k
-7758.0078 8484.3652 m
-7758.0078 8483.7197 L
-7770 8483.7217 L
-7770 8484.3652 L
-7770 8484.4307 L
-7758.0078 8484.4297 L
-7758.0078 8484.3652 L
f
-7758.0078 8481.5928 m
-7770 8481.5928 L
-7770 8482.3018 L
-7758.0078 8482.3018 L
-7758.0078 8481.5928 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 162)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7770 8488.2803 m
-7758.6099 8488.2803 L
-7758.6099 8477.6436 L
-7770 8477.6436 L
-7770 8488.2803 L
n
-7769.2461 8484.3652 m
-7769.2461 8488.2803 L
-7758.6099 8488.2803 L
-7758.6099 8477.6436 L
-7769.2461 8477.6436 L
-7769.2461 8481.5352 L
-7769.2461 8484.3652 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-7763.6245 8484.3018 m
-7763.6245 8483.6572 L
-7770 8483.6572 L
-7770 8484.3018 L
-7770 8484.3652 L
-7763.6245 8484.3652 L
-7763.6245 8484.3018 L
f
-7763.6245 8481.5283 m
-7770 8481.5283 L
-7770 8482.2383 L
-7763.6245 8482.2383 L
-7763.6245 8481.5283 L
f
0.15 1 0.9 0.1 k
-7763.6245 8483.2666 m
-7770 8483.2666 L
-7770 8483.6572 L
-7763.6245 8483.6572 L
-7763.6245 8483.2666 L
f
-7763.6245 8482.5635 m
-7763.6245 8482.2383 L
-7770 8482.2383 L
-7770 8482.5635 L
-7770 8482.6289 L
-7763.6245 8482.6289 L
-7763.6245 8482.5635 L
f
0 1 1 0 k
-7763.6245 8483.2012 m
-7763.6245 8482.6289 L
-7770 8482.6289 L
-7770 8483.2012 L
-7770 8483.2666 L
-7763.6245 8483.2666 L
-7763.6245 8483.2012 L
f
U
-7769.2461 8488.2803 m
-7758.6099 8488.2803 L
-7758.6099 8477.6436 L
-7769.2461 8477.6436 L
-7769.2461 8488.2803 L
n
-7758.7241 8482.9619 m
-7766.8125 8487.6318 L
N
0 O
0.746094 0.675781 0.667969 0.898438 k
-7766.4814 8482.2402 m
-7766.4814 8479.4209 L
-7760.3535 8482.958 L
-7766.4814 8486.4961 L
-7766.4814 8483.6572 L
-7766.8125 8483.6572 L
-7766.8125 8484.3652 L
-7766.8125 8487.6318 L
-7758.7241 8482.9619 L
-7766.8125 8478.293 L
-7766.8125 8481.5313 L
-7766.8125 8482.2402 L
-7766.4814 8482.2402 L
f
0.15 1 0.9 0.1 k
-7766.4814 8486.4961 m
-7760.3535 8482.958 L
-7766.4814 8479.4209 L
-7766.4814 8482.2402 L
-7766.4814 8482.6279 L
-7766.3472 8482.6279 L
-7766.2148 8482.2559 -7765.8633 8481.9873 -7765.4453 8481.9873 c
-7764.9155 8481.9873 -7764.4849 8482.417 -7764.4849 8482.9473 c
-7764.4849 8483.4775 -7764.9155 8483.9072 -7765.4453 8483.9072 c
-7765.8633 8483.9072 -7766.2148 8483.6396 -7766.3472 8483.2666 C
-7766.4814 8483.2666 L
-7766.4814 8483.6572 L
-7766.4814 8486.4961 L
f
0 1 1 0 k
-7765.4453 8483.9072 m
-7764.9155 8483.9072 -7764.4849 8483.4775 -7764.4849 8482.9473 c
-7764.4849 8482.417 -7764.9155 8481.9873 -7765.4453 8481.9873 c
-7765.8633 8481.9873 -7766.2148 8482.2559 -7766.3472 8482.6279 c
-7766.3828 8482.7275 -7766.4058 8482.834 -7766.4058 8482.9473 c
-7766.4058 8483.0596 -7766.3828 8483.165 -7766.3472 8483.2666 c
-7766.2148 8483.6396 -7765.8633 8483.9072 -7765.4453 8483.9072 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7769.8833 8488.2354 m
-7678.0479 8488.2354 L
-7678.0479 8483.9561 L
-7769.8833 8483.9561 L
-7769.8833 8488.2354 L
n
0 O
0 0 0 1 k
-7769.6631 8485.5557 m
-7770 8485.6221 -7769.4814 8485.8115 -7769.8833 8485.6689 C
-7769.8379 8485.5508 -7769.7725 8485.4619 -7769.6631 8485.5557 C
f
-7679.1675 8485.7217 m
-7680.2524 8486.4844 -7681.6816 8485.7139 -7682.8701 8486.2002 C
-7683.0098 8486.2324 -7682.8345 8485.7822 -7683.1484 8485.8828 C
-7684.3008 8486.4756 -7686.1162 8486.1221 -7687.5195 8485.665 C
-7687.4346 8485.5469 L
-7687.7017 8485.4619 -7688.0283 8485.8525 -7688.3115 8485.7979 C
-7688.3135 8485.7197 -7688.2207 8485.6865 -7688.2861 8485.5791 C
-7688.3574 8485.8154 -7688.7983 8485.6885 -7688.9185 8485.8643 C
-7689.0303 8485.7725 -7689.0195 8485.585 -7689.1641 8485.4814 C
-7689.3262 8485.75 L
-7689.7769 8486.3896 -7690.4209 8485.7061 -7691.0361 8486.0361 C
-7691.0063 8485.9736 -7690.9453 8485.9248 -7690.9941 8485.8643 C
-7691.9814 8486.2529 -7693.2168 8486.1807 -7694.3208 8486.3232 C
-7694.2769 8486.2285 -7694.2363 8486.0557 -7694.3008 8485.9482 C
-7694.3555 8486.2314 -7694.6963 8486.3027 -7694.9922 8486.3584 C
-7695.1255 8486.0674 -7695.4995 8486.624 -7695.8467 8486.4639 C
-7695.8169 8486.3994 L
-7696.0732 8486.7041 -7696.1973 8486.2236 -7696.4053 8486.5889 C
-7696.5684 8486.3604 L
-7696.6807 8486.7705 -7696.9395 8486.1475 -7697.1514 8486.3564 C
-7697.1445 8486.4404 L
-7697.3442 8486.54 -7697.4482 8486.334 -7697.6338 8486.4033 C
-7697.6514 8486.3564 L
-7698.0854 8486.4639 -7698.3379 8486.2354 -7698.3271 8486.5557 C
-7698.4795 8486.2988 -7697.9063 8486.4385 -7698.1455 8486.0654 C
-7699.5732 8486.3955 -7701.0459 8486.3311 -7702.4834 8486.3369 C
-7702.6465 8486.208 -7702.7505 8486.1689 -7702.7871 8486.0479 C
-7702.9307 8486.1123 -7703.3281 8486.1064 -7703.4585 8486.2705 C
-7703.4102 8486.2637 -7703.5513 8486.1064 -7703.6274 8486.0908 C
-7703.8887 8485.9697 -7703.9131 8486.4424 -7704.2002 8486.2988 C
-7704.0859 8486.2139 -7704.0469 8486.1104 -7704.0854 8485.9912 C
-7704.3301 8486.2412 -7704.6577 8486.2012 -7704.9473 8486.2822 C
-7704.9023 8486.2285 -7704.8325 8486.1963 -7704.8433 8486.0957 C
-7705.1602 8486.3789 -7705.4209 8486.0361 -7705.6982 8486.2148 C
-7705.5947 8486.0303 L
-7706.0415 8485.8057 -7705.7266 8486.417 -7706.1128 8486.2842 C
-7706.02 8486.2256 -7706.0527 8486.1533 -7706.0361 8486.0781 C
-7706.3965 8486.4141 -7706.9795 8486.3027 -7707.3389 8486.417 C
-7707.3174 8486.3916 -7707.3232 8486.3408 Y
-7707.7148 8486.3828 -7708.1245 8486.2783 -7708.5552 8486.4248 C
-7708.7119 8486.3428 -7708.5039 8485.9736 -7708.9185 8486.042 C
-7708.9033 8486.4131 -7709.6221 8486.1943 -7709.3779 8486.6143 C
-7709.7319 8486.5537 -7710.2925 8486.4141 -7710.5283 8486.54 C
-7710.3691 8486.3994 -7710.7007 8486.0869 -7710.4063 8486.0557 C
-7710.6289 8485.8301 L
-7710.5957 8485.6787 -7710.3999 8485.8818 -7710.4707 8485.6904 C
-7710.6182 8485.7061 -7711.0479 8485.8525 -7711.1797 8485.792 C
-7711.4531 8486.0195 -7711.7041 8486.4443 -7712.1465 8486.4912 C
-7711.9385 8486.3467 -7712.2646 8486.082 -7712.1235 8486.0186 C
-7712.7407 8486.7295 L
-7712.8877 8486.7471 -7712.7725 8486.4365 -7712.9854 8486.5332 C
-7712.9746 8486.6318 -7713.0674 8486.6924 -7713.1318 8486.7725 C
-7713.1875 8486.7295 -7713.7441 8486.8643 -7713.8081 8486.499 C
-7713.8735 8486.3564 -7713.5684 8486.4229 -7713.7314 8486.292 C
-7714.0029 8486.2959 -7714.0151 8486.4209 -7714.2871 8486.4268 C
-7714.2925 8486.3779 L
-7714.4717 8486.3232 -7714.8213 8486.5332 -7714.6265 8486.7354 C
-7714.5015 8486.7471 -7714.6738 8486.5156 -7714.4888 8486.6221 C
-7714.6152 8486.834 -7714.9312 8486.8936 -7715.2031 8486.8975 C
-7715.1104 8486.8389 -7715.1216 8486.7412 -7715.0845 8486.6377 C
-7715.4497 8486.9248 -7715.8369 8487.0156 -7716.2451 8487.1357 C
-7716.2515 8487.3096 -7716.0928 8486.8193 -7716.0327 8486.9111 C
-7716.5557 8486.6699 -7717.1128 8487.2529 -7717.5479 8486.9004 C
-7717.4766 8486.8701 -7717.5098 8487.1475 -7717.5146 8487.0986 C
-7717.7666 8487.0771 -7717.7549 8486.8252 -7717.9189 8486.918 C
-7717.9355 8486.7705 -7718.1255 8486.9658 -7718.2944 8487.0107 C
-7718.3818 8487.1172 -7718.3384 8486.9385 -7718.1914 8486.9229 C
-7718.4268 8487.0479 -7719.3691 8487.2744 -7719.9131 8487.0596 C
-7719.9023 8487.1572 -7720.2471 8487.418 -7720.3721 8487.4072 C
-7720.3232 8487.1787 L
-7720.4375 8487.042 -7720.7422 8487.1982 -7720.7632 8487.0029 C
-7721.0303 8487.2803 -7719.7344 8486.7666 -7720.0957 8486.9805 C
-7720.1895 8486.79 -7720.5991 8487.3447 -7720.5215 8487.0332 C
-7720.7725 8487.042 -7721.0161 8487.2988 -7721.2559 8487.085 C
-7721.1865 8487.1221 -7721.0522 8486.7676 -7721.2549 8486.7842 C
-7721.6123 8486.8252 -7721.3564 8486.8936 -7721.6465 8486.9697 C
-7721.8281 8487.0635 L
-7721.8398 8487.2861 -7722.1475 8487.0332 -7722.0146 8487.2822 C
-7722.0586 8487.0986 -7722.5337 8487.3955 -7722.4971 8487.0264 C
-7722.4473 8486.7354 L
-7722.6016 8486.7568 -7722.7002 8487.042 -7722.8213 8487.1699 C
-7722.8418 8487.1436 -7722.8823 8487.085 -7722.8745 8487.0381 C
-7722.8994 8487.4834 -7723.2432 8487.001 -7723.4268 8487.3447 C
-7723.7505 8487.1904 -7724.2495 8487.3311 -7724.4023 8487.0537 C
-7724.6514 8487.1885 -7724.8784 8487.3486 -7725.1621 8487.2529 C
-7725.1055 8487.2109 -7725.0283 8487.1982 -7725.0122 8487.1025 C
-7725.1904 8486.9717 -7725.2344 8487.0889 -7725.3975 8487.1611 C
-7725.3608 8487.0947 -7725.7539 8486.9004 -7725.9521 8486.7432 C
-7726.1992 8486.876 -7726.1143 8487.1162 -7726.1392 8487.2627 C
-7726.3652 8486.8232 -7726.8379 8487.5459 -7727.1211 8487.1475 C
-7727.0352 8487.0869 -7726.7598 8486.9316 -7726.9658 8486.8213 C
-7727.1919 8486.3828 -7727.4219 8487.1455 -7727.7861 8486.9346 C
-7727.6968 8487.2988 L
-7727.8594 8487.0732 -7728.2334 8487.5107 -7728.1963 8487.1396 C
-7728.3184 8487.2705 -7728.6265 8487.0186 -7728.5859 8487.374 C
-7729.1846 8487.0732 -7730.0425 8487.5557 -7730.4102 8486.918 C
-7730.4961 8486.9775 -7730.7104 8486.917 -7730.6665 8487.0996 C
-7730.5239 8487.2979 -7730.4673 8486.958 -7730.4141 8487.0928 C
-7730.4912 8487.1035 -7730.5078 8487.2012 -7730.5161 8487.25 C
-7730.7021 8487.1689 -7730.8486 8487.1436 -7730.6729 8486.8477 C
-7731.0869 8486.6279 -7731.1001 8487.4521 -7731.6274 8487.3135 C
-7731.6035 8487.166 -7731.6436 8487.1104 -7731.7979 8487.1338 C
-7732.0903 8487.3857 L
-7732.4312 8487.3271 -7732.2842 8487.0508 -7732.2925 8486.8018 C
-7732.4746 8486.8447 -7732.6973 8486.833 -7732.7803 8487.0186 C
-7733.0015 8486.7061 L
-7732.8398 8486.9316 -7733.1514 8486.8564 -7733.2368 8486.917 C
-7733.1514 8486.8564 L
-7733.1846 8486.75 -7733.3955 8486.8154 -7733.5024 8486.8467 C
-7733.4766 8487.001 -7733.2617 8487.0635 -7733.1445 8487.1084 C
-7733.2373 8487.2178 -7733.3823 8487.1924 -7733.5059 8487.3213 C
-7733.4648 8487.0771 -7733.8027 8487.1475 -7733.9473 8487.1221 C
-7734.1133 8487.0693 -7734.1348 8487.3408 -7734.1831 8487.333 C
-7734.1875 8487.2061 -7734.4541 8487.3115 -7734.3247 8487.1338 C
-7734.2681 8487.0928 -7734.1953 8487.2568 -7734.1016 8487.1455 C
-7734.2109 8487.0508 -7734.1982 8486.8301 -7734.4258 8486.9912 C
-7734.5967 8487.1123 -7734.3818 8487.4736 -7734.7061 8487.3193 C
-7734.6211 8487.2588 -7734.6055 8487.1611 -7734.5391 8487.0732 C
-7734.8433 8486.9463 L
-7734.8564 8487.1689 L
-7734.8975 8487.1123 -7734.8691 8487.0928 -7734.8877 8487.0635 C
-7734.9785 8487.2979 -7735.3521 8487.1357 -7735.4209 8487.3994 C
-7735.5742 8487.4229 -7735.7441 8487.2451 -7735.8906 8487.2197 C
-7735.8623 8487.2002 L
-7736.0415 8487.0693 -7736.2793 8487.1553 -7736.4297 8487.3057 C
-7736.4219 8487.2568 L
-7736.5195 8487.2393 -7736.7505 8487.2744 -7736.8735 8487.4053 C
-7737.1201 8487.2373 -7736.9561 8486.5645 -7737.2295 8486.8447 C
-7737.48 8486.8525 -7737.6221 8487.2529 -7737.5215 8487.3955 C
-7737.9717 8487.2451 -7738.4834 8487.6084 -7738.9009 8487.2627 C
-7738.9658 8487.3525 -7738.9248 8487.4092 -7739.0586 8487.4619 C
-7739.7197 8487.374 -7740.4551 8487.7256 -7740.9814 8487.2881 C
-7740.79 8487.1943 -7740.9688 8487.0654 -7740.9727 8486.9385 C
-7741.1309 8487.1377 -7741.1631 8486.7314 -7741.2197 8487.0732 C
-7741.2041 8487.2744 -7741.2197 8487.3721 -7741.0337 8487.4531 C
-7741.4282 8487.5615 -7742.0283 8487.5615 -7742.2471 8487.374 C
-7742.1377 8487.4668 -7742.2227 8487.5283 -7742.3086 8487.5889 C
-7742.2803 8487.2676 -7742.5713 8487.2197 -7742.7915 8487.333 C
-7742.8223 8487.5283 L
-7742.9658 8487.3271 L
-7743.0503 8487.3896 -7743.0591 8487.7373 -7743.2773 8487.5498 C
-7743.2891 8487.4736 -7743.3018 8487.3965 -7743.3418 8487.3408 C
-7743.5693 8487.501 -7743.8906 8487.7725 -7744.1377 8487.6064 C
-7744.3398 8487.3213 L
-7744.4453 8487.3525 -7744.6235 8487.5244 -7744.4375 8487.6064 C
-7744.8594 8487.4346 -7745.1309 8487.4131 -7745.2646 8487.166 C
-7745.9912 8487.7676 -7747.0459 8487.792 -7747.8906 8487.749 C
-7747.8652 8487.6025 L
-7748.0923 8487.4658 -7747.9834 8487.8584 -7748.1416 8487.7568 C
-7748.0684 8487.6172 -7748.3145 8487.4531 -7748.1362 8487.2822 C
-7748.4609 8487.1279 -7748.5547 8487.5361 -7748.7656 8487.6025 C
-7748.7979 8487.7949 -7748.5957 8487.4795 -7748.6367 8487.7236 C
-7748.6729 8487.792 -7749.0859 8487.5732 -7749.1362 8487.8643 C
-7749.2178 8487.75 -7749.1543 8487.5361 -7749.1104 8487.418 C
-7749.3086 8487.5596 L
-7749.5513 8487.2197 -7748.7559 8486.9521 -7749.0107 8486.5332 C
-7749.1934 8486.5791 L
-7749.3682 8486.2744 -7748.71 8486.2354 -7749.1689 8486.1309 C
-7749.3682 8486.2744 -7749.5381 8486.6963 -7749.3608 8486.8252 C
-7749.7754 8486.9053 -7749.5527 8487.5186 -7749.9985 8487.4941 C
-7750.1201 8487.3232 -7749.6416 8487.4531 -7749.7275 8487.2139 C
-7749.9375 8486.9795 -7750.1484 8487.3447 -7750.3354 8487.2627 C
-7750.1279 8487.3721 -7750.3032 8487.666 -7750.4375 8487.7197 C
-7750.6641 8487.582 -7750.29 8487.4443 -7750.6113 8487.4141 C
-7750.6641 8487.582 -7750.9595 8487.708 -7750.7041 8487.8252 C
-7750.8203 8488.2061 -7751.0381 8487.7197 -7751.2129 8488.0146 C
-7751.3174 8487.7471 -7750.8823 8487.3955 -7751.2354 8487.2617 C
-7751.1792 8487.5195 -7751.6704 8487.6123 -7751.4839 8487.9951 C
-7751.6221 8487.9209 -7751.6367 8487.7178 -7751.5361 8487.5596 C
-7751.7334 8487.4004 -7752.0151 8488.0303 -7752.0801 8487.5186 C
-7752.1479 8487.7822 L
-7752.21 8487.6963 -7752.2983 8487.6318 -7752.3994 8487.4893 C
-7752.5732 8487.4844 -7752.96 8487.8467 -7752.9443 8487.4482 C
-7753 8487.4893 -7753.3975 8487.4717 -7753.2441 8487.7471 C
-7752.9971 8487.915 -7752.96 8487.5459 -7752.8223 8487.918 C
-7752.9971 8487.6143 -7753.1787 8487.958 -7753.3213 8488.0596 C
-7753.3447 8487.9053 L
-7753.4297 8487.9658 -7753.6255 8487.9316 -7753.6787 8488.0986 C
-7753.6133 8488.0107 -7753.6475 8487.9053 -7753.7148 8487.8682 C
-7753.8042 8488.1025 L
-7754.1494 8488.2197 -7753.8857 8487.6904 -7754.2217 8487.7588 C
-7753.9663 8487.5771 L
-7754.0225 8487.6162 -7754.1367 8487.3965 -7754.2979 8487.4697 C
-7754.3604 8487.6836 -7754.4775 8487.9404 -7754.5313 8488.1064 C
-7754.7207 8488.2002 -7754.6162 8487.8652 -7754.8027 8488.085 C
-7754.5586 8487.8271 L
-7754.5215 8487.7568 -7754.7231 8487.4736 -7754.9761 8487.4795 C
-7755.1377 8487.5537 -7755.3887 8487.8623 -7755.1338 8487.9795 C
-7755.2607 8487.9834 -7755.4385 8487.8525 -7755.3379 8487.6963 C
-7755.6255 8487.7705 -7755.2998 8487.9268 -7755.5479 8488.0596 C
-7755.6494 8487.917 -7755.9658 8487.7139 -7756.1563 8487.5068 C
-7755.8975 8487.1484 L
-7756.0693 8487.1455 L
-7755.8467 8486.8584 -7756.1826 8486.9268 -7756.0566 8486.624 C
-7756.1743 8486.5771 -7756.3169 8486.6797 -7756.4307 8486.7588 C
-7756.0864 8487.2432 -7756.8159 8487.4209 -7756.7158 8487.8623 C
-7757.1875 8487.9834 -7757.0107 8486.7881 -7757.5024 8487.4795 C
-7757.4219 8487.5947 -7757.6533 8487.9307 -7757.3564 8487.8027 C
-7757.6494 8487.7549 -7757.5557 8488.2461 -7757.9014 8488.0635 C
-7757.6455 8487.8818 -7758.1763 8487.6162 -7757.8066 8487.3525 C
-7757.8311 8487.499 -7757.6001 8487.4639 -7757.5435 8487.4229 C
-7757.6641 8487.2529 -7757.5186 8486.9775 -7757.8184 8486.9775 C
-7758.0015 8487.0195 -7758.2524 8487.0283 -7758.2158 8487.2588 C
-7758.2085 8487.5117 -7757.9365 8487.2314 -7758.0537 8487.4873 C
-7758.4185 8487.5752 -7758.4795 8487.1904 -7758.6304 8487.6396 C
-7758.3999 8487.6035 -7758.3423 8487.8643 -7758.3467 8488.0381 C
-7758.6143 8488.1436 L
-7758.5625 8487.9756 L
-7758.9922 8487.8545 -7758.6895 8488.2803 -7759.1055 8488.2354 C
-7759.3008 8487.9033 L
-7759.2017 8487.6172 -7758.6953 8488.0303 -7758.7695 8487.5645 C
-7759.04 8487.5459 -7759.1299 8487.7822 -7759.3848 8487.6621 C
-7759.3281 8487.6221 -7759.2505 8487.6104 -7759.1943 8487.5693 C
-7759.2915 8487.5537 -7759.3877 8486.9365 -7759.7734 8487.2979 C
-7759.9727 8487.4385 -7759.8262 8487.4639 -7759.8311 8487.6377 C
-7760.2656 8487.6904 -7760.3955 8487.8682 -7760.6753 8487.8955 C
-7760.6177 8487.5557 -7761.1699 8487.8623 -7760.8608 8487.5146 C
-7760.7188 8487.7139 -7760.0903 8487.6943 -7759.9365 8487.3701 C
-7760.0947 8486.9668 -7759.5952 8487.4268 -7759.5024 8487.0186 C
-7759.8506 8487.0088 -7759.8335 8486.6123 -7759.8896 8486.3525 C
-7759.9863 8486.334 -7760.0801 8486.4443 -7760.1377 8486.4844 C
-7760.1787 8486.7295 -7760.0522 8486.7256 -7760.0449 8486.9775 C
-7760.4336 8486.9111 -7760.8081 8487.0479 -7761.0225 8487.2861 C
-7761.1523 8487.165 -7761.1113 8486.9209 -7760.9575 8486.8975 C
-7761.4199 8486.9697 -7761.9141 8486.9365 -7762.3535 8486.8623 C
-7762.0693 8487.2617 -7762.8433 8486.9561 -7762.6494 8487.2881 C
-7762.4141 8487.3779 -7762.2119 8487.6621 -7762.3418 8487.8408 C
-7762.4888 8487.8154 -7762.3369 8487.666 -7762.3984 8487.5811 C
-7762.5859 8487.7988 -7762.6895 8487.2314 -7762.8735 8487.5752 C
-7762.4512 8487.4463 -7762.7915 8487.0889 -7762.7139 8486.7764 C
-7763.0186 8486.9521 -7762.7007 8486.5537 -7763.0024 8486.5537 C
-7763.3057 8486.7275 -7763.6787 8486.8643 -7764.0161 8486.9316 C
-7764.4399 8486.6357 -7765.0898 8486.9268 -7765.4683 8486.9385 C
-7765.6665 8486.7803 -7765.5322 8486.4268 -7765.7471 8486.3652 C
-7765.9995 8486.3721 -7765.5601 8486.7471 -7765.9336 8486.585 C
-7765.8975 8486.5146 L
-7766.0107 8486.5967 -7766.5825 8486.2744 -7766.6929 8486.7822 C
-7766.5776 8486.3994 L
-7766.6475 8486.3643 -7766.7119 8486.4521 -7766.7695 8486.4932 C
-7766.7725 8486.3682 -7766.8535 8486.2549 -7766.7402 8486.1729 C
-7766.9707 8485.9092 -7767.2241 8486.2148 -7767.4746 8486.2256 C
-7767.3135 8486.4521 L
-7767.7422 8486.6299 -7768.0293 8486.4053 -7768.4443 8486.4844 C
-7768.4316 8486.2627 L
-7768.6787 8486.3955 L
-7768.6182 8486.1807 -7768.8447 8486.042 -7768.9751 8486.2217 C
-7768.3335 8485.6787 L
-7768.1553 8485.8096 -7768.5283 8485.9463 -7768.4165 8486.165 C
-7768.3213 8486.3564 -7767.9375 8486.2959 -7767.8755 8486.082 C
-7768.0225 8486.0576 -7768.0293 8486.1064 -7768.1436 8486.1865 C
-7768.1919 8485.8779 -7767.9688 8485.8896 -7767.8584 8485.6836 C
-7767.9355 8485.6963 -7768.0449 8485.6025 -7768.0615 8485.7002 C
-7767.9102 8485.5498 -7767.7578 8485.5264 -7767.5059 8485.5186 C
-7767.6763 8485.6396 -7767.4131 8485.71 -7767.4775 8485.7979 C
-7767.4575 8485.5264 -7767.2168 8485.4424 -7766.9053 8485.5186 C
-7766.6831 8485.833 -7766.3208 8485.3164 -7765.96 8485.4033 C
-7766.1064 8485.6787 -7766.2935 8485.8994 -7766.5127 8486.0107 C
-7766.2861 8486.1484 -7766.2607 8486.0029 -7766.0337 8486.1416 C
-7765.9238 8485.9365 -7765.8457 8485.6221 -7765.5503 8485.4971 C
-7765.5342 8485.7002 L
-7765.2666 8485.5967 -7765.2666 8485.2959 -7764.9258 8485.3525 C
-7764.3418 8485.4521 -7763.7407 8485.4521 -7763.2949 8485.4775 C
-7763.2783 8485.6797 L
-7763.0303 8485.2461 -7762.4521 8485.5195 -7762.1182 8485.3271 C
-7761.5503 8485.5225 -7760.8848 8485.1338 -7760.5938 8485.4834 C
-7759.5913 8485.3271 -7758.7148 8485.1748 -7757.6768 8485.249 C
-7757.8516 8485.5439 L
-7757.6655 8485.3271 -7757.7305 8485.7139 -7757.5479 8485.6699 C
-7757.7578 8485.4346 -7757.2949 8485.3643 -7757.1665 8485.1836 C
-7756.7041 8485.4131 -7756.1104 8485.1631 -7755.7007 8484.9561 C
-7755.6846 8485.1592 L
-7755.2705 8484.7783 -7754.7759 8485.1123 -7754.2598 8485.1748 C
-7754.2007 8485.2588 -7754.1074 8485.4492 -7753.9536 8485.4268 C
-7753.6738 8485.0986 -7753.5273 8485.1221 -7753.1167 8484.917 C
-7752.8169 8484.917 -7752.3301 8484.998 -7752.0254 8485.126 C
-7750.8975 8484.665 -7749.7456 8484.96 -7748.5732 8484.6826 C
-7748.4888 8484.9209 L
-7747.3521 8484.4111 -7745.9541 8484.874 -7744.9839 8484.6123 C
-7745.0776 8485.0195 L
-7744.7734 8485.1455 -7744.3843 8484.9131 -7744.4619 8484.624 C
-7744.1567 8484.749 -7743.7007 8484.4268 -7743.5068 8484.7617 C
-7743.1953 8484.8369 -7743.1255 8484.5732 -7742.8662 8484.5186 C
-7742.2422 8484.6729 -7742.0107 8484.6377 -7741.4224 8484.5615 C
-7741.5684 8484.5361 L
-7741.6328 8484.626 -7741.6387 8484.7988 -7741.4922 8484.8252 C
-7741.2725 8484.7119 -7740.6846 8484.9346 -7740.9033 8484.4482 C
-7740.2754 8484.7295 -7739.4385 8484.2197 -7738.8271 8484.5986 C
-7738.8789 8484.4658 -7738.7246 8484.4404 -7738.6602 8484.3506 C
-7738.1089 8484.3447 -7737.5293 8484.6162 -7737.0898 8484.3896 C
-7737.0024 8484.4561 -7737.2295 8484.6162 -7737.0049 8484.6299 C
-7736.8721 8484.5791 -7737.0024 8484.4561 -7736.8384 8484.3818 C
-7735.9453 8484.1338 -7735.0303 8484.6377 -7734.2188 8484.5732 C
-7732.7754 8484.3164 -7731.2695 8484.4463 -7729.8867 8484.4033 C
-7729.9023 8484.501 L
-7729.4395 8484.1279 -7728.8159 8484.8828 -7728.4463 8484.3213 C
-7728.3369 8484.4141 -7728.0283 8484.3652 -7728.1094 8484.5537 C
-7727.7407 8484.29 -7727.0771 8484.8018 -7726.5439 8484.4668 C
-7726.5928 8484.458 -7726.6211 8484.4775 -7726.6777 8484.5195 C
-7726.1392 8484.7354 -7725.6641 8484.4404 -7725.0957 8484.6357 C
-7725.1533 8484.6777 -7725.2583 8484.708 -7725.2754 8484.8057 C
-7725.0557 8484.9932 -7724.7549 8484.3936 -7724.6348 8484.8643 C
-7724.5088 8484.8604 -7724.5449 8484.6279 -7724.6221 8484.6416 C
-7723.3779 8484.8252 -7722.0498 8484.5244 -7720.7549 8484.417 C
-7719.8271 8484.6982 -7720.6982 8485.21 -7719.9663 8484.8584 C
-7719.9063 8484.9492 -7719.9229 8484.6787 -7719.9131 8484.7764 C
-7719.6299 8484.6445 -7719.4717 8485.3018 -7719.2754 8485.0557 C
-7719.3564 8484.7666 -7719.1445 8484.8936 -7719.1387 8484.7178 C
-7718.5713 8484.9053 -7718.4575 8485.166 -7718.0098 8484.9463 C
-7718.0435 8485.0986 L
-7717.5186 8484.6689 -7716.9102 8484.8994 -7716.4673 8484.4033 C
-7713.5728 8484.3135 -7710.7983 8484.0381 -7707.9761 8483.9805 C
-7705.1865 8484.0752 -7702.4551 8483.8525 -7699.6221 8484.1162 C
-7698.9585 8484.5156 -7698.9087 8484.5049 -7698.1797 8484.3428 C
-7698.2095 8484.4072 -7698.2549 8484.4229 -7698.2061 8484.4834 C
-7698.1699 8484.1553 -7697.6929 8484.4521 -7697.6235 8484.1396 C
-7696.5762 8484.2002 -7695.6113 8484.1104 -7694.5337 8484.1084 C
-7694.7041 8484.1436 -7694.7896 8484.4111 -7694.5869 8484.3896 C
-7694.3755 8484.1807 L
-7694.3408 8484.2725 L
-7694.2021 8484.2236 -7694.0513 8484.0615 -7694.1943 8483.9561 C
-7691.4873 8483.6729 -7688.8242 8484.3311 -7686.1729 8484.25 C
-7685.5435 8484.3867 -7684.6475 8484.2617 -7683.9629 8484.1943 C
-7681.9355 8484.6318 -7680.1079 8484.9844 -7678.0479 8484.6787 C
-7678.3169 8485.5264 -7679.1675 8485.7217 V
f
-7769.2578 8485.5225 m
-7769.1855 8485.6865 -7768.9497 8485.7764 -7769.1377 8485.9951 C
-7769.1611 8485.8408 -7769.2822 8485.6689 -7769.2578 8485.5225 C
f
-7762.9619 8487.21 m
-7762.9536 8487.1611 -7762.8721 8487.2764 -7762.8521 8487.3027 C
-7762.9297 8487.3154 -7763.0024 8487.4531 -7763.0645 8487.3682 C
-7762.9854 8487.3564 -7762.9976 8487.2783 -7762.9619 8487.21 C
f
-7761.3521 8487.3076 m
-7761.3765 8487.4531 -7761.7207 8487.5693 -7761.9238 8487.5869 C
-7761.3521 8487.3076 L
f
-7759.8521 8487.9092 m
-7759.7227 8488.0322 -7759.7583 8488.0996 -7759.9326 8488.0957 C
-7759.9453 8488.0186 -7759.8877 8487.9795 -7759.8521 8487.9092 C
f
-7759.7456 8487.5771 m
-7759.6211 8487.5732 -7759.5591 8487.6592 -7759.4985 8487.7432 C
-7759.5029 8487.6172 -7759.7871 8487.8213 -7759.7456 8487.5771 C
f
-7756.4893 8488.001 m
-7756.4111 8487.9893 -7756.2417 8487.8682 -7756.1689 8488.0303 C
-7756.2505 8487.917 -7756.5498 8488.2148 -7756.4893 8488.001 C
f
-7754.9761 8487.7803 m
-7754.9272 8487.79 -7754.9072 8487.8164 -7754.8506 8487.7764 C
-7754.7607 8487.8428 -7754.8555 8487.9492 -7754.9312 8487.9629 C
-7754.9761 8487.7803 L
f
-7727.4287 8487.1943 m
-7727.5923 8487.2666 L
-7727.5684 8487.1221 L
-7727.4287 8487.1943 L
f
-7715.3574 8487.1865 m
-7715.1943 8487.0947 -7715.2441 8487.3232 -7715.2168 8487.3447 C
-7715.3643 8487.3604 -7715.1621 8487.165 -7715.3574 8487.1865 C
f
-7708.8486 8486.458 m
-7708.8984 8486.4619 L
-7708.8818 8486.1631 L
-7708.8486 8486.458 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 55)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7743.9727 8488.2803 m
-7743.9727 8462.252 L
-7770 8462.252 L
-7770 8488.2803 L
-7743.9727 8488.2803 L
n
0 Ap
0 R
0.7084 0.636438 0.515526 0.381872 K
1.125 w-7770 8470.9268 m
-7743.9727 8470.9268 l
S
0.64 0.650477 0.701045 0.510735 K
-7770 8479.6045 m
-7743.9727 8479.6045 l
S
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7770 8475.2656 m
-7743.9727 8475.2656 l
S
0 O
0.597742 0.537865 0.64184 0.350469 k
1 w-7748.5742 8475.292 m
-7748.3442 8475.0205 -7748.6914 8474.7344 -7749 8474.5234 c
-7749.1118 8474.4463 -7749.5215 8474.6592 -7749.7466 8474.4932 c
-7750.0439 8474.2754 -7750.1826 8474.1885 -7750.4824 8474.1943 c
-7750.6455 8474.1982 -7751.0435 8474.3281 -7751.1895 8474.3584 c
-7751.5679 8474.4346 -7751.8022 8474.6318 -7752.3672 8474.5352 c
-7752.7344 8474.4717 -7752.8286 8474.3809 -7752.9233 8474.4287 c
-7753.1118 8474.5703 -7753.2202 8474.7939 -7753.4258 8474.8428 c
-7753.9575 8474.9697 -7754.3535 8475.0137 -7754.8818 8475.0029 c
-7755.3047 8474.9932 -7756.4185 8475.0615 -7757.2866 8474.9619 c
-7757.6226 8474.9219 -7757.6025 8474.4971 -7757.7695 8474.4932 c
-7757.8618 8474.4912 -7757.7646 8474.8066 -7757.8306 8474.8271 c
-7758.1694 8474.9336 -7758.4702 8473.7832 -7758.6943 8473.8525 c
-7758.8047 8473.8877 -7758.5562 8474.4336 -7758.6729 8474.4619 c
-7758.8975 8474.5176 -7759.2178 8473.499 -7759.4321 8473.5615 c
-7759.5635 8473.5986 -7759.2886 8474.0186 -7759.4375 8474.0869 c
-7759.6655 8474.1914 -7759.9087 8473.3154 -7760.1064 8473.4141 C
-7760.1543 8473.4619 -7759.7295 8474.2178 -7760.1685 8474.1592 c
-7760.2871 8474.1416 -7760.5054 8473.5938 -7760.5801 8473.6201 c
-7760.6919 8473.6602 -7760.3535 8474.082 -7760.4897 8474.208 C
-7760.7681 8474.4346 -7761.3711 8473.4434 -7761.4575 8473.5146 c
-7761.5791 8473.6162 -7761.1279 8474.3779 -7761.2695 8474.4463 C
-7761.4497 8474.71 -7762.0142 8473.833 -7762.0889 8473.8818 c
-7762.1777 8473.9404 -7761.9058 8474.3184 -7761.8799 8474.5137 c
-7761.8545 8474.708 -7761.9966 8474.8418 -7762.2144 8474.79 c
-7762.4736 8474.7275 -7762.8696 8473.9219 -7762.9727 8474.0156 C
-7763.0791 8474.0713 -7762.8682 8474.3584 -7762.7954 8474.5928 c
-7762.7583 8474.708 -7762.8882 8474.8818 -7763.0298 8474.8818 c
-7763.3135 8474.9297 -7763.6255 8474.2783 -7763.7065 8474.3828 c
-7763.7524 8474.4424 -7763.5898 8474.7705 -7763.7295 8474.8682 c
-7763.8994 8474.9863 -7764.3115 8474.5186 -7764.4521 8474.5732 C
-7764.5361 8474.6221 -7764.4126 8474.877 -7764.4927 8474.9336 c
-7764.7295 8475.0996 -7765.0039 8474.7012 -7765.0513 8474.749 C
-7765.1167 8474.7715 -7765.1201 8474.8164 -7765.2793 8474.9209 c
-7765.4736 8475.0479 -7765.5254 8475.1289 -7765.5425 8475.2451 c
-7765.5654 8475.3633 -7765.3135 8475.6553 -7765.1655 8475.6299 c
-7764.8223 8475.5703 -7764.8662 8476.1299 -7764.6328 8475.9961 c
-7764.5679 8475.96 -7764.6592 8475.5391 -7764.4199 8475.5459 c
-7764.0488 8475.5586 -7763.9858 8476.1016 -7763.7817 8476.0908 c
-7763.6406 8476.084 -7763.8521 8475.4639 -7763.6328 8475.541 c
-7763.4751 8475.5967 -7763.0063 8476.582 -7762.9795 8476.4902 c
-7762.8975 8476.2227 -7763.0703 8475.6787 -7762.9409 8475.6885 c
-7762.7568 8475.7031 -7762.5078 8476.5977 -7762.2544 8476.7178 c
-7762.1826 8476.7529 -7762.3774 8475.8809 -7762.1958 8475.877 C
-7762.0898 8475.9268 -7761.7578 8476.7295 -7761.6274 8476.7783 C
-7761.5591 8476.7627 -7761.5879 8476.4053 -7761.5176 8476.3848 c
-7761.4688 8476.3701 -7761.2817 8476.8457 -7761.21 8476.8037 c
-7761.1055 8476.7432 -7761.2471 8476.2725 -7761.0889 8476.2031 c
-7760.9175 8476.1289 -7760.4878 8477.1729 -7760.3486 8477.0781 c
-7760.2769 8477.0303 -7760.3574 8476.4902 -7760.21 8476.5264 c
-7760.0718 8476.5586 -7759.9414 8476.8945 -7759.8081 8476.9229 c
-7759.7295 8476.9385 -7759.7935 8476.4717 -7759.7495 8476.4541 c
-7759.5889 8476.3955 -7759.2329 8476.9521 -7759.0688 8476.8037 c
-7758.8584 8476.6152 -7758.9395 8476.25 -7758.8345 8476.2627 c
-7758.6274 8476.2861 -7758.4912 8476.5234 -7758.4146 8476.4639 c
-7758.2642 8476.3486 -7758.3281 8476.0596 -7758.0527 8475.9727 c
-7757.8975 8475.9229 -7757.7935 8476.2148 -7757.7495 8476.2109 c
-7757.6738 8476.208 -7757.6782 8476.1104 -7757.6665 8476.0049 c
-7757.6328 8475.7412 -7757.6064 8475.6797 -7757.4878 8475.6572 c
-7757.0854 8475.6338 -7756.5625 8475.5645 -7756.1807 8475.5557 c
-7755.6274 8475.541 -7754.2607 8475.5176 -7754.1182 8475.5176 c
-7754 8475.4932 -7753.7432 8475.6748 -7753.6689 8475.7412 c
-7753.4678 8475.9258 -7753.2998 8476.1396 -7752.9858 8476.4004 c
-7752.8906 8476.4814 -7752.8081 8476.4609 -7752.7378 8476.4365 c
-7752.5249 8476.3652 -7752.4585 8476.3135 -7752.2202 8476.2822 c
-7751.9175 8476.2393 -7751.4272 8476.3291 -7751.1245 8476.4229 c
-7750.6035 8476.582 -7750.5264 8476.6045 -7750.0977 8476.5557 c
-7749.6992 8476.5098 -7749.0586 8476.4385 -7749.0479 8476.0908 c
-7749.0415 8475.876 -7748.9414 8475.7236 -7748.5742 8475.292 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 56)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7743.9722 8488.2803 m
-7743.9722 8462.2529 L
-7770 8462.2529 L
-7770 8488.2803 L
-7743.9722 8488.2803 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7752.6455 8475.2695 m
-7743.9736 8475.2695 l
S
-7756.9839 8488.2803 m
-7756.9839 8479.6045 l
S
0.7084 0.636438 0.515526 0.381872 K
1.125 w-7752.7202 8470.9307 m
-7743.9727 8470.9307 l
S
-7761.3232 8488.2793 m
-7761.3232 8478.9258 l
S
0.64 0.650477 0.701045 0.510735 K
-7752.6504 8488.2793 m
-7752.6504 8485.8672 l
-7749.9937 8485.6436 -7748.3096 8483.9404 v
-7746.6064 8482.2139 -7746.3774 8479.6084 y
-7743.9727 8479.6084 l
S
*u
1 D
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-7760.8418 8472.4658 m
-7760.8418 8472.5303 -7760.8218 8472.5713 -7760.7783 8472.5713 c
-7760.6943 8472.5713 -7760.4634 8472.2344 -7760.3994 8472.2344 c
-7760.3154 8472.2344 -7760.2729 8472.2764 -7760.2729 8472.3818 c
-7760.2729 8472.4658 -7760.5264 8473.373 y
-7760.5264 8473.4141 -7760.5264 8473.4141 -7760.5049 8473.4141 c
-7760.4414 8473.4141 -7760.0615 8472.8672 -7759.9351 8472.8672 c
-7759.9146 8472.8672 -7759.8936 8472.8877 -7759.8936 8472.9092 c
-7760.1675 8473.8154 -7760.1675 8474.0059 v
-7760.1675 8474.0693 -7760.1675 8474.0908 -7760.1465 8474.0908 c
-7760.1055 8474.0908 -7759.6826 8473.5205 -7759.5562 8473.5205 c
-7759.5352 8473.5205 -7759.5137 8473.541 -7759.5137 8473.5625 c
-7759.5137 8473.626 -7759.7666 8474.3643 -7759.7666 8474.5322 c
-7759.7666 8474.5752 -7759.7666 8474.5752 -7759.7446 8474.5752 c
-7759.6826 8474.5752 -7759.4722 8474.3643 -7759.4297 8474.3643 c
-7759.4082 8474.3643 -7759.3882 8474.3857 -7759.3882 8474.4063 c
-7759.3882 8474.4268 -7759.4927 8474.7861 -7759.4927 8474.8701 c
-7759.4927 8474.8916 -7759.4927 8474.8916 -7759.4722 8474.8916 c
-7759.4297 8474.8916 -7759.0918 8474.5322 -7759.0078 8474.5322 c
-7758.9658 8474.5322 -7758.9233 8474.5752 -7758.9233 8474.6592 c
-7758.9233 8474.8076 -7759.1138 8475.5244 -7759.1138 8475.5664 c
-7759.1138 8475.6504 -7759.0918 8475.6924 -7759.0498 8475.6924 c
-7758.9658 8475.6924 -7758.7119 8475.376 -7758.6494 8475.376 c
-7758.5854 8475.376 -7758.5439 8475.3965 -7758.5439 8475.4609 c
-7758.5854 8475.8818 L
-7758.5854 8475.9463 -7758.5854 8475.9658 -7758.5654 8475.9658 c
-7758.5225 8475.9658 -7758.2915 8475.6719 -7758.2065 8475.6719 c
-7758.1006 8475.6719 -7758.1006 8476.1572 -7758.1006 8476.2197 c
-7758.1006 8476.3252 -7758.0166 8476.4092 -7757.8896 8476.4092 c
-7757.8057 8476.4092 -7757.4678 8476.1777 -7757.4473 8476.1777 c
-7757.3623 8476.1777 -7757.3198 8476.6201 -7757.2568 8476.6201 c
-7757.1943 8476.6201 -7756.9199 8476.4932 -7756.8564 8476.4932 c
-7756.6455 8476.4932 -7756.6035 8476.5791 -7756.6035 8476.7471 c
-7756.6255 8476.8945 L
-7756.6255 8476.9365 -7756.6035 8476.9365 -7756.5835 8476.9365 c
-7756.4985 8476.9365 -7756.2241 8476.6621 -7756.1392 8476.6621 c
-7755.9287 8476.6621 -7753.8198 8478.7295 -7753.5454 8479.0029 c
-7753.3984 8479.1709 -7753.3984 8479.4668 -7753.3984 8479.5938 c
-7753.3984 8480.458 -7753.3984 8480.542 -7753.2295 8480.626 c
-7752.5977 8480.8799 -7752.5127 8481.0273 -7751.7334 8482.3135 c
-7751.6479 8482.4609 -7750.7407 8483.0732 -7750.5942 8483.0732 c
-7750.4878 8483.0732 -7750.1094 8482.8193 -7750.0239 8482.8193 c
-7749.9194 8482.8193 -7749.8135 8482.8828 -7749.8135 8483.0508 c
-7749.8135 8483.4941 -7750.3408 8484.001 -7750.9312 8484.001 c
-7751.7534 8484.001 -7752.0913 8483.3037 -7752.1338 8482.9053 c
-7752.1543 8482.7568 -7752.2393 8482.6719 -7752.3447 8482.6719 c
-7752.3862 8482.6719 -7752.4287 8482.6924 -7752.4702 8482.7568 c
-7752.9561 8483.5576 -7753.9473 8484.001 -7754.7065 8484.001 c
-7755.7393 8484.001 -7756.8774 8483.3682 -7757.3418 8483.0947 c
-7757.7842 8482.8418 -7758.4814 8482.6719 -7758.8809 8482.6719 c
-7759.3242 8482.6719 -7759.3662 8482.8193 -7759.3662 8483.0732 c
-7759.3662 8483.2207 -7758.9023 8483.6621 -7758.9023 8483.79 c
-7758.9023 8483.916 -7759.0498 8484.001 -7759.4082 8484.001 c
-7759.8936 8484.001 -7760.5679 8483.2832 -7760.5679 8482.5039 c
-7760.5679 8481.8916 -7759.7666 8481.3652 -7759.3022 8481.3652 c
-7758.3755 8481.3652 -7758.0942 8481.7236 -7757.5264 8482.1875 c
-7757.4414 8482.25 -7757.3774 8482.2725 -7757.3359 8482.2725 c
-7757.1895 8482.2725 -7757.1895 8481.1748 -7757.1895 8481.0498 c
-7757.1895 8480.9004 -7757.2729 8480.8379 -7757.3774 8480.8379 c
-7759.7822 8480.8379 -7764.6592 8479.6143 -7766.3672 8473.458 c
-7766.4297 8473.2461 -7766.5361 8473.1416 -7766.6406 8473.1416 c
-7766.7881 8473.1416 -7767.7793 8473.9844 -7767.7793 8475.5664 c
-7767.7793 8477.4004 -7766.5767 8478.3701 -7765.9873 8478.3701 c
-7765.8398 8478.3701 -7765.6494 8478.3496 -7765.6494 8478.2012 c
-7765.6494 8478.1387 -7765.6929 8478.0752 -7765.7759 8477.9697 c
-7766.1143 8477.6338 -7766.3672 8477 -7766.3672 8476.6836 c
-7766.3672 8476.4717 -7766.2607 8476.3037 -7766.1143 8476.3037 c
-7765.9033 8476.3037 -7765.5654 8477.2529 -7765.46 8477.4004 c
-7765.3335 8477.6113 -7764.9546 8477.9912 -7764.2378 8478.5186 c
-7763.4995 8479.0439 -7762.0654 8480.3525 -7762.0654 8481.6172 c
-7762.0654 8482.9893 -7763.1191 8483.8955 -7763.9209 8483.8955 c
-7764.7007 8483.8955 -7765.6714 8483.3682 -7766.0713 8482.8828 c
-7766.7041 8482.1455 -7767.3154 8481.5752 -7767.8218 8481.5752 c
-7768.1592 8481.5752 -7768.3066 8481.7861 -7768.3066 8481.9971 c
-7768.3066 8482.334 -7768.0537 8482.5664 -7767.5479 8482.6084 c
-7766.9575 8482.6514 -7766.8936 8483.0732 -7766.8936 8483.4092 c
-7766.8936 8483.6836 -7767.4209 8484.001 -7767.8433 8484.001 c
-7768.4751 8484.001 -7769.2974 8483.3037 -7769.2974 8481.4707 c
-7769.2974 8479.9727 -7768.0537 8479.5098 -7767.5679 8479.5098 c
-7767.1265 8479.5098 -7766.4722 8479.5938 -7766.0928 8479.9307 c
-7764.8066 8481.1338 -7764.1318 8481.3428 -7763.5835 8481.3428 c
-7763.3721 8481.3428 -7763.2881 8481.3428 -7763.2881 8481.4912 c
-7763.2881 8481.8076 -7764.0474 8481.9971 -7764.1318 8482.0186 c
-7764.3423 8482.0811 -7764.5103 8482.3135 -7764.5103 8482.5244 c
-7764.5103 8483.0098 -7764.2378 8483.0303 -7763.8774 8483.0303 c
-7763.5215 8483.0303 -7762.8042 8482.6719 -7762.8042 8481.4707 c
-7762.8042 8480.4795 -7763.9424 8479.3193 -7764.4058 8479.0879 c
-7764.7007 8478.918 -7765.5874 8478.9404 -7765.9458 8478.8975 c
-7766.6406 8478.8125 -7768.4121 8477.8652 -7768.4121 8475.376 c
-7768.4336 8473.9629 -7767.1265 8472.6357 -7766.8511 8472.4463 c
-7766.6826 8472.3389 -7766.5986 8472.2129 -7766.5986 8472.0439 c
-7766.5986 8471.833 -7766.6626 8468.9023 -7766.9995 8468.9023 c
-7767.4424 8468.9023 -7767.5054 8468.9023 -7767.5054 8469.0938 c
-7767.21 8470.1885 -7767.21 8470.4209 v
-7767.21 8470.7373 -7767.4424 8472.2129 -7768.3066 8472.2129 c
-7768.5806 8472.2129 -7769.0449 8471.9805 -7769.0449 8471.665 c
-7769.0449 8471.3701 -7768.3486 8470.168 -7768.3486 8469.8936 c
-7768.3486 8469.4082 -7768.3921 8469.3877 -7769.0654 8468.7764 c
-7769.2559 8468.6289 -7769.3193 8468.5029 -7769.3193 8468.3115 c
-7769.3193 8468.1436 -7769.2134 8468.0156 -7769.0449 8468.0156 c
-7768.8975 8468.0156 -7768.3281 8468.292 -7768.2017 8468.3115 c
-7768.0752 8468.3115 -7767.8433 8468.333 -7767.6538 8468.333 c
-7767.2734 8468.333 -7767.0845 8468.2061 -7767.0845 8468.0801 c
-7767.0845 8467.8477 -7767.0845 8467.1738 -7767.9263 8465.7178 c
-7768.1167 8465.3809 -7769.2974 8464.0527 -7769.2974 8463.7148 c
-7769.2974 8463.5459 -7769.2134 8463.5264 -7769.1089 8463.5264 c
-7768.9185 8463.5264 -7768.4966 8463.9473 -7768.3706 8464.0947 c
-7767.1265 8465.4229 -7766.3042 8466.8564 -7765.9238 8468.1221 c
-7765.8398 8468.4385 -7765.7344 8468.3545 -7765.5654 8468.376 c
-7763.4155 8468.8818 -7761.3271 8471.3906 -7761.3271 8471.4121 c
-7761.4326 8471.6855 -7761.4326 8471.749 v
-7761.4326 8471.876 -7761.3271 8471.8975 -7761.3057 8471.8975 c
-7761.2432 8471.8975 -7761.0527 8471.6855 -7761.0103 8471.6855 c
-7760.9058 8471.6855 -7760.7783 8471.7705 -7760.7783 8471.918 C
-7760.8418 8472.4658 l
f
0 D
-7764.1104 8470.9697 m
-7763.5215 8470.9697 -7763.0986 8471.0752 -7762.6982 8471.3486 c
-7762.6553 8471.3701 -7762.6138 8471.3906 -7762.5928 8471.3906 c
-7762.5498 8471.3906 -7762.5498 8471.3701 -7762.5498 8471.3271 c
-7762.5498 8470.9063 -7764.4272 8468.9463 -7765.5654 8468.9463 c
-7765.6289 8468.9463 -7765.6714 8468.9873 -7765.6714 8469.0498 c
-7765.6714 8469.2402 -7765.5874 8471.2432 -7765.2495 8471.2432 c
-7765.1865 8471.2432 -7765.1016 8471.2217 -7765.0386 8471.1807 c
-7764.7007 8471.0322 -7764.4902 8470.9697 -7764.1104 8470.9697 c
f
-7763.5835 8473.7314 m
-7763.5835 8473.3096 -7763.5625 8472.8457 -7762.8662 8472.8457 c
-7762.2334 8472.8457 -7761.6431 8473.5 -7761.4961 8473.6475 c
-7761.4326 8473.6895 -7761.3906 8473.71 -7761.3486 8473.71 c
-7761.3271 8473.71 -7761.2847 8473.668 -7761.2847 8473.626 c
-7761.2847 8473.1826 -7762.6553 8471.5176 -7764.0049 8471.5176 c
-7764.2578 8471.5176 -7765.2705 8471.6855 -7765.2705 8472.2344 c
-7765.2705 8472.4873 -7764.8906 8473.8584 -7764.2793 8474.9336 c
-7762.9087 8477.4219 -7758.7119 8478.9805 -7756.8145 8478.9805 c
-7755.9072 8479.0029 -7755.6118 8478.6865 -7755.4863 8478.665 c
-7755.4648 8478.665 -7755.4438 8478.6445 -7755.4233 8478.6445 c
-7755.3174 8478.6445 -7755.1904 8478.708 -7755.1904 8478.8555 c
-7755.1904 8478.877 -7755.2119 8478.877 v
-7755.3594 8480.0146 -7755.4014 8480.416 -7755.4014 8481.6797 c
-7755.4014 8483.0732 -7755.4014 8483.1992 -7754.4321 8483.1992 c
-7753.1455 8483.1992 -7752.8506 8482.124 -7752.8506 8481.8916 c
-7752.8506 8481.4707 -7753.4399 8481.1748 -7753.5889 8481.1748 c
-7753.7358 8481.1748 -7753.9058 8481.2822 -7753.9058 8481.4707 c
-7753.9058 8481.7656 -7753.9473 8481.9131 -7754.2207 8481.9131 c
-7754.4951 8481.9131 -7754.4951 8481.5547 -7754.4951 8481.4482 c
-7754.4951 8481.1963 -7754.3896 8480.9434 -7754.1782 8480.8164 c
-7753.7998 8480.5635 -7753.7998 8480.1631 -7753.7998 8479.9521 c
-7753.7998 8479.8467 -7753.7998 8479.7197 -7753.8198 8479.6143 c
-7753.8418 8479.4463 -7755.7817 8477.4004 -7756.0977 8477.4004 c
-7756.2446 8477.4004 -7756.5615 8477.5469 -7757.4258 8477.5469 c
-7759.5767 8477.5469 -7760.5474 8475.8193 -7760.7378 8475.292 c
-7760.9897 8474.5752 -7761.7915 8474.2793 -7762.0225 8474.2793 c
-7762.2129 8474.2793 -7762.2129 8474.3223 -7762.2129 8474.7227 c
-7762.2129 8474.8076 -7762.4238 8475.1436 y
-7762.4238 8475.334 -7761.3906 8475.5869 -7761.3906 8475.7764 c
-7761.3906 8475.9463 -7761.5801 8475.9658 -7761.7271 8475.9658 c
-7761.8115 8475.9658 -7762.8882 8475.9658 -7763.3306 8475.1436 c
-7763.5415 8474.7432 -7763.5835 8474.1748 -7763.5835 8473.7314 c
f
1 D
-7759.4927 8471.4756 m
-7759.4927 8471.4316 -7759.5137 8471.4121 -7759.5352 8471.4121 c
-7759.5986 8471.4121 -7759.7666 8471.749 -7759.8506 8471.749 c
-7759.9146 8471.749 -7759.9995 8471.665 -7760.0415 8471.5586 c
-7760.0615 8471.4756 -7760.1255 8471.0107 -7760.21 8471.0107 c
-7760.2524 8471.0107 -7760.4209 8471.2432 -7760.4634 8471.2432 c
-7760.6104 8471.2432 -7760.7158 8471.0107 -7760.7158 8470.8018 c
-7760.7158 8470.6953 -7760.7783 8470.6953 -7760.9263 8470.6953 c
-7761.5166 8470.6953 -7763.1406 8468.5234 -7763.5625 8466.7725 c
-7763.6055 8466.6045 -7763.5835 8466.457 -7763.8994 8466.3506 c
-7766.0713 8465.6143 -7768.5176 8463.4619 -7768.5176 8463.3359 c
-7768.5176 8463.1885 -7768.4336 8463.1045 -7768.3066 8463.1045 c
-7768.2432 8463.1045 -7768.1592 8463.1045 -7767.6538 8463.4404 c
-7766.7681 8464.0313 -7764.7217 8465.3184 -7763.8994 8465.3184 c
-7763.6265 8465.3184 -7763.6055 8464.96 -7763.6055 8464.7061 c
-7763.6055 8464.5156 -7763.6265 8464.2842 -7763.6265 8464.1377 c
-7763.6465 8463.8633 -7763.9634 8463.5459 -7763.9634 8463.3779 c
-7763.9634 8463.2305 -7763.8154 8463.125 -7763.6465 8463.125 c
-7763.4575 8463.125 -7763.3306 8463.1465 -7763.1606 8463.3359 c
-7762.8662 8463.6729 -7762.7402 8463.8213 -7762.4238 8463.8213 c
-7762.1914 8463.8213 -7761.1377 8463.1045 -7760.8838 8463.1045 c
-7760.5679 8463.1045 -7760.1895 8463.5889 -7760.1895 8463.8848 c
-7760.1895 8464.6221 -7761.0942 8465.2129 -7761.6431 8465.2129 c
-7762.0225 8465.2129 -7762.4438 8465.0869 -7762.6353 8464.8545 c
-7762.6982 8464.79 -7762.7607 8464.749 -7762.8242 8464.749 c
-7762.9937 8464.749 -7763.1191 8465.2129 -7763.1191 8465.2549 c
-7763.1191 8465.6777 -7760.2729 8465.7393 -7759.9146 8465.7393 c
-7759.7666 8465.7393 -7759.6401 8465.6553 -7759.5352 8465.4863 c
-7759.3447 8465.1924 -7758.1855 8463.9697 -7756.6255 8463.9697 c
-7754.79 8463.9697 -7753.0825 8465.2324 -7753.0825 8467.1309 c
-7753.0825 8467.2373 -7753.1245 8467.7842 -7753.1245 8467.8066 c
-7753.1245 8467.8701 -7752.0063 8469.6191 -7750.6782 8469.6191 c
-7749.6245 8469.6191 -7749.2656 8469.0303 -7749.2656 8468.5439 c
-7749.2656 8468.3115 -7749.3711 8467.6592 -7749.8984 8467.6592 c
-7750.1094 8467.6592 -7750.2144 8467.8701 -7750.2144 8468.249 c
-7750.2144 8468.333 -7750.0039 8468.7129 -7750.0039 8468.8184 c
-7750.0039 8468.8604 -7750.0239 8468.8818 -7750.0879 8468.8818 c
-7750.4258 8468.8818 -7750.9521 8468.5234 -7751.1846 8467.8701 c
-7751.4595 8467.1533 -7751.8594 8466.457 -7752.1958 8466.0557 c
-7752.5127 8465.6982 -7752.6182 8465.1064 -7752.6182 8464.7695 c
-7752.6182 8464.2842 -7752.1338 8463.125 -7750.4878 8463.125 c
-7749.2871 8463.125 -7748.4434 8463.8633 -7748.4434 8464.4746 c
-7748.4434 8465.0869 -7748.7598 8465.4658 -7749.2026 8465.4658 c
-7749.6455 8465.4658 -7749.9824 8465.1279 -7749.9824 8464.79 c
-7749.9824 8464.1162 -7750.1514 8463.9697 -7750.4878 8463.9697 c
-7750.6992 8463.9697 -7750.8896 8464.0947 -7750.8896 8464.4111 c
-7750.8896 8464.6436 -7750.8896 8465.0225 -7749.3711 8466.2881 c
-7748.8857 8466.6885 -7748.4214 8467.3857 -7748.4214 8468.165 c
-7748.4214 8468.9248 -7749.4561 8470.125 -7750.6362 8470.125 c
-7751.8594 8470.125 -7752.6401 8469.3457 -7753.2515 8468.6289 c
-7753.5454 8468.292 -7754.9814 8466.6045 -7755.0439 8466.582 c
-7755.2334 8466.4346 -7755.3174 8466.3096 -7755.3174 8466.1826 c
-7755.3174 8466.0771 -7755.2119 8465.9717 -7755.0854 8465.9717 c
-7754.8535 8465.9717 -7753.9058 8466.9209 -7753.8198 8466.9209 c
-7753.7568 8466.9209 -7753.7153 8466.8564 -7753.7153 8466.7725 c
-7753.7153 8466.0137 -7754.8535 8464.5381 -7756.6255 8464.5381 c
-7758.1006 8464.5381 -7758.9863 8465.6553 -7758.9863 8465.6982 c
-7758.9863 8465.8242 -7758.8394 8465.9492 -7758.5225 8466.0137 c
-7754.6426 8466.752 -7751.3955 8470.3018 -7751.3955 8474.918 c
-7751.3955 8475.0244 -7751.2256 8475.0508 -7751.0786 8475.0508 c
-7750.7202 8475.0508 -7750.0879 8475.1299 -7750.0879 8474.8564 c
-7750.0879 8474.75 -7750.1294 8474.624 -7750.1934 8474.4971 c
-7750.5518 8473.9268 -7750.8682 8473.7529 -7750.8682 8472.8018 c
-7750.8682 8472.3389 -7750.4878 8471.8125 -7749.8984 8471.8125 c
-7748.8657 8471.8125 -7748.4214 8472.8457 -7748.4214 8473.0771 c
-7748.4214 8473.2461 -7748.5073 8473.3096 -7748.5903 8473.3096 c
-7748.7178 8473.3096 -7749.2241 8472.7822 -7749.3711 8472.7822 c
-7749.5615 8472.7822 -7749.7085 8472.8242 -7749.7085 8473.3096 c
-7749.7085 8473.6475 -7748.4214 8477.3584 -7748.4214 8478.1592 c
-7748.4214 8478.7295 -7748.7598 8479.4258 -7749.6455 8479.9307 c
-7749.6875 8479.9521 -7749.7085 8479.9727 -7749.7085 8480.0146 c
-7749.7085 8480.0986 -7749.5615 8480.2051 -7749.4126 8480.2461 c
-7748.8018 8480.416 -7748.4214 8480.5215 -7748.4214 8481.4707 c
-7748.4214 8481.8291 -7748.7598 8482.5039 -7749.0127 8482.5039 c
-7749.2026 8482.5039 -7749.2026 8482.4609 -7749.2026 8482.1025 c
-7749.2026 8481.9551 -7749.2446 8481.8496 -7749.3926 8481.7441 c
-7749.7085 8481.5332 -7749.7295 8481.4912 -7749.8135 8481.0068 c
-7749.8774 8480.6904 -7750.0039 8480.6045 -7751.1426 8479.9727 c
-7751.5854 8479.6992 -7751.6904 8479.4668 -7751.7744 8479.2354 c
-7751.8594 8479.0439 -7751.9233 8479.0439 -7752.4287 8479.0439 c
-7752.9561 8479.0439 -7755.5073 8476.3252 -7755.5073 8476.1982 c
-7755.5073 8476.1357 -7755.3809 8475.8398 -7755.3809 8475.7764 c
-7755.3809 8475.7139 -7755.4014 8475.6719 -7755.4438 8475.6719 c
-7755.4863 8475.6719 -7755.6338 8475.8818 -7755.6758 8475.8818 c
-7755.7817 8475.8818 -7755.7817 8475.6924 -7755.7817 8475.5439 c
-7755.7817 8475.4404 -7755.5703 8474.8701 -7755.5703 8474.7227 c
-7755.5703 8474.6387 -7755.5918 8474.5752 -7755.6338 8474.5752 c
-7755.7178 8474.5752 -7755.9072 8475.0381 -7755.9922 8475.0381 c
-7756.0342 8475.0381 -7756.0762 8474.9971 -7756.0762 8474.8701 c
-7756.0762 8474.7227 -7755.8862 8474.0059 y
-7755.8862 8473.9424 -7755.9072 8473.8369 -7755.9502 8473.8369 c
-7756.0342 8473.8369 -7756.1826 8474.2373 -7756.2666 8474.2373 c
-7756.3286 8474.2373 -7756.3926 8474.1533 -7756.3926 8474.0059 c
-7756.3926 8473.9209 -7756.2446 8473.5 -7756.2446 8473.3945 c
-7756.2446 8473.3311 -7756.2666 8473.2666 -7756.3086 8473.2666 c
-7756.3506 8473.2666 -7756.5835 8473.8799 -7756.7095 8473.8799 c
-7756.7935 8473.8799 -7756.8994 8473.7725 -7756.8994 8473.668 c
-7756.8994 8473.584 -7756.7729 8473.2256 -7756.7729 8473.1416 c
-7756.7729 8473.0986 -7756.7729 8473.0771 -7756.7935 8473.0771 c
-7756.8774 8473.0771 -7757.0254 8473.5625 -7757.1104 8473.5625 c
-7757.3418 8473.5625 -7757.3623 8473.1416 -7757.3623 8472.9512 c
-7757.3623 8472.8672 -7757.2998 8472.5303 -7757.2998 8472.4658 c
-7757.2998 8472.4033 -7757.3198 8472.3818 -7757.3418 8472.3818 c
-7757.4897 8472.3818 -7757.6782 8473.1826 -7757.8271 8473.1826 c
-7758.0386 8473.1826 -7758.0386 8472.9932 -7758.0386 8472.7617 c
-7758.0166 8472.2344 L
-7758.0166 8472.2129 -7758.0386 8472.1924 y
-7758.0586 8472.1924 -7758.1006 8472.2129 -7758.1226 8472.2764 c
-7758.1855 8472.4873 -7758.3115 8472.9092 -7758.5225 8472.9092 c
-7758.6694 8472.9092 -7758.8174 8472.7402 -7758.8174 8472.5938 c
-7758.8174 8472.3604 -7758.7119 8471.9805 -7758.7119 8471.749 c
-7758.7119 8471.6855 -7758.7334 8471.665 -7758.7754 8471.665 c
-7758.8608 8471.665 -7758.9863 8472.1064 -7759.0278 8472.1924 c
-7759.0918 8472.2764 -7759.1553 8472.2979 -7759.2192 8472.2979 c
-7759.5352 8472.2979 -7759.5352 8471.9805 -7759.5352 8471.833 C
-7759.4927 8471.4756 l
f
0 D
-7760.8633 8467.1104 m
-7760.8633 8466.8779 -7762.8042 8466.6885 -7762.8662 8466.6885 c
-7762.9722 8466.6885 -7763.0352 8466.752 -7763.0352 8466.8564 c
-7763.0352 8467.7217 -7761.2847 8469.957 -7760.8633 8469.957 c
-7760.7998 8469.957 -7760.7783 8469.9365 -7760.7783 8469.873 c
-7761.2002 8468.6289 -7761.2002 8468.376 v
-7761.2002 8467.9961 -7761.0942 8467.7432 -7760.9058 8467.3213 c
-7760.8838 8467.2373 -7760.8633 8467.1738 -7760.8633 8467.1104 c
f
-7752.1338 8478.5596 m
-7751.9858 8478.5596 -7751.4795 8478.0547 -7751.3325 8478.0547 c
-7751.2065 8478.0547 -7751.0791 8478.1387 -7751.0791 8478.2861 c
-7751.0791 8478.3701 -7751.2695 8478.8125 -7751.2695 8478.918 c
-7751.2695 8479.2764 -7750.8896 8479.5732 -7750.5098 8479.5732 c
-7750.1094 8479.5732 -7748.9702 8479.2559 -7748.9702 8478.0322 c
-7748.9702 8476.9365 -7749.3926 8476.9365 -7751.0366 8476.9365 c
-7751.3955 8476.9365 -7753.0615 8477.126 -7753.3145 8477.126 c
-7753.4399 8477.126 -7753.4834 8476.957 -7753.4834 8476.8301 c
-7753.4834 8476.7891 -7753.4834 8476.7471 -7753.4614 8476.7256 c
-7753.3984 8476.3467 -7753.1675 8475.7979 -7753.1675 8475.418 c
-7753.1675 8470.9697 -7757.2998 8467.1104 -7759.7666 8467.1104 c
-7760.4209 8467.1104 -7760.6519 8467.9121 -7760.6519 8468.333 c
-7760.6519 8470.0625 -7758.6694 8471.0947 -7758.4175 8471.0947 c
-7758.3545 8471.0947 -7758.3335 8471.0752 -7758.3335 8471.0322 c
-7758.3335 8470.9902 -7758.3545 8470.9482 -7758.3975 8470.9063 c
-7758.5225 8470.7373 -7759.0498 8470.125 -7759.0498 8469.4932 c
-7759.0498 8469.1553 -7758.7554 8468.7129 -7757.9951 8468.7129 c
-7756.7305 8468.7129 -7756.1826 8470.0625 -7756.1826 8470.4209 c
-7756.1826 8470.5693 -7756.2446 8470.7793 -7756.4561 8470.7793 c
-7756.6035 8470.7793 -7757.0049 8470.125 -7757.1519 8470.125 c
-7757.2158 8470.125 -7757.4473 8470.252 -7757.5103 8470.252 c
-7757.5942 8470.252 -7757.6582 8470.2314 -7757.7422 8470.2314 c
-7757.8057 8470.2314 -7757.8481 8470.2939 -7757.8481 8470.3994 c
-7757.8481 8470.7588 -7757.3623 8471.3271 -7756.8774 8471.5811 c
-7755.9722 8472.0439 -7754.6226 8473.373 -7754.6226 8474.8281 c
-7754.6226 8475.249 -7754.6846 8475.6504 -7754.6846 8475.9873 c
-7754.6846 8476.5361 -7753.7568 8477.4004 -7752.8081 8478.2861 c
-7752.6401 8478.4336 -7752.3862 8478.5596 -7752.1338 8478.5596 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 57)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7743.9722 8488.2803 m
-7743.9722 8462.2529 L
-7770 8462.2529 L
-7770 8488.2803 L
-7743.9722 8488.2803 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7752.6455 8475.2695 m
-7743.9736 8475.2695 l
S
-7756.9839 8488.2803 m
-7756.9839 8479.6045 l
S
0.64 0.650477 0.701045 0.510735 K
1.125 w-7752.7202 8470.9307 m
-7743.9727 8470.9307 l
S
-7761.3232 8488.2803 m
-7761.3232 8478.9258 l
S
0.7084 0.636438 0.515526 0.381872 K
-7752.6504 8488.2803 m
-7752.6504 8485.8672 l
-7749.9937 8485.6436 -7748.3096 8483.9404 v
-7746.6064 8482.2139 -7746.3774 8479.6084 y
-7743.9727 8479.6084 l
S
*u
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-7760.7783 8471.918 m
-7760.7783 8471.7705 -7760.9058 8471.6855 -7761.0103 8471.6855 c
-7761.0527 8471.6855 -7761.2432 8471.8975 -7761.3057 8471.8975 c
-7761.3271 8471.8975 -7761.4326 8471.876 -7761.4326 8471.749 c
-7761.4326 8471.6855 -7761.3271 8471.4121 y
-7761.3271 8471.3906 -7763.4155 8468.8818 -7765.5654 8468.376 c
-7765.7344 8468.3545 -7765.8398 8468.4385 -7765.9238 8468.1221 c
-7766.3042 8466.8564 -7767.1265 8465.4229 -7768.3706 8464.0947 c
-7768.4966 8463.9482 -7768.9185 8463.5264 -7769.1089 8463.5264 c
-7769.2134 8463.5264 -7769.2974 8463.5459 -7769.2974 8463.7148 c
-7769.2974 8464.0527 -7768.1167 8465.3809 -7767.9263 8465.7178 c
-7767.0845 8467.1738 -7767.0845 8467.8477 -7767.0845 8468.0801 c
-7767.0845 8468.2061 -7767.2734 8468.333 -7767.6538 8468.333 c
-7767.8433 8468.333 -7768.0752 8468.3115 -7768.2017 8468.3115 c
-7768.3281 8468.292 -7768.8975 8468.0156 -7769.0449 8468.0156 c
-7769.2134 8468.0156 -7769.3193 8468.1436 -7769.3193 8468.3115 c
-7769.3193 8468.5029 -7769.2559 8468.6289 -7769.0654 8468.7764 c
-7768.3921 8469.3877 -7768.3486 8469.4082 -7768.3486 8469.8936 c
-7768.3486 8470.168 -7769.0449 8471.3701 -7769.0449 8471.665 c
-7769.0449 8471.9805 -7768.5806 8472.2129 -7768.3066 8472.2129 c
-7767.4424 8472.2129 -7767.21 8470.7373 -7767.21 8470.4209 c
-7767.21 8470.1885 -7767.5054 8469.0938 y
-7767.5054 8468.9023 -7767.4424 8468.9023 -7766.9995 8468.9023 c
-7766.6626 8468.9023 -7766.5986 8471.833 -7766.5986 8472.0439 c
-7766.5986 8472.2129 -7766.6826 8472.3389 -7766.8511 8472.4463 c
-7767.1265 8472.6357 -7768.4336 8473.9629 -7768.4121 8475.376 c
-7768.4121 8477.8652 -7766.6406 8478.8125 -7765.9458 8478.8975 c
-7765.5874 8478.9404 -7764.7007 8478.918 -7764.4058 8479.0879 c
-7763.9424 8479.3193 -7762.8042 8480.4795 -7762.8042 8481.4707 c
-7762.8042 8482.6719 -7763.5215 8483.0303 -7763.8774 8483.0303 c
-7764.2378 8483.0303 -7764.5103 8483.0098 -7764.5103 8482.5244 c
-7764.5103 8482.3135 -7764.3423 8482.0811 -7764.1318 8482.0186 c
-7764.0474 8481.9971 -7763.2881 8481.8076 -7763.2881 8481.4912 c
-7763.2881 8481.3428 -7763.3721 8481.3428 -7763.5835 8481.3428 c
-7764.1318 8481.3428 -7764.8066 8481.1338 -7766.0928 8479.9307 c
-7766.4722 8479.5938 -7767.1265 8479.5098 -7767.5679 8479.5098 c
-7768.0537 8479.5098 -7769.2974 8479.9727 -7769.2974 8481.4707 c
-7769.2974 8483.3037 -7768.4751 8484.001 -7767.8433 8484.001 c
-7767.4209 8484.001 -7766.8936 8483.6836 -7766.8936 8483.4092 c
-7766.8936 8483.0732 -7766.9575 8482.6514 -7767.5479 8482.6084 c
-7768.0537 8482.5664 -7768.3066 8482.334 -7768.3066 8481.9971 c
-7768.3066 8481.7861 -7768.1592 8481.5752 -7767.8218 8481.5752 c
-7767.3154 8481.5752 -7766.7041 8482.1455 -7766.0713 8482.8828 c
-7765.6714 8483.3682 -7764.7007 8483.8955 -7763.9209 8483.8955 c
-7763.1191 8483.8955 -7762.0654 8482.9893 -7762.0654 8481.6172 c
-7762.0654 8480.3525 -7763.4995 8479.0439 -7764.2378 8478.5186 c
-7764.9546 8477.9912 -7765.3335 8477.6113 -7765.46 8477.4004 c
-7765.5654 8477.2529 -7765.9033 8476.3037 -7766.1143 8476.3037 c
-7766.2607 8476.3037 -7766.3672 8476.4717 -7766.3672 8476.6836 c
-7766.3672 8477 -7766.1143 8477.6338 -7765.7759 8477.9697 c
-7765.6929 8478.0752 -7765.6494 8478.1387 -7765.6494 8478.2012 c
-7765.6494 8478.3496 -7765.8398 8478.3701 -7765.9873 8478.3701 c
-7766.5767 8478.3701 -7767.7793 8477.4004 -7767.7793 8475.5664 c
-7767.7793 8473.9844 -7766.7881 8473.1416 -7766.6406 8473.1416 c
-7766.5361 8473.1416 -7766.4297 8473.2461 -7766.3672 8473.458 c
-7764.6592 8479.6143 -7759.7822 8480.8379 -7757.3774 8480.8379 c
-7757.2729 8480.8379 -7757.1895 8480.9004 -7757.1895 8481.0498 c
-7757.1895 8481.1748 -7757.1895 8482.2725 -7757.3359 8482.2725 c
-7757.3774 8482.2725 -7757.4414 8482.25 -7757.5264 8482.1875 c
-7758.0942 8481.7236 -7758.3755 8481.3652 -7759.3022 8481.3652 c
-7759.7666 8481.3652 -7760.5679 8481.8916 -7760.5679 8482.5039 c
-7760.5679 8483.2832 -7759.8936 8484.001 -7759.4082 8484.001 c
-7759.0498 8484.001 -7758.9023 8483.916 -7758.9023 8483.79 c
-7758.9023 8483.6621 -7759.3662 8483.2207 -7759.3662 8483.0732 c
-7759.3662 8482.8193 -7759.3242 8482.6719 -7758.8809 8482.6719 c
-7758.4814 8482.6719 -7757.7842 8482.8418 -7757.3418 8483.0947 c
-7756.8774 8483.3682 -7755.7393 8484.001 -7754.7065 8484.001 c
-7753.9473 8484.001 -7752.9561 8483.5576 -7752.4702 8482.7568 c
-7752.4287 8482.6924 -7752.3862 8482.6719 -7752.3447 8482.6719 c
-7752.2393 8482.6719 -7752.1543 8482.7568 -7752.1338 8482.9053 c
-7752.0913 8483.3037 -7751.7534 8484.001 -7750.9312 8484.001 c
-7750.3408 8484.001 -7749.8135 8483.4941 -7749.8135 8483.0508 c
-7749.8135 8482.8828 -7749.9194 8482.8193 -7750.0239 8482.8193 c
-7750.1094 8482.8193 -7750.4878 8483.0732 -7750.5942 8483.0732 c
-7750.7407 8483.0732 -7751.6479 8482.4609 -7751.7334 8482.3135 c
-7752.5127 8481.0273 -7752.5977 8480.8799 -7753.2295 8480.626 c
-7753.3984 8480.542 -7753.3984 8480.458 -7753.3984 8479.5938 c
-7753.3984 8479.4668 -7753.3984 8479.1709 -7753.5454 8479.0029 c
-7753.8198 8478.7295 -7755.9287 8476.6621 -7756.1392 8476.6621 c
-7756.2241 8476.6621 -7756.4985 8476.9365 -7756.5835 8476.9365 c
-7756.6035 8476.9365 -7756.6255 8476.9365 -7756.6255 8476.8945 C
-7756.6035 8476.7471 l
-7756.6035 8476.5791 -7756.6455 8476.4932 -7756.8564 8476.4932 c
-7756.9199 8476.4932 -7757.1943 8476.6201 -7757.2568 8476.6201 c
-7757.3198 8476.6201 -7757.3623 8476.1777 -7757.4473 8476.1777 c
-7757.4678 8476.1777 -7757.8057 8476.4092 -7757.8896 8476.4092 c
-7758.0166 8476.4092 -7758.1006 8476.3252 -7758.1006 8476.2197 c
-7758.1006 8476.1572 -7758.1006 8475.6719 -7758.2065 8475.6719 c
-7758.2915 8475.6719 -7758.5225 8475.9658 -7758.5654 8475.9658 c
-7758.5854 8475.9658 -7758.5854 8475.9463 -7758.5854 8475.8818 C
-7758.5439 8475.4609 l
-7758.5439 8475.3965 -7758.5854 8475.376 -7758.6494 8475.376 c
-7758.7119 8475.376 -7758.9658 8475.6924 -7759.0498 8475.6924 c
-7759.0918 8475.6924 -7759.1138 8475.6504 -7759.1138 8475.5664 c
-7759.1138 8475.5244 -7758.9233 8474.8076 -7758.9233 8474.6592 c
-7758.9233 8474.5752 -7758.9658 8474.5322 -7759.0078 8474.5322 c
-7759.0918 8474.5322 -7759.4297 8474.8916 -7759.4722 8474.8916 c
-7759.4927 8474.8916 -7759.4927 8474.8916 -7759.4927 8474.8701 c
-7759.4927 8474.7861 -7759.3882 8474.4268 -7759.3882 8474.4072 c
-7759.3882 8474.3857 -7759.4082 8474.3643 -7759.4297 8474.3643 c
-7759.4722 8474.3643 -7759.6826 8474.5752 -7759.7446 8474.5752 c
-7759.7666 8474.5752 -7759.7666 8474.5752 -7759.7666 8474.5322 c
-7759.7666 8474.3643 -7759.5137 8473.626 -7759.5137 8473.5625 c
-7759.5137 8473.541 -7759.5352 8473.5205 -7759.5562 8473.5205 c
-7759.6826 8473.5205 -7760.1055 8474.0908 -7760.1465 8474.0908 c
-7760.1675 8474.0908 -7760.1675 8474.0693 -7760.1675 8474.0059 c
-7760.1675 8473.8154 -7759.8936 8472.9092 y
-7759.8936 8472.8877 -7759.9146 8472.8672 -7759.9351 8472.8672 c
-7760.0615 8472.8672 -7760.4414 8473.4141 -7760.5049 8473.4141 c
-7760.5264 8473.4141 -7760.5264 8473.4141 -7760.5264 8473.373 c
-7760.2729 8472.4658 -7760.2729 8472.3818 v
-7760.2729 8472.2764 -7760.3154 8472.2344 -7760.3994 8472.2344 c
-7760.4634 8472.2344 -7760.6943 8472.5713 -7760.7783 8472.5713 c
-7760.8218 8472.5713 -7760.8418 8472.5303 -7760.8418 8472.4658 c
-7760.7783 8471.918 L
f
1 D
-7765.0386 8471.1807 m
-7765.1016 8471.2217 -7765.1865 8471.2432 -7765.2495 8471.2432 c
-7765.5874 8471.2432 -7765.6714 8469.2402 -7765.6714 8469.0498 c
-7765.6714 8468.9873 -7765.6289 8468.9463 -7765.5654 8468.9463 c
-7764.4272 8468.9463 -7762.5498 8470.9072 -7762.5498 8471.3271 c
-7762.5498 8471.3701 -7762.5498 8471.3906 -7762.5928 8471.3906 c
-7762.6138 8471.3906 -7762.6553 8471.3701 -7762.6982 8471.3486 c
-7763.0986 8471.0752 -7763.5215 8470.9697 -7764.1104 8470.9697 c
-7764.4902 8470.9697 -7764.7007 8471.0322 -7765.0386 8471.1807 c
f
-7763.3306 8475.1436 m
-7762.8882 8475.9658 -7761.8115 8475.9658 -7761.7271 8475.9658 c
-7761.5801 8475.9658 -7761.3906 8475.9463 -7761.3906 8475.7764 c
-7761.3906 8475.5869 -7762.4238 8475.334 -7762.4238 8475.1436 c
-7762.2129 8474.8076 -7762.2129 8474.7227 v
-7762.2129 8474.3232 -7762.2129 8474.2803 -7762.0225 8474.2803 c
-7761.7915 8474.2803 -7760.9897 8474.5752 -7760.7378 8475.292 c
-7760.5474 8475.8193 -7759.5767 8477.5469 -7757.4258 8477.5469 c
-7756.5615 8477.5469 -7756.2446 8477.4004 -7756.0977 8477.4004 c
-7755.7817 8477.4004 -7753.8418 8479.4463 -7753.8198 8479.6143 c
-7753.7998 8479.7197 -7753.7998 8479.8467 -7753.7998 8479.9521 c
-7753.7998 8480.1631 -7753.7998 8480.5635 -7754.1782 8480.8164 c
-7754.3896 8480.9434 -7754.4951 8481.1963 -7754.4951 8481.4482 c
-7754.4951 8481.5547 -7754.4951 8481.9131 -7754.2207 8481.9131 c
-7753.9473 8481.9131 -7753.9058 8481.7656 -7753.9058 8481.4707 c
-7753.9058 8481.2822 -7753.7358 8481.1748 -7753.5889 8481.1748 c
-7753.4399 8481.1748 -7752.8506 8481.4707 -7752.8506 8481.8916 c
-7752.8506 8482.124 -7753.1455 8483.1992 -7754.4321 8483.1992 c
-7755.4014 8483.1992 -7755.4014 8483.0732 -7755.4014 8481.6797 c
-7755.4014 8480.416 -7755.3594 8480.0146 -7755.2119 8478.877 c
-7755.1904 8478.877 -7755.1904 8478.8555 y
-7755.1904 8478.708 -7755.3174 8478.6445 -7755.4233 8478.6445 c
-7755.4438 8478.6445 -7755.4648 8478.665 -7755.4863 8478.665 c
-7755.6118 8478.6865 -7755.9072 8479.0029 -7756.8145 8478.9805 c
-7758.7119 8478.9805 -7762.9087 8477.4219 -7764.2793 8474.9336 c
-7764.8906 8473.8584 -7765.2705 8472.4873 -7765.2705 8472.2344 c
-7765.2705 8471.6855 -7764.2578 8471.5176 -7764.0049 8471.5176 c
-7762.6553 8471.5176 -7761.2847 8473.1826 -7761.2847 8473.626 c
-7761.2847 8473.668 -7761.3271 8473.71 -7761.3486 8473.71 c
-7761.3906 8473.71 -7761.4326 8473.6895 -7761.4961 8473.6475 c
-7761.6431 8473.5 -7762.2334 8472.8457 -7762.8662 8472.8457 c
-7763.5625 8472.8457 -7763.5835 8473.3096 -7763.5835 8473.7314 c
-7763.5835 8474.1748 -7763.5415 8474.7432 -7763.3306 8475.1436 c
f
0 D
-7759.5352 8471.833 m
-7759.5352 8471.9805 -7759.5352 8472.2979 -7759.2192 8472.2979 c
-7759.1553 8472.2979 -7759.0918 8472.2764 -7759.0278 8472.1924 c
-7758.9863 8472.1064 -7758.8608 8471.665 -7758.7754 8471.665 c
-7758.7334 8471.665 -7758.7119 8471.6855 -7758.7119 8471.749 c
-7758.7119 8471.9805 -7758.8174 8472.3604 -7758.8174 8472.5938 c
-7758.8174 8472.7402 -7758.6694 8472.9092 -7758.5225 8472.9092 c
-7758.3115 8472.9092 -7758.1855 8472.4873 -7758.1226 8472.2764 c
-7758.1006 8472.2129 -7758.0586 8472.1924 -7758.0386 8472.1924 c
-7758.0166 8472.2129 -7758.0166 8472.2344 V
-7758.0386 8472.7617 l
-7758.0386 8472.9932 -7758.0386 8473.1826 -7757.8271 8473.1826 c
-7757.6782 8473.1826 -7757.4897 8472.3818 -7757.3418 8472.3818 c
-7757.3198 8472.3818 -7757.2998 8472.4033 -7757.2998 8472.4658 c
-7757.2998 8472.5303 -7757.3623 8472.8672 -7757.3623 8472.9512 c
-7757.3623 8473.1416 -7757.3418 8473.5625 -7757.1104 8473.5625 c
-7757.0254 8473.5625 -7756.8774 8473.0771 -7756.7935 8473.0771 c
-7756.7729 8473.0771 -7756.7729 8473.0986 -7756.7729 8473.1416 c
-7756.7729 8473.2256 -7756.8994 8473.584 -7756.8994 8473.668 c
-7756.8994 8473.7725 -7756.7935 8473.8799 -7756.7095 8473.8799 c
-7756.5835 8473.8799 -7756.3506 8473.2666 -7756.3086 8473.2666 c
-7756.2666 8473.2666 -7756.2446 8473.3311 -7756.2446 8473.3945 c
-7756.2446 8473.5 -7756.3926 8473.9209 -7756.3926 8474.0059 c
-7756.3926 8474.1533 -7756.3286 8474.2373 -7756.2666 8474.2373 c
-7756.1826 8474.2373 -7756.0342 8473.8369 -7755.9502 8473.8369 c
-7755.9072 8473.8369 -7755.8862 8473.9424 -7755.8862 8474.0059 c
-7756.0762 8474.7227 -7756.0762 8474.8701 v
-7756.0762 8474.9971 -7756.0342 8475.0381 -7755.9922 8475.0381 c
-7755.9072 8475.0381 -7755.7178 8474.5752 -7755.6338 8474.5752 c
-7755.5918 8474.5752 -7755.5703 8474.6387 -7755.5703 8474.7227 c
-7755.5703 8474.8701 -7755.7817 8475.4404 -7755.7817 8475.5439 c
-7755.7817 8475.6924 -7755.7817 8475.8818 -7755.6758 8475.8818 c
-7755.6338 8475.8818 -7755.4863 8475.6719 -7755.4438 8475.6719 c
-7755.4014 8475.6719 -7755.3809 8475.7139 -7755.3809 8475.7764 c
-7755.3809 8475.8398 -7755.5073 8476.1357 -7755.5073 8476.1982 c
-7755.5073 8476.3252 -7752.9561 8479.0439 -7752.4287 8479.0439 c
-7751.9233 8479.0439 -7751.8594 8479.0439 -7751.7744 8479.2354 c
-7751.6904 8479.4668 -7751.5854 8479.6992 -7751.1426 8479.9727 c
-7750.0039 8480.6045 -7749.8774 8480.6904 -7749.8135 8481.0068 c
-7749.7295 8481.4912 -7749.7085 8481.5332 -7749.3926 8481.7441 c
-7749.2446 8481.8496 -7749.2026 8481.9551 -7749.2026 8482.1025 c
-7749.2026 8482.4609 -7749.2026 8482.5039 -7749.0127 8482.5039 c
-7748.7598 8482.5039 -7748.4214 8481.8291 -7748.4214 8481.4707 c
-7748.4214 8480.5215 -7748.8018 8480.416 -7749.4126 8480.2461 c
-7749.5615 8480.2051 -7749.7085 8480.0986 -7749.7085 8480.0146 c
-7749.7085 8479.9727 -7749.6875 8479.9521 -7749.6455 8479.9307 c
-7748.7598 8479.4258 -7748.4214 8478.7295 -7748.4214 8478.1592 c
-7748.4214 8477.3584 -7749.7085 8473.6475 -7749.7085 8473.3096 c
-7749.7085 8472.8242 -7749.5615 8472.7822 -7749.3711 8472.7822 c
-7749.2241 8472.7822 -7748.7178 8473.3096 -7748.5903 8473.3096 c
-7748.5073 8473.3096 -7748.4214 8473.2461 -7748.4214 8473.0771 c
-7748.4214 8472.8457 -7748.8657 8471.8125 -7749.8984 8471.8125 c
-7750.4878 8471.8125 -7750.8682 8472.3389 -7750.8682 8472.8018 c
-7750.8682 8473.7529 -7750.5518 8473.9268 -7750.1934 8474.4971 c
-7750.1294 8474.624 -7750.0879 8474.75 -7750.0879 8474.8564 c
-7750.0879 8475.1299 -7750.7202 8475.0508 -7751.0786 8475.0508 c
-7751.2256 8475.0508 -7751.3955 8475.0244 -7751.3955 8474.918 c
-7751.3955 8470.3018 -7754.6426 8466.752 -7758.5225 8466.0137 c
-7758.8394 8465.9492 -7758.9863 8465.8242 -7758.9863 8465.6982 c
-7758.9863 8465.6553 -7758.1006 8464.5381 -7756.6255 8464.5381 c
-7754.8535 8464.5381 -7753.7153 8466.0137 -7753.7153 8466.7725 c
-7753.7153 8466.8564 -7753.7568 8466.9209 -7753.8198 8466.9209 c
-7753.9058 8466.9209 -7754.8535 8465.9717 -7755.0854 8465.9717 c
-7755.2119 8465.9717 -7755.3174 8466.0771 -7755.3174 8466.1826 c
-7755.3174 8466.3096 -7755.2334 8466.4346 -7755.0439 8466.582 c
-7754.9814 8466.6045 -7753.5454 8468.292 -7753.2515 8468.6289 c
-7752.6401 8469.3457 -7751.8594 8470.125 -7750.6362 8470.125 c
-7749.4561 8470.125 -7748.4214 8468.9248 -7748.4214 8468.165 c
-7748.4214 8467.3857 -7748.8857 8466.6885 -7749.3711 8466.2881 c
-7750.8896 8465.0225 -7750.8896 8464.6436 -7750.8896 8464.4111 c
-7750.8896 8464.0947 -7750.6992 8463.9697 -7750.4878 8463.9697 c
-7750.1514 8463.9697 -7749.9824 8464.1162 -7749.9824 8464.79 c
-7749.9824 8465.1279 -7749.6455 8465.4658 -7749.2026 8465.4658 c
-7748.7598 8465.4658 -7748.4434 8465.0869 -7748.4434 8464.4746 c
-7748.4434 8463.8643 -7749.2871 8463.125 -7750.4878 8463.125 c
-7752.1338 8463.125 -7752.6182 8464.2842 -7752.6182 8464.7695 c
-7752.6182 8465.1064 -7752.5127 8465.6982 -7752.1958 8466.0557 c
-7751.8594 8466.457 -7751.4595 8467.1533 -7751.1846 8467.8701 c
-7750.9521 8468.5234 -7750.4258 8468.8818 -7750.0879 8468.8818 c
-7750.0239 8468.8818 -7750.0039 8468.8604 -7750.0039 8468.8184 c
-7750.0039 8468.7129 -7750.2144 8468.333 -7750.2144 8468.249 c
-7750.2144 8467.8701 -7750.1094 8467.6592 -7749.8984 8467.6592 c
-7749.3711 8467.6592 -7749.2656 8468.3115 -7749.2656 8468.5439 c
-7749.2656 8469.0303 -7749.6245 8469.6191 -7750.6782 8469.6191 c
-7752.0063 8469.6191 -7753.1245 8467.8701 -7753.1245 8467.8066 c
-7753.1245 8467.7842 -7753.0825 8467.2373 -7753.0825 8467.1309 c
-7753.0825 8465.2324 -7754.79 8463.9697 -7756.6255 8463.9697 c
-7758.1855 8463.9697 -7759.3447 8465.1924 -7759.5352 8465.4863 c
-7759.6401 8465.6553 -7759.7666 8465.7393 -7759.9146 8465.7393 c
-7760.2729 8465.7393 -7763.1191 8465.6777 -7763.1191 8465.2549 c
-7763.1191 8465.2129 -7762.9937 8464.749 -7762.8242 8464.749 c
-7762.7607 8464.749 -7762.6982 8464.79 -7762.6353 8464.8545 c
-7762.4438 8465.0869 -7762.0225 8465.2129 -7761.6431 8465.2129 c
-7761.0942 8465.2129 -7760.1895 8464.6221 -7760.1895 8463.8848 c
-7760.1895 8463.5889 -7760.5679 8463.1045 -7760.8838 8463.1045 c
-7761.1377 8463.1045 -7762.1914 8463.8213 -7762.4238 8463.8213 c
-7762.7402 8463.8213 -7762.8662 8463.6729 -7763.1606 8463.3359 c
-7763.3306 8463.1465 -7763.4575 8463.125 -7763.6465 8463.125 c
-7763.8154 8463.125 -7763.9634 8463.2305 -7763.9634 8463.3779 c
-7763.9634 8463.5459 -7763.6465 8463.8643 -7763.6265 8464.1377 c
-7763.6265 8464.2842 -7763.6055 8464.5156 -7763.6055 8464.7061 c
-7763.6055 8464.96 -7763.6265 8465.3184 -7763.8994 8465.3184 c
-7764.7217 8465.3184 -7766.7681 8464.0322 -7767.6538 8463.4404 c
-7768.1592 8463.1045 -7768.2432 8463.1045 -7768.3066 8463.1045 c
-7768.4336 8463.1045 -7768.5176 8463.1885 -7768.5176 8463.3359 c
-7768.5176 8463.4619 -7766.0713 8465.6143 -7763.8994 8466.3506 c
-7763.5835 8466.457 -7763.6055 8466.6045 -7763.5625 8466.7725 c
-7763.1406 8468.5234 -7761.5166 8470.6963 -7760.9263 8470.6963 c
-7760.7783 8470.6963 -7760.7158 8470.6963 -7760.7158 8470.8018 c
-7760.7158 8471.0107 -7760.6104 8471.2432 -7760.4634 8471.2432 c
-7760.4209 8471.2432 -7760.2524 8471.0107 -7760.21 8471.0107 c
-7760.1255 8471.0107 -7760.0615 8471.4756 -7760.0415 8471.5586 c
-7759.9995 8471.665 -7759.9146 8471.749 -7759.8506 8471.749 c
-7759.7666 8471.749 -7759.5986 8471.4121 -7759.5352 8471.4121 c
-7759.5137 8471.4121 -7759.4927 8471.4316 -7759.4927 8471.4756 c
-7759.5352 8471.833 L
f
1 D
-7760.9058 8467.3213 m
-7761.0942 8467.7432 -7761.2002 8467.9961 -7761.2002 8468.376 c
-7761.2002 8468.6289 -7760.7783 8469.873 y
-7760.7783 8469.9365 -7760.7998 8469.957 -7760.8633 8469.957 c
-7761.2847 8469.957 -7763.0352 8467.7217 -7763.0352 8466.8564 c
-7763.0352 8466.752 -7762.9722 8466.6885 -7762.8662 8466.6885 c
-7762.8042 8466.6885 -7760.8633 8466.8779 -7760.8633 8467.1104 c
-7760.8633 8467.1738 -7760.8838 8467.2373 -7760.9058 8467.3213 c
f
-7752.8081 8478.2861 m
-7753.7568 8477.4004 -7754.6846 8476.5361 -7754.6846 8475.9873 c
-7754.6846 8475.6504 -7754.6226 8475.249 -7754.6226 8474.8281 c
-7754.6226 8473.373 -7755.9722 8472.0439 -7756.8774 8471.5811 c
-7757.3623 8471.3271 -7757.8481 8470.7588 -7757.8481 8470.3994 c
-7757.8481 8470.2939 -7757.8057 8470.2314 -7757.7422 8470.2314 c
-7757.6582 8470.2314 -7757.5942 8470.252 -7757.5103 8470.252 c
-7757.4473 8470.252 -7757.2158 8470.125 -7757.1519 8470.125 c
-7757.0049 8470.125 -7756.6035 8470.7803 -7756.4561 8470.7803 c
-7756.2446 8470.7803 -7756.1826 8470.5693 -7756.1826 8470.4209 c
-7756.1826 8470.0625 -7756.7305 8468.7129 -7757.9951 8468.7129 c
-7758.7554 8468.7129 -7759.0498 8469.1553 -7759.0498 8469.4932 c
-7759.0498 8470.125 -7758.5225 8470.7373 -7758.3975 8470.9072 c
-7758.3545 8470.9482 -7758.3335 8470.9902 -7758.3335 8471.0322 c
-7758.3335 8471.0752 -7758.3545 8471.0947 -7758.4175 8471.0947 c
-7758.6694 8471.0947 -7760.6519 8470.0625 -7760.6519 8468.333 c
-7760.6519 8467.9121 -7760.4209 8467.1104 -7759.7666 8467.1104 c
-7757.2998 8467.1104 -7753.1675 8470.9697 -7753.1675 8475.418 c
-7753.1675 8475.7979 -7753.3984 8476.3467 -7753.4614 8476.7256 c
-7753.4834 8476.7471 -7753.4834 8476.7891 -7753.4834 8476.8301 c
-7753.4834 8476.957 -7753.4399 8477.126 -7753.3145 8477.126 c
-7753.0615 8477.126 -7751.3955 8476.9365 -7751.0366 8476.9365 c
-7749.3926 8476.9365 -7748.9702 8476.9365 -7748.9702 8478.0322 c
-7748.9702 8479.2559 -7750.1094 8479.5732 -7750.5098 8479.5732 c
-7750.8896 8479.5732 -7751.2695 8479.2764 -7751.2695 8478.918 c
-7751.2695 8478.8125 -7751.0791 8478.3701 -7751.0791 8478.2861 c
-7751.0791 8478.1387 -7751.2065 8478.0547 -7751.3325 8478.0547 c
-7751.4795 8478.0547 -7751.9858 8478.5596 -7752.1338 8478.5596 c
-7752.3862 8478.5596 -7752.6401 8478.4336 -7752.8081 8478.2861 c
f
*U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe Art) -
(OnPath Brush Tool/ Tapered Stroke/ Adobe ArtOnPath Brush Tool/) -
( Floral Spoke/ Adobe PatternOnPath Brush Tool/ Red Arrow Brush) -
( / Adobe PatternOnPath Brush Tool/ Gothic/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Floral Spoke)
(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Gothic)
(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -
(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Red Arrow Brush )
(1 / Unnamed Brush Pat 158/ Unnamed Brush Pat 160/ Unnamed Brus) -
(h Pat 160/ Unnamed Brush Pat 162/ Unnamed Brush Pat 161/ 5 0.0) -
(196078 0.027451 0.0313726 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 k
(White)
Pc
0 0 0 1 k
(Black)
Pc
0 1 1 0 k
(CMYK Red)
Pc
0 0 1 0 k
(CMYK Yellow)
Pc
1 0 1 0 k
(CMYK Green)
Pc
1 0 0 0 k
(CMYK Cyan)
Pc
1 1 0 0 k
(CMYK Blue)
Pc
0 1 0 0 k
(CMYK Magenta)
Pc
0.15 1 0.9 0.1 k
(C=15 M=100 Y=90 K=10)
Pc
0 0.9 0.85 0 k
(C=0 M=90 Y=85 K=0)
Pc
0 0.8 0.95 0 k
(C=0 M=80 Y=95 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
0 0.35 0.85 0 k
(C=0 M=35 Y=85 K=0)
Pc
0.05 0 0.9 0 k
(C=5 M=0 Y=90 K=0)
Pc
0.2 0 1 0 k
(C=20 M=0 Y=100 K=0)
Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0)
Pc
0.75 0 1 0 k
(C=75 M=0 Y=100 K=0)
Pc
0.85 0.1 1 0.1 k
(C=85 M=10 Y=100 K=10)
Pc
0.9 0.3 0.95 0.3 k
(C=90 M=30 Y=95 K=30)
Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0)
Pc
0.8 0.1 0.45 0 k
(C=80 M=10 Y=45 K=0)
Pc
0.7 0.15 0 0 k
(C=70 M=15 Y=0 K=0)
Pc
0.85 0.5 0 0 k
(C=85 M=50 Y=0 K=0)
Pc
1 0.95 0.05 0 k
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.25 0.25 k
(C=100 M=100 Y=25 K=25)
Pc
0.75 1 0 0 k
(C=75 M=100 Y=0 K=0)
Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0)
Pc
0.35 1 0.35 0.1 k
(C=35 M=100 Y=35 K=10)
Pc
0.1 1 0.5 0 k
(C=10 M=100 Y=50 K=0)
Pc
0 0.95 0.2 0 k
(C=0 M=95 Y=20 K=0)
Pc
0.25 0.25 0.4 0 k
(C=25 M=25 Y=40 K=0)
Pc
0.4 0.45 0.5 0.05 k
(C=40 M=45 Y=50 K=5)
Pc
0.5 0.5 0.6 0.25 k
(C=50 M=50 Y=60 K=25)
Pc
0.55 0.6 0.65 0.4 k
(C=55 M=60 Y=65 K=40)
Pc
0.25 0.4 0.65 0 k
(C=25 M=40 Y=65 K=0)
Pc
0.3 0.5 0.75 0.1 k
(C=30 M=50 Y=75 K=10)
Pc
0.35 0.6 0.8 0.25 k
(C=35 M=60 Y=80 K=25)
Pc
0.4 0.65 0.9 0.35 k
(C=40 M=65 Y=90 K=35)
Pc
0.4 0.7 1 0.5 k
(C=40 M=70 Y=100 K=50)
Pc
0.5 0.7 0.8 0.7 k
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient)
Pc
Bb
2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade to Black)
Pc
Bb
0 0 0 0 Bh
2 (Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial Gradient)
Pc
Bb
0 0 0 0 Bh
2 (Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Soft Black Vignette)
Pc
Bb
2 (Desert Sunset) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Desert Sunset)
Pc
Bb
0 0 0 0 Bh
2 (Copper Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Copper Radial)
Pc
(Fish Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Fish Pattern)
Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100)
Pc
0 0 0 0.899994 k
(C=0 M=0 Y=0 K=90)
Pc
0 0 0 0.799988 k
(C=0 M=0 Y=0 K=80)
Pc
0 0 0 0.699997 k
(C=0 M=0 Y=0 K=70)
Pc
0 0 0 0.599991 k
(C=0 M=0 Y=0 K=60)
Pc
0 0 0 0.5 k
(C=0 M=0 Y=0 K=50)
Pc
0 0 0 0.399994 k
(C=0 M=0 Y=0 K=40)
Pc
0 0 0 0.299988 k
(C=0 M=0 Y=0 K=30)
Pc
0 0 0 0.199997 k
(C=0 M=0 Y=0 K=20)
Pc
0 0 0 0.099991 k
(C=0 M=0 Y=0 K=10)
Pc
0 0 0 0.049988 k
(C=0 M=0 Y=0 K=5)
Pc
0 1 1 0 k
(C=0 M=100 Y=100 K=0)
Pc
0 0.75 1 0 k
(C=0 M=75 Y=100 K=0)
Pc
0 0.1 0.95 0 k
(C=0 M=10 Y=95 K=0)
Pc
0.85 0.1 1 0 k
(C=85 M=10 Y=100 K=0)
Pc
1 0.9 0 0 k
(C=100 M=90 Y=0 K=0)
Pc
0.6 0.9 0.000031 0.000031 k
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u
u
*u
0 D
0 R
0 0 0 1 K
0 J 0 j 0.25 w 4 M []0 d0 XR
563.0439 424.458 m
563.0439 423.6782 562.5088 423.0405 561.8555 423.0405 c
561.2012 423.0405 560.666 423.6782 560.666 424.458 c
560.666 440.6099 l
560.666 441.3896 561.2012 442.0273 561.8555 442.0273 c
562.5088 442.0273 563.0439 441.3896 563.0439 440.6099 c
563.0439 424.458 l
s
*U
U
u
*u
581.7666 424.458 m
581.7666 423.6782 581.2471 423.0405 580.6123 423.0405 c
579.9775 423.0405 579.1328 423.5889 578.7344 424.2593 c
570.3613 438.374 l
569.9629 439.0444 569.6445 439.311 569.6523 438.9668 c
569.6602 438.6226 569.6846 437.9487 569.707 437.4692 c
569.707 437.4692 569.707 437.1445 v
569.707 424.458 l
569.707 423.6782 569.2754 423.0405 568.748 423.0405 c
568.2197 423.0405 567.7881 423.6782 567.7881 424.458 c
567.7881 440.6099 l
567.7881 441.3896 568.4258 442.0273 569.2051 442.0273 c
569.3477 442.0273 l
570.127 442.0273 571.0898 441.479 571.4883 440.8086 c
579.2207 427.7729 l
579.6191 427.1025 579.9385 426.8516 579.9307 427.2148 c
579.9229 427.5776 579.9043 428.3149 579.8896 428.8525 c
579.8896 428.8525 579.8896 429.251 v
579.8896 440.6099 l
579.8896 441.3896 580.3115 442.0273 580.8281 442.0273 c
581.3447 442.0273 581.7666 441.3896 581.7666 440.6099 c
581.7666 424.458 l
s
*U
U
u
*u
588.8877 424.458 m
588.8877 423.6782 588.3525 423.0405 587.6992 423.0405 c
587.0449 423.0405 586.5098 423.6782 586.5098 424.458 c
586.5098 440.6099 l
586.5098 441.3896 587.1475 442.0273 587.9268 442.0273 c
596.7207 442.0273 l
597.5 442.0273 598.1377 441.5581 598.1377 440.9844 c
598.1377 440.4102 597.5 439.9409 596.7207 439.9409 c
590.3047 439.9409 l
589.5254 439.9409 588.8877 439.3032 588.8877 438.5234 c
588.8877 435.3633 l
588.8877 434.5835 589.5254 433.9458 590.3047 433.9458 c
595.1348 433.9458 l
595.9141 433.9458 596.5518 433.5137 596.5518 432.9863 c
596.5518 432.458 595.9141 432.0264 595.1348 432.0264 c
590.3047 432.0264 l
589.5254 432.0264 588.8877 431.3887 588.8877 430.6089 c
588.8877 424.458 l
s
*U
U
u
*u
607.0957 422.6509 m
604.6572 422.6509 602.7559 423.5996 601.3926 425.4976 c
600.0303 427.395 599.3486 429.7222 599.3486 432.478 c
599.3486 435.355 600.0625 437.7305 601.4902 439.605 c
602.918 441.4795 604.8105 442.4165 607.166 442.4165 c
609.5117 442.4165 611.3945 441.4956 612.8125 439.6538 c
614.2314 437.8115 614.9414 435.4893 614.9414 432.687 c
614.9414 429.9956 614.2529 427.6504 612.876 425.6504 c
611.498 423.6509 609.5723 422.6509 607.0957 422.6509 c
s
1 D
607.1514 424.5845 m
608.8115 424.5845 610.1094 425.3408 611.0469 426.8535 c
611.9824 428.3662 612.4512 430.3154 612.4512 432.7012 c
612.4512 435.1514 611.9668 437.0586 610.998 438.4229 c
610.0283 439.7871 608.7422 440.4692 607.1377 440.4692 c
605.5146 440.4692 604.2256 439.7314 603.2705 438.2559 c
602.3154 436.7803 601.8379 434.8496 601.8379 432.4644 c
601.8379 430.1348 602.3203 428.2393 603.2852 426.7773 c
604.249 425.3154 605.5381 424.5845 607.1514 424.5845 c
s
*U
U
U
u
u
*u
0 D
115.666 495.3032 m
115.666 494.5234 115.1309 493.8857 114.4766 493.8857 c
113.8228 493.8857 113.2876 494.5234 113.2876 495.3032 c
113.2876 509.3687 l
113.2876 510.1484 112.6499 510.7861 111.8701 510.7861 c
109.2661 510.7861 l
108.4863 510.7861 107.8486 511.2554 107.8486 511.8291 c
107.8486 512.4033 108.4863 512.8726 109.2661 512.8726 c
119.7012 512.8726 l
120.481 512.8726 121.1187 512.4033 121.1187 511.8291 c
121.1187 511.2554 120.481 510.7861 119.7012 510.7861 c
117.0835 510.7861 l
116.3037 510.7861 115.666 510.1484 115.666 509.3687 c
115.666 495.3032 l
s
*U
U
u
*u
136.5112 512.8726 m
137.0801 512.8726 137.3423 512.2681 137.0933 511.5293 c
131.6025 495.229 l
131.3535 494.4902 130.6328 493.8857 130.0005 493.8857 c
129.3682 493.8857 128.6475 494.4902 128.3984 495.229 c
122.9063 511.5293 l
122.6572 512.2681 123.0142 512.8726 123.6992 512.8726 c
124.3843 512.8726 125.1489 512.2686 125.3984 511.5298 c
129.7827 498.5527 l
130.0322 497.8145 130.4385 497.8149 130.686 498.5542 c
135.0269 511.5283 l
135.2744 512.2676 135.9424 512.8726 136.5112 512.8726 c
s
*U
U
U
u
u
*u
128.2681 395.6851 m
128.2681 394.9053 127.7485 394.2676 127.1133 394.2676 c
126.4785 394.2676 125.959 394.9053 125.959 395.6851 c
125.959 409.4307 l
125.959 410.2104 125.7368 410.2505 125.4653 409.5195 c
120.2896 395.5962 l
120.0181 394.8652 119.4326 394.2676 118.9893 394.2676 c
118.5454 394.2676 117.958 394.8647 117.6836 395.5942 c
112.4507 409.5215 l
112.1763 410.251 111.9521 410.2104 111.9521 409.4307 c
111.9521 395.6851 l
111.9521 394.9053 111.4985 394.2676 110.9434 394.2676 c
110.3887 394.2676 109.9351 394.9053 109.9351 395.6851 c
109.9351 411.8369 l
109.9351 412.6167 110.5728 413.2544 111.3525 413.2544 c
112.0386 413.2544 l
112.8184 413.2544 113.6816 412.6577 113.957 411.9287 c
118.6909 399.3945 l
118.9663 398.6655 119.4126 398.6675 119.6821 399.3984 c
124.3013 411.9248 l
124.5708 412.6558 125.4292 413.2544 126.209 413.2544 c
126.8506 413.2544 l
127.6304 413.2544 128.2681 412.6167 128.2681 411.8369 c
128.2681 395.6851 l
s
*U
U
u
*u
143.833 411.8369 m
143.833 412.6167 144.2773 413.2544 144.8203 413.2544 c
145.3638 413.2544 145.8081 412.6167 145.8081 411.8369 c
145.8081 402.2695 l
145.8081 401.4897 145.7178 400.2207 145.6079 399.4487 c
145.1982 396.5806 143.979 395.4995 v
142.7598 394.4185 141.1626 393.8779 139.1875 393.8779 c
136.9897 393.8779 135.3623 394.4346 134.3052 395.5483 c
133.248 396.6621 132.7192 398.4297 132.7192 400.8521 c
132.7192 411.8369 l
132.7192 412.6167 133.2544 413.2544 133.9082 413.2544 c
134.5625 413.2544 135.0977 412.6167 135.0977 411.8369 c
135.0977 402.2681 l
135.0977 401.4883 135.1411 400.2144 135.1943 399.4365 c
135.2695 398.3359 135.6123 397.7324 v
135.9556 397.1289 136.4751 396.6836 137.1704 396.396 c
137.8657 396.1084 138.5938 395.9644 139.354 395.9644 c
140.8193 395.9644 141.9321 396.3496 142.6924 397.1201 c
143.4526 397.8901 143.833 399.1338 143.833 400.8506 c
143.833 411.8369 l
s
*U
U
u
*u
148.1865 399.2891 m
148.9463 399.4619 l
149.7065 399.6348 150.6958 399.2544 151.144 398.6167 c
153.0596 395.895 155.9346 395.895 v
157.4365 395.895 158.5679 396.2139 159.3281 396.8511 c
160.0884 397.4883 160.4688 398.3423 160.4688 399.4126 c
160.4688 400.2217 160.1792 400.873 159.6001 401.3667 c
159.0205 401.8599 158.3511 402.1992 157.5913 402.3853 c
155.1685 402.9824 l
154.4116 403.1689 153.1831 403.5107 152.439 403.7417 c
152.0049 403.8765 151.3789 404.2344 v
150.7529 404.5918 150.2222 405.1421 149.7861 405.8848 c
149.3501 406.6279 149.1323 407.4775 149.1323 408.4341 c
149.1323 410.022 149.7305 411.2871 150.9268 412.23 c
152.123 413.1724 153.6577 413.6436 155.5308 413.6436 c
158.9805 413.6436 161.248 412.0811 162.333 408.9561 c
161.5356 408.7197 l
160.7881 408.4976 159.9248 408.9023 159.6172 409.6187 c
159.3374 410.2705 158.4102 410.8408 v
157.4829 411.4111 156.4951 411.6963 155.4473 411.6963 c
154.4087 411.6963 153.4839 411.4214 152.6724 410.8721 c
151.8608 410.3223 151.4556 409.5444 151.4556 408.5381 c
151.4556 407.1313 152.4839 406.1812 154.54 405.687 c
156.7104 405.1782 l
157.4692 405.0005 158.6563 404.561 159.3481 404.2017 c
162.9585 402.3271 162.9585 399.6099 v
162.9585 397.9683 162.3491 396.6025 161.1294 395.5127 c
159.9102 394.4229 158.1924 393.8779 155.9761 393.8779 c
152.0439 393.8779 149.4478 395.6816 148.1865 399.2891 c
s
*U
U
u
*u
168.8706 395.6851 m
168.8706 394.9053 168.3354 394.2676 167.6812 394.2676 c
167.0269 394.2676 166.4917 394.9053 166.4917 395.6851 c
166.4917 411.8369 l
166.4917 412.6167 167.0269 413.2544 167.6812 413.2544 c
168.3354 413.2544 168.8706 412.6167 168.8706 411.8369 c
168.8706 395.6851 l
s
*U
U
u
*u
184.9922 400.6523 m
185.7793 400.4756 l
186.5396 400.3052 186.8599 399.604 186.4902 398.9175 c
183.7773 393.8779 180.1235 393.8779 v
177.7217 393.8779 175.8369 394.8477 174.4692 396.7871 c
173.1016 398.7266 172.4175 401.1118 172.4175 403.9419 c
172.4175 406.8647 173.1318 409.2129 174.5596 410.9849 c
175.9878 412.7573 177.9028 413.6436 180.3047 413.6436 c
183.8652 413.6436 186.1509 411.6084 187.1621 407.5376 c
186.3125 407.3687 l
185.5479 407.2168 184.6279 407.6582 184.2681 408.3496 c
182.5625 411.627 180.2905 411.627 v
178.6118 411.627 177.3115 410.9243 176.3887 409.5195 c
175.4663 408.1147 175.0049 406.1416 175.0049 403.6011 c
175.0049 401.2734 175.478 399.4072 176.4238 398.0024 c
177.3696 396.5977 178.6216 395.895 180.1792 395.895 c
182.5996 395.895 184.2036 397.481 184.9922 400.6523 c
s
*U
U
U
u
u
*u
112.314 296.0664 m
112.314 295.2871 111.7788 294.6494 111.1245 294.6494 c
110.4702 294.6494 109.9351 295.2871 109.9351 296.0664 c
109.9351 312.2192 l
109.9351 312.999 110.5728 313.6367 111.3525 313.6367 c
115.25 313.6367 l
116.0298 313.6367 117.2974 313.5381 118.0679 313.4175 c
120.3257 313.064 121.3271 311.9189 v
122.3286 310.7734 122.8296 309.4683 122.8296 308.0034 c
122.8296 306.3711 122.2847 305.022 121.1953 303.9556 c
120.1055 302.8892 118.6797 302.356 116.918 302.356 c
113.7314 302.356 l
112.9517 302.356 112.314 301.7183 112.314 300.9385 c
112.314 296.0664 l
s
1 D
112.314 305.7485 m
112.314 304.9688 112.9517 304.3311 113.7314 304.3311 c
115.2642 304.3311 l
116.0439 304.3311 117.311 304.4355 118.0801 304.563 c
118.7075 304.667 119.3936 305.3394 v
120.0801 306.0117 120.4233 306.8994 120.4233 308.0034 c
120.4233 308.9492 120.1172 309.793 119.5049 310.5347 c
118.8931 311.2764 118.0073 311.6475 116.8481 311.6475 c
113.7314 311.6475 l
112.9517 311.6475 112.314 311.0098 112.314 310.23 c
112.314 305.7485 l
s
*U
U
u
*u
0 D
128.2407 296.0664 m
128.2407 295.2871 127.7056 294.6494 127.0513 294.6494 c
126.397 294.6494 125.8618 295.2871 125.8618 296.0664 c
125.8618 312.2192 l
125.8618 312.999 126.397 313.6367 127.0513 313.6367 c
127.7056 313.6367 128.2407 312.999 128.2407 312.2192 c
128.2407 296.0664 l
s
*U
U
u
*u
144.3618 301.0347 m
145.1489 300.8579 l
145.9092 300.6875 146.2295 299.9863 145.8599 299.2998 c
143.147 294.2598 139.4932 294.2598 v
137.0913 294.2598 135.2065 295.2295 133.8389 297.1694 c
132.4712 299.1089 131.7871 301.4941 131.7871 304.3242 c
131.7871 307.2471 132.5015 309.5952 133.9292 311.3672 c
135.3574 313.1396 137.2725 314.0259 139.6743 314.0259 c
143.2349 314.0259 145.5205 311.9907 146.5317 307.9199 c
145.6821 307.751 l
144.9175 307.5991 143.9976 308.0405 143.6377 308.7319 c
141.9321 312.0093 139.6602 312.0093 v
137.9814 312.0093 136.6812 311.3066 135.7583 309.9019 c
134.8359 308.4971 134.3745 306.5239 134.3745 303.9834 c
134.3745 301.6558 134.8477 299.7896 135.7935 298.3848 c
136.7393 296.98 137.9912 296.2773 139.5488 296.2773 c
141.9692 296.2773 143.5732 297.8633 144.3618 301.0347 c
s
*U
U
u
*u
155.2114 296.0664 m
155.2114 295.2871 154.6763 294.6494 154.0225 294.6494 c
153.3682 294.6494 152.833 295.2871 152.833 296.0664 c
152.833 310.1328 l
152.833 310.9126 152.1953 311.5503 151.4155 311.5503 c
148.8115 311.5503 l
148.0317 311.5503 147.394 312.0195 147.394 312.5938 c
147.394 313.1675 148.0317 313.6367 148.8115 313.6367 c
159.2466 313.6367 l
160.0264 313.6367 160.6641 313.1675 160.6641 312.5938 c
160.6641 312.0195 160.0264 311.5503 159.2466 311.5503 c
156.6289 311.5503 l
155.8491 311.5503 155.2114 310.9126 155.2114 310.1328 c
155.2114 296.0664 l
s
*U
U
u
*u
174.1284 312.2192 m
174.1284 312.999 174.5728 313.6367 175.1162 313.6367 c
175.6592 313.6367 176.1035 312.999 176.1035 312.2192 c
176.1035 302.6519 l
176.1035 301.8721 176.0132 300.603 175.9033 299.8311 c
175.4937 296.9629 174.2744 295.8818 v
173.0552 294.8008 171.458 294.2598 169.4829 294.2598 c
167.2852 294.2598 165.6577 294.8164 164.6006 295.9307 c
163.5435 297.0444 163.0146 298.812 163.0146 301.2344 c
163.0146 312.2192 l
163.0146 312.999 163.5498 313.6367 164.2041 313.6367 c
164.8579 313.6367 165.3931 312.999 165.3931 312.2192 c
165.3931 302.6504 l
165.3931 301.8706 165.4365 300.5967 165.4897 299.8188 c
165.5649 298.7183 165.9077 298.1147 v
166.251 297.5112 166.7705 297.0659 167.4658 296.7783 c
168.1611 296.4907 168.8892 296.3467 169.6494 296.3467 c
171.1147 296.3467 172.2275 296.7319 172.9878 297.5024 c
173.748 298.2725 174.1284 299.5161 174.1284 301.2329 c
174.1284 312.2192 l
s
*U
U
u
*u
193.6748 295.9541 m
193.979 295.2363 193.667 294.6494 192.9814 294.6494 c
192.2959 294.6494 191.4849 295.2363 191.1797 295.9531 c
188.7891 301.5664 l
188.4839 302.2837 187.5962 302.8706 186.8164 302.8706 c
184.2114 302.8706 l
183.4316 302.8706 182.7939 302.2329 182.7939 301.4531 c
182.7939 296.0664 l
182.7939 295.2871 182.293 294.6494 181.6812 294.6494 c
181.0693 294.6494 180.5684 295.2871 180.5684 296.0664 c
180.5684 312.2192 l
180.5684 312.999 181.2061 313.6367 181.9858 313.6367 c
186.6343 313.6367 l
187.4141 313.6367 188.6816 313.5381 189.4521 313.417 c
191.5869 313.0825 192.5654 311.9746 v
193.5439 310.8662 194.0332 309.6538 194.0332 308.3369 c
194.0332 307.3262 193.7593 306.3569 193.2124 305.4297 c
192.665 304.5024 191.7612 303.8394 190.5 303.4409 c
193.6748 295.9541 l
s
1 D
182.7939 306.2217 m
182.7939 305.4419 183.4316 304.8042 184.2114 304.8042 c
186.3423 304.8042 l
187.1221 304.8042 188.3906 304.8994 189.1611 305.0161 c
190.043 305.1494 190.688 305.8403 v
191.332 306.5308 191.6543 307.3774 191.6543 308.3789 c
191.6543 309.3804 191.314 310.1592 190.6323 310.7158 c
189.9507 311.272 189.0903 311.5503 188.0518 311.5503 c
184.2114 311.5503 l
183.4316 311.5503 182.7939 310.9126 182.7939 310.1328 c
182.7939 306.2217 l
s
*U
U
u
*u
0 D
208.8896 296.7363 m
209.6694 296.7363 210.3071 296.2666 210.3071 295.6924 c
210.3071 295.1191 209.6694 294.6494 208.8896 294.6494 c
199.4424 294.6494 l
198.6626 294.6494 198.0249 295.2871 198.0249 296.0664 c
198.0249 312.2192 l
198.0249 312.999 198.6626 313.6367 199.4424 313.6367 c
208.6255 313.6367 l
209.4053 313.6367 210.043 313.1675 210.043 312.5938 c
210.043 312.0195 209.4053 311.5503 208.6255 311.5503 c
201.8213 311.5503 l
201.0415 311.5503 200.4038 310.9126 200.4038 310.1328 c
200.4038 306.9307 l
200.4038 306.1509 201.0415 305.5132 201.8213 305.5132 c
206.6362 305.5132 l
207.416 305.5132 208.0537 305.0781 208.0537 304.5469 c
208.0537 304.0151 207.416 303.5801 206.6362 303.5801 c
201.8213 303.5801 l
201.0415 303.5801 200.4038 302.9424 200.4038 302.1626 c
200.4038 298.1538 l
200.4038 297.374 201.0415 296.7363 201.8213 296.7363 c
208.8896 296.7363 l
s
*U
U
u
*u
211.5454 299.6714 m
212.3057 299.8442 l
213.0654 300.0171 214.0547 299.6367 214.5029 298.999 c
216.4185 296.2773 219.2935 296.2773 v
220.7954 296.2773 221.9268 296.5962 222.687 297.2334 c
223.4473 297.8706 223.8276 298.7246 223.8276 299.7949 c
223.8276 300.604 223.5381 301.2554 222.959 301.749 c
222.3794 302.2422 221.71 302.5815 220.9502 302.7676 c
218.5273 303.3647 l
217.7705 303.5513 216.542 303.8931 215.7979 304.124 c
215.3638 304.2588 214.7378 304.6167 v
214.1118 304.9741 213.5811 305.5244 213.145 306.2671 c
212.709 307.0103 212.4912 307.8599 212.4912 308.8164 c
212.4912 310.4043 213.0894 311.6694 214.2856 312.6123 c
215.4819 313.5547 217.0166 314.0259 218.8896 314.0259 c
222.3394 314.0259 224.6069 312.4634 225.6919 309.3384 c
224.8945 309.1016 l
224.147 308.8799 223.2837 309.2847 222.9761 310.001 c
222.6963 310.6528 221.769 311.2231 v
220.8418 311.7935 219.854 312.0786 218.8062 312.0786 c
217.7676 312.0786 216.8428 311.8037 216.0313 311.2544 c
215.2197 310.7046 214.8145 309.9268 214.8145 308.9204 c
214.8145 307.5137 215.8428 306.5635 217.8989 306.0693 c
220.0693 305.5605 l
220.8281 305.3828 222.0151 304.9434 222.707 304.584 c
226.3174 302.7095 226.3174 299.9922 v
226.3174 298.3506 225.708 296.9849 224.4883 295.8945 c
223.269 294.8047 221.5513 294.2598 219.335 294.2598 c
215.4028 294.2598 212.8066 296.0635 211.5454 299.6714 c
s
*U
U
U
u
u
*u
121.7114 214.0166 m
122.2803 214.0166 122.5425 213.4121 122.2935 212.6738 c
116.8027 196.373 l
116.5537 195.6348 115.833 195.0303 115.2007 195.0303 c
114.5684 195.0303 113.8477 195.6348 113.5986 196.373 c
108.1064 212.6738 l
107.8574 213.4121 108.2144 214.0166 108.8994 214.0166 c
109.5845 214.0166 110.3491 213.4121 110.5986 212.6738 c
114.9829 199.6973 l
115.2324 198.959 115.6387 198.959 115.8862 199.6982 c
120.2271 212.6729 l
120.4746 213.4121 121.1426 214.0166 121.7114 214.0166 c
s
*U
U
u
*u
127.6006 196.4473 m
127.6006 195.668 127.0654 195.0303 126.4111 195.0303 c
125.7568 195.0303 125.2217 195.668 125.2217 196.4473 c
125.2217 212.5996 l
125.2217 213.3789 125.7568 214.0166 126.4111 214.0166 c
127.0654 214.0166 127.6006 213.3789 127.6006 212.5996 c
127.6006 196.4473 l
s
*U
U
u
*u
133.7612 195.0303 m
132.9814 195.0303 132.3438 195.668 132.3438 196.4473 c
132.3438 212.5996 l
132.3438 213.3789 132.9814 214.0166 133.7612 214.0166 c
137.2969 214.0166 l
138.0767 214.0166 139.3408 213.8965 140.1064 213.75 c
143.481 213.1035 144.9741 211.2764 v
146.4668 209.4502 147.2134 207.2148 147.2134 204.5723 c
147.2134 201.8926 146.4854 199.6318 145.0293 197.791 c
143.5737 195.9502 141.728 195.0303 139.4937 195.0303 c
133.7612 195.0303 l
s
1 D
134.7227 198.4639 m
134.7227 197.6846 135.3604 197.0469 136.1401 197.0469 c
137.1577 197.0469 l
137.9375 197.0469 139.2012 197.1699 139.9658 197.3203 c
142.1641 197.752 143.2212 199.1611 v
144.2783 200.5713 144.8071 202.4307 144.8071 204.7393 c
144.8071 206.6123 144.3037 208.2949 143.2979 209.7881 c
142.2915 211.2813 140.7173 212.0283 138.5752 212.0283 c
136.1401 212.0283 l
135.3604 212.0283 134.7227 211.3906 134.7227 210.6113 c
134.7227 198.4639 l
s
*U
U
u
*u
0 D
161.6387 197.1172 m
162.4185 197.1172 163.0562 196.6475 163.0562 196.0732 c
163.0562 195.5 162.4185 195.0303 161.6387 195.0303 c
152.1914 195.0303 l
151.4116 195.0303 150.7739 195.668 150.7739 196.4473 c
150.7739 212.5996 l
150.7739 213.3789 151.4116 214.0166 152.1914 214.0166 c
161.3745 214.0166 l
162.1543 214.0166 162.792 213.5469 162.792 212.9736 c
162.792 212.4004 162.1543 211.9307 161.3745 211.9307 c
154.5703 211.9307 l
153.7905 211.9307 153.1528 211.293 153.1528 210.5137 c
153.1528 207.3105 l
153.1528 206.5313 153.7905 205.8936 154.5703 205.8936 c
159.3853 205.8936 l
160.165 205.8936 160.8027 205.458 160.8027 204.9268 c
160.8027 204.3955 160.165 203.96 159.3853 203.96 c
154.5703 203.96 l
153.7905 203.96 153.1528 203.3223 153.1528 202.543 c
153.1528 198.5342 l
153.1528 197.7549 153.7905 197.1172 154.5703 197.1172 c
161.6387 197.1172 l
s
*U
U
u
*u
172.9321 194.6406 m
170.4932 194.6406 168.5923 195.5898 167.229 197.4873 c
165.8657 199.3848 165.1841 201.7119 165.1841 204.4678 c
165.1841 207.3447 165.8984 209.7207 167.3262 211.5947 c
168.7544 213.4688 170.646 214.4063 173.0015 214.4063 c
175.3477 214.4063 177.23 213.4854 178.6489 211.6436 c
180.0679 209.8018 180.7769 207.4795 180.7769 204.6768 c
180.7769 201.9854 180.0884 199.6396 178.7114 197.6406 c
177.3345 195.6406 175.4077 194.6406 172.9321 194.6406 c
s
1 D
172.9878 196.5742 m
174.6475 196.5742 175.9458 197.3311 176.8823 198.8438 c
177.8188 200.3564 178.2871 202.3057 178.2871 204.6904 c
178.2871 207.1406 177.8027 209.0479 176.8335 210.4131 c
175.8647 211.7773 174.5781 212.459 172.9736 212.459 c
171.3511 212.459 170.062 211.7217 169.1069 210.2451 c
168.1514 208.7695 167.6743 206.8389 167.6743 204.4541 c
167.6743 202.124 168.1563 200.2285 169.1206 198.7666 c
170.085 197.3047 171.374 196.5742 172.9878 196.5742 c
s
*U
U
u
*u
0 D
182.2656 200.0518 m
183.0254 200.2246 l
183.7856 200.3965 184.7749 200.0166 185.2231 199.3789 c
187.1387 196.6572 190.0137 196.6572 v
191.5156 196.6572 192.647 196.9766 193.4072 197.6143 c
194.1675 198.251 194.5479 199.1045 194.5479 200.1748 c
194.5479 200.9844 194.2583 201.6357 193.6792 202.1289 c
193.0996 202.6221 192.4302 202.9619 191.6704 203.1484 c
189.2476 203.7461 l
188.4907 203.9326 187.2622 204.2744 186.5181 204.5049 c
186.084 204.6396 185.458 204.9971 v
184.832 205.3545 184.3013 205.9053 183.8652 206.6475 c
183.4292 207.3906 183.2114 208.2402 183.2114 209.1973 c
183.2114 210.7852 183.8096 212.0498 185.0059 212.9922 c
186.2021 213.9355 187.7368 214.4063 189.6099 214.4063 c
193.0596 214.4063 195.3271 212.8438 196.4121 209.7188 c
195.6147 209.4824 l
194.8672 209.2607 194.0039 209.665 193.6963 210.3818 c
193.4165 211.0332 192.4893 211.6035 v
191.562 212.1738 190.5742 212.459 189.5264 212.459 c
188.4878 212.459 187.563 212.1846 186.7515 211.6348 c
185.9399 211.085 185.5347 210.3066 185.5347 209.3008 c
185.5347 207.8936 186.563 206.9434 188.6191 206.4502 c
190.7896 205.9414 l
191.5483 205.7627 192.7354 205.3232 193.4272 204.9639 c
197.0376 203.0898 197.0376 200.373 v
197.0376 198.7305 196.4282 197.3652 195.2085 196.2754 c
193.9893 195.1855 192.2715 194.6406 190.0552 194.6406 c
186.123 194.6406 183.5269 196.4443 182.2656 200.0518 c
s
*U
U
U
u
u
*u
222.1206 424.458 m
222.1206 423.6782 221.5854 423.0405 220.9316 423.0405 c
220.2773 423.0405 219.7422 423.6782 219.7422 424.458 c
219.7422 438.5234 l
219.7422 439.3032 219.1045 439.9409 218.3247 439.9409 c
215.7207 439.9409 l
214.9409 439.9409 214.3032 440.4102 214.3032 440.9844 c
214.3032 441.5581 214.9409 442.0273 215.7207 442.0273 c
226.1558 442.0273 l
226.9355 442.0273 227.5732 441.5581 227.5732 440.9844 c
227.5732 440.4102 226.9355 439.9409 226.1558 439.9409 c
223.5381 439.9409 l
222.7583 439.9409 222.1206 439.3032 222.1206 438.5234 c
222.1206 424.458 l
s
*U
U
u
*u
232.5947 424.458 m
232.5947 423.6782 232.0596 423.0405 231.4053 423.0405 c
230.751 423.0405 230.2158 423.6782 230.2158 424.458 c
230.2158 440.6099 l
230.2158 441.3896 230.751 442.0273 231.4053 442.0273 c
232.0596 442.0273 232.5947 441.3896 232.5947 440.6099 c
232.5947 424.458 l
s
*U
U
u
*u
243.0688 424.458 m
243.0688 423.6782 242.5337 423.0405 241.8799 423.0405 c
241.2256 423.0405 240.6904 423.6782 240.6904 424.458 c
240.6904 438.5234 l
240.6904 439.3032 240.0527 439.9409 239.2729 439.9409 c
236.6689 439.9409 l
235.8892 439.9409 235.2515 440.4102 235.2515 440.9844 c
235.2515 441.5581 235.8892 442.0273 236.6689 442.0273 c
247.104 442.0273 l
247.8838 442.0273 248.5215 441.5581 248.5215 440.9844 c
248.5215 440.4102 247.8838 439.9409 247.104 439.9409 c
244.4863 439.9409 l
243.7065 439.9409 243.0688 439.3032 243.0688 438.5234 c
243.0688 424.458 l
s
*U
U
u
*u
260.958 425.127 m
261.7378 425.127 262.3755 424.6577 262.3755 424.084 c
262.3755 423.5098 261.7378 423.0405 260.958 423.0405 c
252.5815 423.0405 l
251.8018 423.0405 251.1641 423.6782 251.1641 424.458 c
251.1641 440.6099 l
251.1641 441.3896 251.7119 442.0273 252.3813 442.0273 c
253.0508 442.0273 253.5986 441.3896 253.5986 440.6099 c
253.5986 426.5444 l
253.5986 425.7646 254.2363 425.127 255.0161 425.127 c
260.958 425.127 l
s
*U
U
u
*u
275.98 425.127 m
276.7598 425.127 277.3975 424.6577 277.3975 424.084 c
277.3975 423.5098 276.7598 423.0405 275.98 423.0405 c
266.5327 423.0405 l
265.7529 423.0405 265.1152 423.6782 265.1152 424.458 c
265.1152 440.6099 l
265.1152 441.3896 265.7529 442.0273 266.5327 442.0273 c
275.7158 442.0273 l
276.4956 442.0273 277.1333 441.5581 277.1333 440.9844 c
277.1333 440.4102 276.4956 439.9409 275.7158 439.9409 c
268.9116 439.9409 l
268.1318 439.9409 267.4941 439.3032 267.4941 438.5234 c
267.4941 435.3213 l
267.4941 434.5415 268.1318 433.9038 268.9116 433.9038 c
273.7266 433.9038 l
274.5063 433.9038 275.144 433.4688 275.144 432.9375 c
275.144 432.4058 274.5063 431.9707 273.7266 431.9707 c
268.9116 431.9707 l
268.1318 431.9707 267.4941 431.333 267.4941 430.5532 c
267.4941 426.5444 l
267.4941 425.7646 268.1318 425.127 268.9116 425.127 c
275.98 425.127 l
s
*U
U
U
u
u
*u
709.042 247.457 m
709.042 246.6777 708.5068 246.04 707.8535 246.04 c
707.1992 246.04 706.6641 246.6777 706.6641 247.457 c
706.6641 263.6094 l
706.6641 264.3887 707.3018 265.0264 708.0811 265.0264 c
711.9795 265.0264 l
712.7588 265.0264 714.0264 264.9277 714.7969 264.8076 c
717.0547 264.4541 718.0557 263.3086 v
719.0576 262.1631 719.5576 260.8584 719.5576 259.3936 c
719.5576 257.7607 719.0127 256.4121 717.9238 255.3457 c
716.834 254.2793 715.4082 253.7461 713.6465 253.7461 c
710.459 253.7461 l
709.6797 253.7461 709.042 253.1084 709.042 252.3291 c
709.042 247.457 l
s
1 D
709.042 257.1377 m
709.042 256.3584 709.6797 255.7207 710.459 255.7207 c
711.9932 255.7207 l
712.7725 255.7207 714.0391 255.8252 714.8086 255.9531 c
715.4355 256.0576 716.1221 256.7295 v
716.8086 257.4023 717.1514 258.29 717.1514 259.3936 c
717.1514 260.3389 716.8457 261.1826 716.2334 261.9248 c
715.6211 262.667 714.7363 263.0381 713.5771 263.0381 c
710.459 263.0381 l
709.6797 263.0381 709.042 262.4004 709.042 261.6211 c
709.042 257.1377 l
s
*U
U
u
*u
0 D
733.7959 247.3867 m
734.0381 246.6465 733.6895 246.04 733.0215 246.04 c
732.3545 246.04 731.6006 246.6436 731.3467 247.3799 c
730.3594 250.25 l
730.1055 250.9863 729.2607 251.5898 728.4814 251.5898 c
724.2695 251.5898 l
723.4902 251.5898 722.666 250.9795 722.4375 250.2344 c
721.5693 247.3955 l
721.3408 246.6504 720.707 246.04 720.1602 246.04 c
719.6123 246.04 719.3623 246.6465 719.6035 247.3877 c
724.8965 263.6787 l
725.1377 264.4199 725.9404 265.0264 726.6797 265.0264 c
727.4199 265.0264 728.2236 264.4199 728.4658 263.6797 c
733.7959 247.3867 l
s
1 D
727.9746 253.3701 m
728.7539 253.3701 729.1963 253.9775 728.957 254.7188 c
726.8848 261.1465 l
726.6455 261.8877 726.2549 261.8877 726.0156 261.1455 c
723.9482 254.7197 l
723.709 253.9775 724.1514 253.3701 724.9307 253.3701 c
727.9746 253.3701 l
s
*U
U
u
*u
0 D
746.877 263.6094 m
746.877 264.3887 747.3213 265.0264 747.8652 265.0264 c
748.4082 265.0264 748.8525 264.3887 748.8525 263.6094 c
748.8525 254.041 l
748.8525 253.2617 748.7627 251.9922 748.6523 251.2207 c
748.2422 248.3535 747.0234 247.2725 v
745.8037 246.1914 744.2061 245.6504 742.2314 245.6504 c
740.0332 245.6504 738.4063 246.207 737.3486 247.3213 c
736.292 248.4346 735.7637 250.2021 735.7637 252.624 c
735.7637 263.6094 l
735.7637 264.3887 736.2988 265.0264 736.9531 265.0264 c
737.6064 265.0264 738.1416 264.3887 738.1416 263.6094 c
738.1416 254.04 l
738.1416 253.2607 738.1855 251.9863 738.2383 251.209 c
738.3135 250.1084 738.6563 249.5049 v
738.999 248.9014 739.5186 248.4561 740.2139 248.168 c
740.9102 247.8809 741.6377 247.7373 742.3984 247.7373 c
743.8633 247.7373 744.9756 248.1221 745.7363 248.8926 c
746.4971 249.6631 746.877 250.9063 746.877 252.623 c
746.877 263.6094 l
s
*U
U
u
*u
751.2305 251.0615 m
751.9912 251.2344 l
752.751 251.4063 753.7402 251.0264 754.1885 250.3887 c
756.1035 247.667 758.9785 247.667 v
760.4805 247.667 761.6113 247.9863 762.3721 248.624 c
763.1328 249.2607 763.5127 250.1143 763.5127 251.1846 c
763.5127 251.9941 763.2227 252.6455 762.6436 253.1387 c
762.0645 253.6318 761.3945 253.9717 760.6348 254.1582 c
758.2119 254.7559 l
757.4551 254.9424 756.2266 255.2842 755.4824 255.5146 c
755.0488 255.6494 754.4229 256.0068 v
753.7969 256.3643 753.2656 256.915 752.8301 257.6572 c
752.3945 258.4004 752.1768 259.25 752.1768 260.207 c
752.1768 261.7949 752.7744 263.0596 753.9707 264.002 c
755.167 264.9453 756.7012 265.416 758.5752 265.416 c
762.0244 265.416 764.292 263.8535 765.377 260.7285 c
764.5791 260.4922 l
763.832 260.2705 762.9688 260.6748 762.6621 261.3916 c
762.3818 262.043 761.4541 262.6133 v
760.5264 263.1836 759.5391 263.4688 758.4912 263.4688 c
757.4531 263.4688 756.5273 263.1943 755.7168 262.6445 c
754.9053 262.0947 754.499 261.3164 754.499 260.3105 c
754.499 258.9033 755.5273 257.9531 757.584 257.46 c
759.7549 256.9502 l
760.5137 256.7725 761.7012 256.333 762.3926 255.9736 c
766.0029 254.0996 766.0029 251.3828 v
766.0029 249.7402 765.3926 248.375 764.1738 247.2852 c
762.9541 246.1953 761.2363 245.6504 759.0195 245.6504 c
755.0879 245.6504 752.4912 247.4541 751.2305 251.0615 c
s
*U
U
u
*u
780.4014 248.127 m
781.1807 248.127 781.8184 247.6572 781.8184 247.083 c
781.8184 246.5098 781.1807 246.04 780.4014 246.04 c
770.9531 246.04 l
770.1738 246.04 769.5361 246.6777 769.5361 247.457 c
769.5361 263.6094 l
769.5361 264.3887 770.1738 265.0264 770.9531 265.0264 c
780.1367 265.0264 l
780.916 265.0264 781.5537 264.5566 781.5537 263.9834 c
781.5537 263.4102 780.916 262.9404 780.1367 262.9404 c
773.3311 262.9404 l
772.5518 262.9404 771.9141 262.3027 771.9141 261.5234 c
771.9141 258.3203 l
771.9141 257.541 772.5518 256.9033 773.3311 256.9033 c
778.1475 256.9033 l
778.9268 256.9033 779.5645 256.4678 779.5645 255.9365 c
779.5645 255.4053 778.9268 254.9697 778.1475 254.9697 c
773.3311 254.9697 l
772.5518 254.9697 771.9141 254.332 771.9141 253.5527 c
771.9141 249.5439 l
771.9141 248.7646 772.5518 248.127 773.3311 248.127 c
780.4014 248.127 l
s
*U
U
U
u
u
*u
685.0088 449.7515 m
685.3135 449.0342 685.002 448.4468 684.3164 448.4468 c
683.6299 448.4468 682.8193 449.0337 682.5137 449.751 c
680.124 455.3633 l
679.8184 456.0806 678.9307 456.6675 678.1514 456.6675 c
675.5459 456.6675 l
674.7666 456.6675 674.1289 456.0298 674.1289 455.25 c
674.1289 449.8643 l
674.1289 449.0845 673.6279 448.4468 673.0156 448.4468 c
672.4043 448.4468 671.9033 449.0845 671.9033 449.8643 c
671.9033 466.0161 l
671.9033 466.7959 672.541 467.4336 673.3203 467.4336 c
677.9697 467.4336 l
678.749 467.4336 680.0166 467.335 680.7871 467.2139 c
682.9219 466.8794 683.9004 465.7715 v
684.8779 464.6631 685.3672 463.4507 685.3672 462.1338 c
685.3672 461.123 685.0938 460.1538 684.5469 459.2266 c
684 458.2993 683.0957 457.6362 681.835 457.2378 c
685.0088 449.7515 l
s
1 D
674.1289 460.0186 m
674.1289 459.2388 674.7666 458.6011 675.5459 458.6011 c
677.6777 458.6011 l
678.457 458.6011 679.7256 458.6963 680.4961 458.813 c
681.3779 458.9463 682.0225 459.6372 v
682.667 460.3276 682.9893 461.1743 682.9893 462.1758 c
682.9893 463.1772 682.6484 463.9561 681.9668 464.5127 c
681.2852 465.0688 680.4248 465.3472 679.3867 465.3472 c
675.5459 465.3472 l
674.7666 465.3472 674.1289 464.7095 674.1289 463.9297 c
674.1289 460.0186 l
s
*U
U
u
*u
0 D
700.2256 450.5332 m
701.0049 450.5332 701.6426 450.064 701.6426 449.4902 c
701.6426 448.916 701.0049 448.4468 700.2256 448.4468 c
690.7773 448.4468 l
689.998 448.4468 689.3604 449.0845 689.3604 449.8643 c
689.3604 466.0161 l
689.3604 466.7959 689.998 467.4336 690.7773 467.4336 c
699.9609 467.4336 l
700.7402 467.4336 701.3779 466.9644 701.3779 466.3906 c
701.3779 465.8164 700.7402 465.3472 699.9609 465.3472 c
693.1553 465.3472 l
692.376 465.3472 691.7383 464.7095 691.7383 463.9297 c
691.7383 460.7275 l
691.7383 459.9478 692.376 459.3101 693.1553 459.3101 c
697.9717 459.3101 l
698.751 459.3101 699.3887 458.875 699.3887 458.3438 c
699.3887 457.812 698.751 457.377 697.9717 457.377 c
693.1553 457.377 l
692.376 457.377 691.7383 456.7393 691.7383 455.9595 c
691.7383 451.9507 l
691.7383 451.1709 692.376 450.5332 693.1553 450.5332 c
700.2256 450.5332 l
s
*U
U
u
*u
716.7422 467.4336 m
717.3115 467.4336 717.5742 466.8291 717.3252 466.0903 c
711.833 449.79 l
711.584 449.0513 710.8643 448.4468 710.2324 448.4468 c
709.5996 448.4468 708.8789 449.0513 708.6309 449.79 c
703.1377 466.0903 l
702.8896 466.8291 703.2461 467.4336 703.9307 467.4336 c
704.6152 467.4336 705.3799 466.8296 705.6299 466.0908 c
710.0137 453.1138 l
710.2637 452.375 710.6699 452.376 710.918 453.1152 c
715.2578 466.0894 l
715.5059 466.8286 716.1738 467.4336 716.7422 467.4336 c
s
*U
U
u
*u
731.1182 450.5332 m
731.8975 450.5332 732.5352 450.064 732.5352 449.4902 c
732.5352 448.916 731.8975 448.4468 731.1182 448.4468 c
721.6699 448.4468 l
720.8906 448.4468 720.2529 449.0845 720.2529 449.8643 c
720.2529 466.0161 l
720.2529 466.7959 720.8906 467.4336 721.6699 467.4336 c
730.8535 467.4336 l
731.6328 467.4336 732.2705 466.9644 732.2705 466.3906 c
732.2705 465.8164 731.6328 465.3472 730.8535 465.3472 c
724.0479 465.3472 l
723.2686 465.3472 722.6309 464.7095 722.6309 463.9297 c
722.6309 460.7275 l
722.6309 459.9478 723.2686 459.3101 724.0479 459.3101 c
728.8643 459.3101 l
729.6436 459.3101 730.2813 458.875 730.2813 458.3438 c
730.2813 457.812 729.6436 457.377 728.8643 457.377 c
724.0479 457.377 l
723.2686 457.377 722.6309 456.7393 722.6309 455.9595 c
722.6309 451.9507 l
722.6309 451.1709 723.2686 450.5332 724.0479 450.5332 c
731.1182 450.5332 l
s
*U
U
u
*u
748.9658 449.7515 m
749.2705 449.0342 748.959 448.4468 748.2734 448.4468 c
747.5869 448.4468 746.7764 449.0337 746.4707 449.751 c
744.0811 455.3633 l
743.7754 456.0806 742.8877 456.6675 742.1084 456.6675 c
739.5029 456.6675 l
738.7236 456.6675 738.0859 456.0298 738.0859 455.25 c
738.0859 449.8643 l
738.0859 449.0845 737.585 448.4468 736.9727 448.4468 c
736.3613 448.4468 735.8604 449.0845 735.8604 449.8643 c
735.8604 466.0161 l
735.8604 466.7959 736.498 467.4336 737.2773 467.4336 c
741.9268 467.4336 l
742.7061 467.4336 743.9736 467.335 744.7441 467.2139 c
746.8789 466.8794 747.8574 465.7715 v
748.835 464.6631 749.3242 463.4507 749.3242 462.1338 c
749.3242 461.123 749.0508 460.1538 748.5039 459.2266 c
747.957 458.2993 747.0527 457.6362 745.792 457.2378 c
748.9658 449.7515 l
s
1 D
738.0859 460.0186 m
738.0859 459.2388 738.7236 458.6011 739.5029 458.6011 c
741.6348 458.6011 l
742.4141 458.6011 743.6826 458.6963 744.4531 458.813 c
745.335 458.9463 745.9795 459.6372 v
746.624 460.3276 746.9463 461.1743 746.9463 462.1758 c
746.9463 463.1772 746.6055 463.9561 745.9238 464.5127 c
745.2422 465.0688 744.3818 465.3472 743.3438 465.3472 c
739.5029 465.3472 l
738.7236 465.3472 738.0859 464.7095 738.0859 463.9297 c
738.0859 460.0186 l
s
*U
U
u
*u
0 D
751.2295 453.4683 m
751.9902 453.6411 l
752.75 453.814 753.7393 453.4336 754.1875 452.7959 c
756.1025 450.0742 758.9775 450.0742 v
760.4795 450.0742 761.6104 450.3931 762.3711 451.0303 c
763.1318 451.6675 763.5117 452.5215 763.5117 453.5918 c
763.5117 454.4009 763.2217 455.0522 762.6426 455.5459 c
762.0635 456.0391 761.3936 456.3784 760.6338 456.5645 c
758.2109 457.1616 l
757.4541 457.3481 756.2256 457.6899 755.4814 457.9209 c
755.0479 458.0557 754.4219 458.4136 v
753.7959 458.771 753.2646 459.3213 752.8291 460.064 c
752.3936 460.8071 752.1758 461.6567 752.1758 462.6133 c
752.1758 464.2012 752.7734 465.4663 753.9697 466.4092 c
755.166 467.3516 756.7002 467.8228 758.5742 467.8228 c
762.0234 467.8228 764.291 466.2603 765.376 463.1353 c
764.5781 462.8984 l
763.8311 462.6768 762.9678 463.0815 762.6602 463.7979 c
762.3809 464.4497 761.4531 465.02 v
760.5254 465.5903 759.5381 465.8755 758.4902 465.8755 c
757.4521 465.8755 756.5264 465.6006 755.7158 465.0513 c
754.9043 464.5015 754.498 463.7236 754.498 462.7173 c
754.498 461.3105 755.5264 460.3604 757.583 459.8662 c
759.7539 459.3574 l
760.5127 459.1797 761.7002 458.7402 762.3916 458.3809 c
766.002 456.5063 766.002 453.7891 v
766.002 452.1475 765.3916 450.7817 764.1729 449.6919 c
762.9531 448.6021 761.2354 448.0571 759.0186 448.0571 c
755.0869 448.0571 752.4902 449.8608 751.2295 453.4683 c
s
*U
U
u
*u
780.4004 450.5332 m
781.1797 450.5332 781.8174 450.064 781.8174 449.4902 c
781.8174 448.916 781.1797 448.4468 780.4004 448.4468 c
770.9521 448.4468 l
770.1729 448.4468 769.5352 449.0845 769.5352 449.8643 c
769.5352 466.0161 l
769.5352 466.7959 770.1729 467.4336 770.9521 467.4336 c
780.1357 467.4336 l
780.915 467.4336 781.5527 466.9644 781.5527 466.3906 c
781.5527 465.8164 780.915 465.3472 780.1357 465.3472 c
773.3301 465.3472 l
772.5508 465.3472 771.9131 464.7095 771.9131 463.9297 c
771.9131 460.7275 l
771.9131 459.9478 772.5508 459.3101 773.3301 459.3101 c
778.1465 459.3101 l
778.9258 459.3101 779.5635 458.875 779.5635 458.3438 c
779.5635 457.812 778.9258 457.377 778.1465 457.377 c
773.3301 457.377 l
772.5508 457.377 771.9131 456.7393 771.9131 455.9595 c
771.9131 451.9507 l
771.9131 451.1709 772.5508 450.5332 773.3301 450.5332 c
780.4004 450.5332 l
s
*U
U
U
u
u
*u
396.0317 538.1675 m
396.0317 537.3877 395.4966 536.75 394.8423 536.75 c
394.188 536.75 393.6528 537.3877 393.6528 538.1675 c
393.6528 554.3193 l
393.6528 555.0991 394.2905 555.7368 395.0703 555.7368 c
398.9678 555.7368 l
399.7476 555.7368 401.0156 555.6382 401.7856 555.5176 c
404.0435 555.1641 405.0449 554.019 v
406.0464 552.8735 406.5474 551.5684 406.5474 550.1035 c
406.5474 548.4712 406.0024 547.1221 404.9131 546.0557 c
403.8232 544.9893 402.3975 544.4561 400.6357 544.4561 c
397.4492 544.4561 l
396.6694 544.4561 396.0317 543.8184 396.0317 543.0386 c
396.0317 538.1675 l
s
1 D
396.0317 547.8486 m
396.0317 547.0688 396.6694 546.4312 397.4492 546.4312 c
398.9819 546.4312 l
399.7617 546.4312 401.0288 546.5356 401.7979 546.6631 c
402.4253 546.7671 403.1113 547.4395 v
403.7979 548.1118 404.1411 548.9995 404.1411 550.1035 c
404.1411 551.0493 403.835 551.8931 403.2227 552.6348 c
402.6108 553.3765 401.7251 553.7476 400.5659 553.7476 c
397.4492 553.7476 l
396.6694 553.7476 396.0317 553.1099 396.0317 552.3301 c
396.0317 547.8486 l
s
*U
U
u
*u
0 D
419.373 538.8364 m
420.1528 538.8364 420.7905 538.3672 420.7905 537.793 c
420.7905 537.2192 420.1528 536.75 419.373 536.75 c
410.9971 536.75 l
410.2173 536.75 409.5796 537.3877 409.5796 538.1675 c
409.5796 554.3193 l
409.5796 555.0991 410.1274 555.7368 410.7969 555.7368 c
411.4663 555.7368 412.0142 555.0991 412.0142 554.3193 c
412.0142 540.2539 l
412.0142 539.4741 412.6519 538.8364 413.4316 538.8364 c
419.373 538.8364 l
s
*U
U
u
*u
435.877 538.0972 m
436.1191 537.3564 435.7705 536.75 435.1035 536.75 c
434.4355 536.75 433.6816 537.353 433.4277 538.0903 c
432.4404 540.9595 l
432.1865 541.6968 431.3418 542.2998 430.5625 542.2998 c
426.3506 542.2998 l
425.5713 542.2998 424.7471 541.6899 424.5186 540.9443 c
423.6504 538.1055 l
423.4219 537.3599 422.7881 536.75 422.2412 536.75 c
421.6938 536.75 421.4438 537.3564 421.6846 538.0981 c
426.9785 554.3887 l
427.2188 555.1304 428.0215 555.7368 428.7617 555.7368 c
429.501 555.7368 430.3047 555.1309 430.5469 554.3896 c
435.877 538.0972 l
s
1 D
430.0557 544.0806 m
430.835 544.0806 431.2773 544.6875 431.0381 545.4297 c
428.9658 551.856 l
428.7266 552.5981 428.3359 552.5981 428.0967 551.856 c
426.0293 545.4297 l
425.79 544.6875 426.2324 544.0806 427.0117 544.0806 c
430.0557 544.0806 l
s
*U
U
u
*u
0 D
448.4297 555.7368 m
449.0254 555.7368 449.1943 555.1846 448.8047 554.5098 c
443.8662 545.9614 l
443.4766 545.2866 443.1572 544.0967 443.1572 543.3169 c
443.1572 538.1675 l
443.1572 537.3877 442.6221 536.75 441.9678 536.75 c
441.3135 536.75 440.7783 537.3877 440.7783 538.1675 c
440.7783 543.3169 l
440.7783 544.0967 440.459 545.2866 440.0693 545.9614 c
435.1309 554.5098 l
434.7412 555.1846 435.0547 555.7368 435.8281 555.7368 c
436.6006 555.7368 437.5527 555.1846 437.9424 554.5098 c
441.5645 548.2402 l
441.9541 547.5654 442.5938 547.5645 442.9854 548.2383 c
446.6328 554.5117 l
447.0244 555.1855 447.833 555.7368 448.4297 555.7368 c
s
*U
U
U
u
u
*u
664.7949 348.6631 m
664.7949 347.8833 664.2598 347.2456 663.6055 347.2456 c
662.9521 347.2456 662.417 347.8833 662.417 348.6631 c
662.417 364.8149 l
662.417 365.5947 663.0547 366.2324 663.834 366.2324 c
672.6279 366.2324 l
673.4072 366.2324 674.0449 365.7632 674.0449 365.1895 c
674.0449 364.6152 673.4072 364.146 672.6279 364.146 c
666.2119 364.146 l
665.4326 364.146 664.7949 363.5083 664.7949 362.7285 c
664.7949 359.5684 l
664.7949 358.7886 665.4326 358.1509 666.2119 358.1509 c
671.042 358.1509 l
671.8213 358.1509 672.459 357.7188 672.459 357.1914 c
672.459 356.6631 671.8213 356.2314 671.042 356.2314 c
666.2119 356.2314 l
665.4326 356.2314 664.7949 355.5938 664.7949 354.814 c
664.7949 348.6631 l
s
*U
U
u
*u
683.0029 346.856 m
680.5645 346.856 678.6631 347.8047 677.2998 349.7026 c
675.9375 351.6001 675.2559 353.9272 675.2559 356.6831 c
675.2559 359.5601 675.9697 361.9355 677.3975 363.8101 c
678.8252 365.6846 680.7178 366.6216 683.0732 366.6216 c
685.4189 366.6216 687.3018 365.7007 688.7197 363.8589 c
690.1387 362.0166 690.8486 359.6943 690.8486 356.8921 c
690.8486 354.2007 690.1602 351.8555 688.7832 349.8555 c
687.4053 347.856 685.4795 346.856 683.0029 346.856 c
s
1 D
683.0586 348.7896 m
684.7188 348.7896 686.0166 349.5459 686.9541 351.0586 c
687.8896 352.5713 688.3584 354.5205 688.3584 356.9063 c
688.3584 359.3564 687.874 361.2637 686.9053 362.6279 c
685.9355 363.9922 684.6494 364.6743 683.0449 364.6743 c
681.4219 364.6743 680.1328 363.9365 679.1777 362.4609 c
678.2227 360.9854 677.7451 359.0547 677.7451 356.6694 c
677.7451 354.3398 678.2275 352.4443 679.1924 350.9824 c
680.1563 349.5205 681.4453 348.7896 683.0586 348.7896 c
s
*U
U
u
*u
0 D
707.5283 348.5503 m
707.833 347.833 707.5215 347.2456 706.8359 347.2456 c
706.1494 347.2456 705.3389 347.8325 705.0332 348.5498 c
702.6436 354.1621 l
702.3379 354.8794 701.4502 355.4663 700.6709 355.4663 c
698.0654 355.4663 l
697.2861 355.4663 696.6484 354.8286 696.6484 354.0488 c
696.6484 348.6631 l
696.6484 347.8833 696.1475 347.2456 695.5352 347.2456 c
694.9238 347.2456 694.4229 347.8833 694.4229 348.6631 c
694.4229 364.8149 l
694.4229 365.5947 695.0605 366.2324 695.8398 366.2324 c
700.4893 366.2324 l
701.2686 366.2324 702.5361 366.1338 703.3066 366.0127 c
705.4414 365.6782 706.4199 364.5703 v
707.3975 363.4619 707.8867 362.2495 707.8867 360.9326 c
707.8867 359.9219 707.6133 358.9526 707.0664 358.0254 c
706.5195 357.0981 705.6152 356.4351 704.3545 356.0366 c
707.5283 348.5503 l
s
1 D
696.6484 358.8174 m
696.6484 358.0376 697.2861 357.3999 698.0654 357.3999 c
700.1973 357.3999 l
700.9766 357.3999 702.2451 357.4951 703.0156 357.6118 c
703.8975 357.7451 704.542 358.436 v
705.1865 359.1265 705.5088 359.9731 705.5088 360.9746 c
705.5088 361.9761 705.168 362.7549 704.4863 363.3115 c
703.8047 363.8677 702.9443 364.146 701.9063 364.146 c
698.0654 364.146 l
697.2861 364.146 696.6484 363.5083 696.6484 362.7285 c
696.6484 358.8174 l
s
*U
U
u
*u
0 D
730.7988 366.2324 m
731.374 366.2324 731.6943 365.6123 731.5117 364.8545 c
727.6055 348.6235 l
727.4229 347.8657 726.7373 347.2456 726.082 347.2456 c
725.4268 347.2456 724.7178 347.8594 724.5068 348.6099 c
721.1309 360.6118 l
720.9199 361.3623 720.5859 361.3589 720.3896 360.6045 c
717.2607 348.6172 l
717.0645 347.8628 716.3525 347.2456 715.6797 347.2456 c
715.0078 347.2456 714.2998 347.8638 714.1084 348.6191 c
709.9854 364.8589 l
709.7939 365.6143 710.1924 366.2324 710.8711 366.2324 c
711.5488 366.2324 712.2578 365.6133 712.4443 364.8564 c
715.5664 352.2241 l
715.7529 351.4673 716.0674 351.4653 716.2656 352.2192 c
719.5762 364.8613 l
719.7744 365.6152 720.3711 366.2324 720.9033 366.2324 c
721.4355 366.2324 722.0439 365.6187 722.2559 364.8682 c
725.8291 352.2119 l
726.041 351.4619 726.3574 351.4697 726.5322 352.2295 c
729.4365 364.8511 l
729.6113 365.6108 730.2246 366.2324 730.7988 366.2324 c
s
*U
U
u
*u
746.3418 348.5928 m
746.584 347.8516 746.2354 347.2456 745.5684 347.2456 c
744.9004 347.2456 744.1465 347.8486 743.8926 348.5859 c
742.9053 351.4551 l
742.6514 352.1924 741.8066 352.7954 741.0273 352.7954 c
736.8154 352.7954 l
736.0361 352.7954 735.2119 352.1855 734.9834 351.4399 c
734.1152 348.6011 l
733.8867 347.8555 733.2529 347.2456 732.7051 347.2456 c
732.1582 347.2456 731.9082 347.8521 732.1494 348.5938 c
737.4424 364.8843 l
737.6836 365.626 738.4863 366.2324 739.2266 366.2324 c
739.9658 366.2324 740.7695 365.6265 741.0117 364.8853 c
746.3418 348.5928 l
s
1 D
740.5205 354.5762 m
741.2998 354.5762 741.7422 355.1831 741.5029 355.9253 c
739.4307 362.3516 l
739.1914 363.0938 738.8008 363.0938 738.5615 362.3516 c
736.4941 355.9253 l
736.2549 355.1831 736.6973 354.5762 737.4766 354.5762 c
740.5205 354.5762 l
s
*U
U
u
*u
0 D
762.3604 348.5503 m
762.665 347.833 762.3535 347.2456 761.668 347.2456 c
760.9814 347.2456 760.1709 347.8325 759.8652 348.5498 c
757.4756 354.1621 l
757.1699 354.8794 756.2822 355.4663 755.5029 355.4663 c
752.8975 355.4663 l
752.1182 355.4663 751.4805 354.8286 751.4805 354.0488 c
751.4805 348.6631 l
751.4805 347.8833 750.9795 347.2456 750.3672 347.2456 c
749.7559 347.2456 749.2549 347.8833 749.2549 348.6631 c
749.2549 364.8149 l
749.2549 365.5947 749.8926 366.2324 750.6719 366.2324 c
755.3213 366.2324 l
756.1006 366.2324 757.3682 366.1338 758.1387 366.0127 c
760.2734 365.6782 761.252 364.5703 v
762.2295 363.4619 762.7188 362.2495 762.7188 360.9326 c
762.7188 359.9219 762.4453 358.9526 761.8984 358.0254 c
761.3516 357.0981 760.4473 356.4351 759.1865 356.0366 c
762.3604 348.5503 l
s
1 D
751.4805 358.8174 m
751.4805 358.0376 752.1182 357.3999 752.8975 357.3999 c
755.0293 357.3999 l
755.8086 357.3999 757.0771 357.4951 757.8477 357.6118 c
758.7295 357.7451 759.374 358.436 v
760.0186 359.1265 760.3408 359.9731 760.3408 360.9746 c
760.3408 361.9761 760 362.7549 759.3184 363.3115 c
758.6367 363.8677 757.7764 364.146 756.7383 364.146 c
752.8975 364.146 l
752.1182 364.146 751.4805 363.5083 751.4805 362.7285 c
751.4805 358.8174 l
s
*U
U
u
*u
0 D
768.1289 347.2456 m
767.3496 347.2456 766.7119 347.8833 766.7119 348.6631 c
766.7119 364.8149 l
766.7119 365.5947 767.3496 366.2324 768.1289 366.2324 c
771.665 366.2324 l
772.4443 366.2324 773.708 366.1123 774.4736 365.9658 c
777.8486 365.3188 779.3418 363.4922 v
780.834 361.665 781.5811 359.4307 781.5811 356.7876 c
781.5811 354.1074 780.8525 351.8472 779.3975 350.0068 c
777.9414 348.166 776.0957 347.2456 773.8613 347.2456 c
768.1289 347.2456 l
s
1 D
769.0898 350.6802 m
769.0898 349.9004 769.7275 349.2627 770.5068 349.2627 c
771.5264 349.2627 l
772.3057 349.2627 773.5693 349.3857 774.334 349.5356 c
776.5322 349.9673 777.5889 351.377 v
778.6465 352.7861 779.1748 354.6455 779.1748 356.9546 c
779.1748 358.8276 778.6719 360.5107 777.665 362.0039 c
776.6592 363.4966 775.085 364.2432 772.9434 364.2432 c
770.5068 364.2432 l
769.7275 364.2432 769.0898 363.6055 769.0898 362.8257 c
769.0898 350.6802 l
s
*U
U
U
u
u
*u
0 D
57.0039 44.9072 m
56.2241 44.9072 55.5864 45.5449 55.5864 46.3242 c
55.5864 62.4766 l
55.5864 63.2559 56.2241 63.8936 57.0039 63.8936 c
60.5396 63.8936 l
61.3193 63.8936 62.5835 63.7734 63.3491 63.627 c
66.7236 62.9805 68.2168 61.1533 v
69.7095 59.3271 70.4561 57.0918 70.4561 54.4492 c
70.4561 51.7695 69.728 49.5088 68.272 47.668 c
66.8164 45.8271 64.9707 44.9072 62.7363 44.9072 c
57.0039 44.9072 l
s
1 D
57.9653 48.3408 m
57.9653 47.5615 58.603 46.9238 59.3828 46.9238 c
60.4004 46.9238 l
61.1802 46.9238 62.4438 47.0469 63.2085 47.1973 c
65.4067 47.6289 66.4639 49.0381 v
67.521 50.4482 68.0498 52.3076 68.0498 54.6162 c
68.0498 56.4893 67.5464 58.1719 66.5405 59.665 c
65.5342 61.1582 63.96 61.9053 61.8179 61.9053 c
59.3828 61.9053 l
58.603 61.9053 57.9653 61.2676 57.9653 60.4883 c
57.9653 48.3408 l
s
*U
U
u
*u
0 D
76.3955 46.3242 m
76.3955 45.5449 75.8604 44.9072 75.2061 44.9072 c
74.5518 44.9072 74.0166 45.5449 74.0166 46.3242 c
74.0166 62.4766 l
74.0166 63.2559 74.5518 63.8936 75.2061 63.8936 c
75.8604 63.8936 76.3955 63.2559 76.3955 62.4766 c
76.3955 46.3242 l
s
*U
U
u
*u
79.0522 49.9287 m
79.812 50.1016 l
80.5723 50.2734 81.5615 49.8936 82.0098 49.2559 c
83.9253 46.5342 86.8003 46.5342 v
88.3022 46.5342 89.4336 46.8535 90.1938 47.4912 c
90.9541 48.1279 91.3345 48.9814 91.3345 50.0518 c
91.3345 50.8613 91.0449 51.5127 90.4658 52.0059 c
89.8862 52.499 89.2168 52.8389 88.457 53.0254 c
86.0342 53.623 l
85.2773 53.8096 84.0488 54.1514 83.3047 54.3818 c
82.8706 54.5166 82.2446 54.874 v
81.6187 55.2314 81.0879 55.7822 80.6519 56.5244 c
80.2158 57.2676 79.998 58.1172 79.998 59.0742 c
79.998 60.6621 80.5962 61.9268 81.7925 62.8691 c
82.9888 63.8125 84.5234 64.2832 86.3965 64.2832 c
89.8462 64.2832 92.1138 62.7207 93.1987 59.5957 c
92.4014 59.3594 l
91.6538 59.1377 90.7905 59.542 90.4829 60.2588 c
90.2031 60.9102 89.2759 61.4805 v
88.3486 62.0508 87.3608 62.3359 86.313 62.3359 c
85.2744 62.3359 84.3496 62.0615 83.5381 61.5117 c
82.7266 60.9619 82.3213 60.1836 82.3213 59.1777 c
82.3213 57.7705 83.3496 56.8203 85.4058 56.3271 c
87.5762 55.8184 l
88.335 55.6396 89.522 55.2002 90.2139 54.8408 c
93.8242 52.9668 93.8242 50.25 v
93.8242 48.6074 93.2148 47.2422 91.9951 46.1523 c
90.7759 45.0625 89.0581 44.5176 86.8418 44.5176 c
82.9097 44.5176 80.3135 46.3213 79.0522 49.9287 c
s
*U
U
u
*u
99.7363 46.3242 m
99.7363 45.5449 99.2012 44.9072 98.5469 44.9072 c
97.8926 44.9072 97.3574 45.5449 97.3574 46.3242 c
97.3574 62.4766 l
97.3574 63.2559 97.9951 63.8936 98.7749 63.8936 c
102.6724 63.8936 l
103.4521 63.8936 104.7197 63.7949 105.4902 63.6748 c
107.748 63.3213 108.7495 62.1758 v
109.751 61.0303 110.252 59.7256 110.252 58.2607 c
110.252 56.6279 109.707 55.2793 108.6177 54.2129 c
107.5278 53.1465 106.1021 52.6133 104.3403 52.6133 c
101.1538 52.6133 l
100.374 52.6133 99.7363 51.9756 99.7363 51.1963 c
99.7363 46.3242 l
s
1 D
99.7363 56.0049 m
99.7363 55.2256 100.374 54.5879 101.1538 54.5879 c
102.6865 54.5879 l
103.4663 54.5879 104.7334 54.6924 105.502 54.8203 c
106.1299 54.9248 106.8159 55.5967 v
107.5024 56.2695 107.8457 57.1572 107.8457 58.2607 c
107.8457 59.2061 107.5396 60.0498 106.9272 60.792 c
106.3154 61.5342 105.4297 61.9053 104.2705 61.9053 c
101.1538 61.9053 l
100.374 61.9053 99.7363 61.2676 99.7363 60.4883 c
99.7363 56.0049 l
s
*U
U
u
*u
0 D
123.0776 46.9941 m
123.8574 46.9941 124.4951 46.5244 124.4951 45.9502 c
124.4951 45.377 123.8574 44.9072 123.0776 44.9072 c
114.7012 44.9072 l
113.9214 44.9072 113.2837 45.5449 113.2837 46.3242 c
113.2837 62.4766 l
113.2837 63.2559 113.8315 63.8936 114.501 63.8936 c
115.1704 63.8936 115.7183 63.2559 115.7183 62.4766 c
115.7183 48.4111 l
115.7183 47.6318 116.356 46.9941 117.1357 46.9941 c
123.0776 46.9941 l
s
*U
U
u
*u
139.5815 46.2539 m
139.8237 45.5137 139.4756 44.9072 138.8076 44.9072 c
138.1396 44.9072 137.3857 45.5107 137.1323 46.2471 c
136.145 49.1172 l
135.8916 49.8535 135.0464 50.457 134.2666 50.457 c
130.0557 50.457 l
129.2759 50.457 128.4517 49.8467 128.2231 49.1016 c
127.3545 46.2627 l
127.126 45.5166 126.4922 44.9072 125.9453 44.9072 c
125.3979 44.9072 125.1479 45.5137 125.3887 46.2549 c
130.6826 62.5459 l
130.9233 63.2871 131.7261 63.8936 132.4658 63.8936 c
133.2061 63.8936 134.0098 63.2871 134.252 62.5469 c
139.5815 46.2539 l
s
1 D
133.7603 52.2373 m
134.54 52.2373 134.9819 52.8447 134.7427 53.5859 c
132.6709 60.0137 l
132.4316 60.7549 132.0405 60.7549 131.8018 60.0127 c
129.7334 53.5869 l
129.4946 52.8447 129.937 52.2373 130.7168 52.2373 c
133.7603 52.2373 l
s
*U
U
u
*u
0 D
152.1343 63.8936 m
152.731 63.8936 152.8994 63.3418 152.5098 62.666 c
147.5708 54.1191 l
147.1807 53.4434 146.8618 52.2539 146.8618 51.4746 c
146.8618 46.3242 l
146.8618 45.5449 146.3267 44.9072 145.6729 44.9072 c
145.0186 44.9072 144.4834 45.5449 144.4834 46.3242 c
144.4834 51.4746 l
144.4834 52.2539 144.1641 53.4434 143.7744 54.1191 c
138.8354 62.666 l
138.4453 63.3418 138.7593 63.8936 139.5322 63.8936 c
140.3057 63.8936 141.2573 63.3408 141.6475 62.666 c
145.2686 56.3975 l
145.6587 55.7227 146.2983 55.7217 146.6899 56.3955 c
150.3374 62.668 l
150.729 63.3418 151.5376 63.8936 152.1343 63.8936 c
s
*U
U
U
u
u
*u
682.9521 46.3242 m
682.9521 45.5449 682.417 44.9072 681.7637 44.9072 c
681.1094 44.9072 680.5742 45.5449 680.5742 46.3242 c
680.5742 62.4766 l
680.5742 63.2559 681.2119 63.8936 681.9912 63.8936 c
685.8896 63.8936 l
686.6689 63.8936 687.9365 63.7949 688.707 63.6748 c
690.9648 63.3213 691.9658 62.1758 v
692.9678 61.0303 693.4678 59.7256 693.4678 58.2607 c
693.4678 56.6279 692.9229 55.2793 691.834 54.2129 c
690.7441 53.1465 689.3184 52.6133 687.5566 52.6133 c
684.3691 52.6133 l
683.5898 52.6133 682.9521 51.9756 682.9521 51.1963 c
682.9521 46.3242 l
s
1 D
682.9521 56.0049 m
682.9521 55.2256 683.5898 54.5879 684.3691 54.5879 c
685.9033 54.5879 l
686.6826 54.5879 687.9492 54.6924 688.7188 54.8203 c
689.3457 54.9248 690.0322 55.5967 v
690.7188 56.2695 691.0615 57.1572 691.0615 58.2607 c
691.0615 59.2061 690.7559 60.0498 690.1436 60.792 c
689.5313 61.5342 688.6465 61.9053 687.4873 61.9053 c
684.3691 61.9053 l
683.5898 61.9053 682.9521 61.2676 682.9521 60.4883 c
682.9521 56.0049 l
s
*U
U
u
*u
0 D
703.0518 44.5176 m
700.6133 44.5176 698.7119 45.4668 697.3486 47.3643 c
695.9863 49.2617 695.3047 51.5889 695.3047 54.3447 c
695.3047 57.2217 696.0186 59.5977 697.4463 61.4717 c
698.874 63.3457 700.7666 64.2832 703.1221 64.2832 c
705.4678 64.2832 707.3506 63.3623 708.7686 61.5205 c
710.1875 59.6787 710.8975 57.3564 710.8975 54.5537 c
710.8975 51.8623 710.209 49.5166 708.832 47.5176 c
707.4541 45.5176 705.5283 44.5176 703.0518 44.5176 c
s
1 D
703.1074 46.4512 m
704.7676 46.4512 706.0654 47.208 707.0029 48.7207 c
707.9385 50.2334 708.4072 52.1826 708.4072 54.5674 c
708.4072 57.0176 707.9229 58.9248 706.9541 60.29 c
705.9844 61.6543 704.6982 62.3359 703.0938 62.3359 c
701.4707 62.3359 700.1816 61.5986 699.2266 60.1221 c
698.2715 58.6465 697.7939 56.7158 697.7939 54.3311 c
697.7939 52.001 698.2764 50.1055 699.2412 48.6436 c
700.2051 47.1816 701.4941 46.4512 703.1074 46.4512 c
s
*U
U
u
*u
0 D
733.3359 63.8936 m
733.9102 63.8936 734.2305 63.2734 734.0479 62.5156 c
730.1416 46.2852 l
729.959 45.5273 729.2734 44.9072 728.6182 44.9072 c
727.9629 44.9072 727.2539 45.5215 727.043 46.2715 c
723.667 58.2734 l
723.4561 59.0234 723.1221 59.0205 722.9258 58.2666 c
719.7969 46.2783 l
719.6006 45.5244 718.8887 44.9072 718.2168 44.9072 c
717.5439 44.9072 716.8359 45.5254 716.6445 46.2813 c
712.5215 62.5195 l
712.3301 63.2754 712.7285 63.8936 713.4063 63.8936 c
714.085 63.8936 714.7939 63.2744 714.9805 62.5176 c
718.1025 49.8857 l
718.2891 49.1289 718.6035 49.127 718.8018 49.8809 c
722.1123 62.5225 l
722.3105 63.2764 722.9072 63.8936 723.4395 63.8936 c
723.9717 63.8936 724.5801 63.2793 724.792 62.5293 c
728.3652 49.874 l
728.5771 49.124 728.8926 49.1309 729.0684 49.8906 c
731.9727 62.5127 l
732.1484 63.2725 732.7607 63.8936 733.3359 63.8936 c
s
*U
U
u
*u
748.1631 46.9941 m
748.9424 46.9941 749.5801 46.5244 749.5801 45.9502 c
749.5801 45.377 748.9424 44.9072 748.1631 44.9072 c
738.7148 44.9072 l
737.9355 44.9072 737.2979 45.5449 737.2979 46.3242 c
737.2979 62.4766 l
737.2979 63.2559 737.9355 63.8936 738.7148 63.8936 c
747.8984 63.8936 l
748.6777 63.8936 749.3154 63.4238 749.3154 62.8506 c
749.3154 62.2773 748.6777 61.8076 747.8984 61.8076 c
741.0928 61.8076 l
740.3135 61.8076 739.6758 61.1699 739.6758 60.3906 c
739.6758 57.1875 l
739.6758 56.4082 740.3135 55.7705 741.0928 55.7705 c
745.9092 55.7705 l
746.6885 55.7705 747.3262 55.335 747.3262 54.8037 c
747.3262 54.2725 746.6885 53.8369 745.9092 53.8369 c
741.0928 53.8369 l
740.3135 53.8369 739.6758 53.1992 739.6758 52.4199 c
739.6758 48.4111 l
739.6758 47.6318 740.3135 46.9941 741.0928 46.9941 c
748.1631 46.9941 l
s
*U
U
u
*u
766.0098 46.2119 m
766.3145 45.4941 766.0029 44.9072 765.3164 44.9072 c
764.6309 44.9072 763.8203 45.4941 763.5146 46.2109 c
761.125 51.8242 l
760.8193 52.541 759.9316 53.1279 759.1523 53.1279 c
756.5469 53.1279 l
755.7676 53.1279 755.1299 52.4902 755.1299 51.7109 c
755.1299 46.3242 l
755.1299 45.5449 754.6289 44.9072 754.0176 44.9072 c
753.4053 44.9072 752.9043 45.5449 752.9043 46.3242 c
752.9043 62.4766 l
752.9043 63.2559 753.542 63.8936 754.3213 63.8936 c
758.9707 63.8936 l
759.75 63.8936 761.0176 63.7949 761.7881 63.6738 c
763.9229 63.3398 764.9014 62.2314 v
765.8789 61.124 766.3682 59.9111 766.3682 58.5947 c
766.3682 57.584 766.0947 56.6143 765.5479 55.6875 c
765.001 54.7598 764.0967 54.0967 762.8359 53.6982 c
766.0098 46.2119 l
s
1 D
755.1299 56.4785 m
755.1299 55.6992 755.7676 55.0615 756.5469 55.0615 c
758.6787 55.0615 l
759.458 55.0615 760.7266 55.1572 761.4971 55.2734 c
762.3789 55.4063 763.0234 56.0977 v
763.668 56.7881 763.9902 57.6348 763.9902 58.6357 c
763.9902 59.6377 763.6494 60.417 762.9678 60.9727 c
762.2861 61.5293 761.4258 61.8076 760.3877 61.8076 c
756.5469 61.8076 l
755.7676 61.8076 755.1299 61.1699 755.1299 60.3906 c
755.1299 56.4785 l
s
*U
U
U
u
u
*u
0 D
224.3335 541.7715 m
225.0938 541.9443 l
225.8535 542.1172 226.8428 541.7368 227.291 541.0991 c
229.2065 538.3774 232.0815 538.3774 v
233.5835 538.3774 234.7148 538.6963 235.4751 539.3335 c
236.2354 539.9707 236.6157 540.8247 236.6157 541.895 c
236.6157 542.7041 236.3262 543.3555 235.7471 543.8491 c
235.1675 544.3423 234.498 544.6816 233.7383 544.8677 c
231.3154 545.4648 l
230.5586 545.6514 229.3301 545.9932 228.5859 546.2241 c
228.1519 546.3589 227.5259 546.7168 v
226.8999 547.0742 226.3691 547.6245 225.9331 548.3672 c
225.4971 549.1104 225.2793 549.96 225.2793 550.9165 c
225.2793 552.5044 225.8774 553.7695 227.0737 554.7124 c
228.27 555.6548 229.8047 556.126 231.6777 556.126 c
235.1274 556.126 237.395 554.5635 238.48 551.4385 c
237.6826 551.2021 l
236.9351 550.9805 236.0718 551.3848 235.7642 552.1011 c
235.4844 552.7529 234.5571 553.3232 v
233.6299 553.8936 232.6421 554.1787 231.5942 554.1787 c
230.5557 554.1787 229.6309 553.9038 228.8193 553.3545 c
228.0078 552.8047 227.6025 552.0269 227.6025 551.0205 c
227.6025 549.6138 228.6309 548.6636 230.687 548.1694 c
232.8574 547.6606 l
233.6162 547.4829 234.8032 547.0435 235.4951 546.6841 c
239.1055 544.8096 239.1055 542.0923 v
239.1055 540.4507 238.4961 539.085 237.2764 537.9951 c
236.0571 536.9053 234.3394 536.3604 232.123 536.3604 c
228.1909 536.3604 225.5947 538.1641 224.3335 541.7715 c
s
*U
U
u
*u
256.978 537.999 m
257.3462 537.312 257.0625 536.75 256.3477 536.75 c
255.6328 536.75 254.7441 537.3105 254.3726 537.9961 c
250.04 545.9917 l
249.6685 546.6768 248.9658 546.7402 248.4785 546.1318 c
245.9038 542.9189 l
245.4165 542.3105 245.0176 541.1753 245.0176 540.3955 c
245.0176 538.1675 l
245.0176 537.3877 244.4824 536.75 243.8281 536.75 c
243.1738 536.75 242.6387 537.3877 242.6387 538.1675 c
242.6387 554.3193 l
242.6387 555.0991 243.1738 555.7368 243.8281 555.7368 c
244.4824 555.7368 245.0176 555.0991 245.0176 554.3193 c
245.0176 546.144 l
245.0176 545.3643 245.4102 545.2295 245.8896 545.8438 c
252.7373 554.6196 l
253.2168 555.2339 254.187 555.7368 254.8926 555.7368 c
255.5986 555.7368 255.7856 555.2324 255.3086 554.6162 c
251.9004 550.2163 l
251.4229 549.6001 251.3335 548.5337 251.7017 547.8467 c
256.978 537.999 l
s
*U
U
u
*u
262.9194 538.1675 m
262.9194 537.3877 262.3843 536.75 261.73 536.75 c
261.0757 536.75 260.5405 537.3877 260.5405 538.1675 c
260.5405 554.3193 l
260.5405 555.0991 261.0757 555.7368 261.73 555.7368 c
262.3843 555.7368 262.9194 555.0991 262.9194 554.3193 c
262.9194 538.1675 l
s
*U
U
u
*u
270.041 538.1675 m
270.041 537.3877 269.5059 536.75 268.8516 536.75 c
268.1973 536.75 267.6621 537.3877 267.6621 538.1675 c
267.6621 554.3193 l
267.6621 555.0991 268.2998 555.7368 269.0796 555.7368 c
272.9771 555.7368 l
273.7568 555.7368 275.0244 555.6382 275.7949 555.5176 c
278.0527 555.1641 279.0542 554.019 v
280.0557 552.8735 280.5566 551.5684 280.5566 550.1035 c
280.5566 548.4712 280.0117 547.1221 278.9224 546.0557 c
277.8325 544.9893 276.4067 544.4561 274.645 544.4561 c
271.4585 544.4561 l
270.6787 544.4561 270.041 543.8184 270.041 543.0386 c
270.041 538.1675 l
s
1 D
270.041 547.8486 m
270.041 547.0688 270.6787 546.4312 271.4585 546.4312 c
272.9912 546.4312 l
273.771 546.4312 275.0381 546.5356 275.8071 546.6631 c
276.4346 546.7671 277.1206 547.4395 v
277.8071 548.1118 278.1504 548.9995 278.1504 550.1035 c
278.1504 551.0493 277.8442 551.8931 277.2319 552.6348 c
276.6201 553.3765 275.7344 553.7476 274.5752 553.7476 c
271.4585 553.7476 l
270.6787 553.7476 270.041 553.1099 270.041 552.3301 c
270.041 547.8486 l
s
*U
U
u
*u
0 D
298.7378 544.7202 m
299.5176 544.7202 300.1553 544.3384 300.1553 543.8721 c
300.1553 543.4053 299.5176 543.0234 298.7378 543.0234 c
282.6694 543.0234 l
281.8896 543.0234 281.252 543.4053 281.252 543.8721 c
281.252 544.3384 281.8896 544.7202 282.6694 544.7202 c
298.7378 544.7202 l
s
*U
U
U
u
u
*u
720.5313 149.8604 m
721.292 150.0332 l
722.0518 150.2051 723.041 149.8252 723.4893 149.1875 c
725.4043 146.4658 728.2793 146.4658 v
729.7813 146.4658 730.9121 146.7852 731.6729 147.4229 c
732.4336 148.0596 732.8135 148.9131 732.8135 149.9834 c
732.8135 150.793 732.5234 151.4443 731.9443 151.9375 c
731.3652 152.4307 730.6953 152.7705 729.9355 152.957 c
727.5127 153.5547 l
726.7559 153.7412 725.5273 154.083 724.7832 154.3135 c
724.3496 154.4482 723.7236 154.8057 v
723.0977 155.1631 722.5664 155.7139 722.1309 156.4561 c
721.6953 157.1992 721.4775 158.0488 721.4775 159.0059 c
721.4775 160.5938 722.0752 161.8584 723.2715 162.8008 c
724.4678 163.7441 726.002 164.2148 727.876 164.2148 c
731.3252 164.2148 733.5928 162.6523 734.6777 159.5273 c
733.8799 159.291 l
733.1328 159.0693 732.2695 159.4736 731.9629 160.1904 c
731.6826 160.8418 730.7549 161.4121 v
729.8271 161.9824 728.8398 162.2676 727.792 162.2676 c
726.7539 162.2676 725.8281 161.9932 725.0176 161.4434 c
724.2061 160.8936 723.7998 160.1152 723.7998 159.1094 c
723.7998 157.7021 724.8281 156.752 726.8848 156.2588 c
729.0557 155.749 l
729.8145 155.5713 731.002 155.1318 731.6934 154.7725 c
735.3037 152.8984 735.3037 150.1816 v
735.3037 148.5391 734.6934 147.1738 733.4746 146.084 c
732.2549 144.9941 730.5371 144.4492 728.3203 144.4492 c
724.3887 144.4492 721.792 146.2529 720.5313 149.8604 c
s
*U
U
u
*u
743.9971 146.2559 m
743.9971 145.4766 743.4619 144.8389 742.8076 144.8389 c
742.1533 144.8389 741.6182 145.4766 741.6182 146.2559 c
741.6182 160.3223 l
741.6182 161.1016 740.9805 161.7393 740.2012 161.7393 c
737.5967 161.7393 l
736.8174 161.7393 736.1797 162.209 736.1797 162.7822 c
736.1797 163.3555 736.8174 163.8252 737.5967 163.8252 c
748.0322 163.8252 l
748.8115 163.8252 749.4492 163.3555 749.4492 162.7822 c
749.4492 162.209 748.8115 161.7393 748.0322 161.7393 c
745.4141 161.7393 l
744.6348 161.7393 743.9971 161.1016 743.9971 160.3223 c
743.9971 146.2559 l
s
*U
U
u
*u
757.7949 144.4492 m
755.3564 144.4492 753.4551 145.3984 752.0918 147.2959 c
750.7295 149.1934 750.0479 151.5205 750.0479 154.2764 c
750.0479 157.1533 750.7617 159.5293 752.1895 161.4033 c
753.6172 163.2773 755.5098 164.2148 757.8652 164.2148 c
760.2109 164.2148 762.0938 163.2939 763.5117 161.4521 c
764.9307 159.6104 765.6406 157.2881 765.6406 154.4854 c
765.6406 151.7939 764.9521 149.4482 763.5752 147.4492 c
762.1973 145.4492 760.2715 144.4492 757.7949 144.4492 c
s
1 D
757.8506 146.3828 m
759.5107 146.3828 760.8086 147.1396 761.7461 148.6523 c
762.6816 150.165 763.1504 152.1143 763.1504 154.499 c
763.1504 156.9492 762.666 158.8564 761.6973 160.2217 c
760.7275 161.5859 759.4414 162.2676 757.8369 162.2676 c
756.2139 162.2676 754.9248 161.5303 753.9697 160.0537 c
753.0146 158.5781 752.5371 156.6475 752.5371 154.2627 c
752.5371 151.9326 753.0195 150.0371 753.9844 148.5752 c
754.9482 147.1133 756.2373 146.3828 757.8506 146.3828 c
s
*U
U
u
*u
0 D
771.5938 146.2559 m
771.5938 145.4766 771.0586 144.8389 770.4043 144.8389 c
769.751 144.8389 769.2158 145.4766 769.2158 146.2559 c
769.2158 162.4082 l
769.2158 163.1875 769.8535 163.8252 770.6328 163.8252 c
774.5313 163.8252 l
775.3105 163.8252 776.5781 163.7266 777.3486 163.6064 c
779.6064 163.2529 780.6074 162.1074 v
781.6094 160.9619 782.1094 159.6572 782.1094 158.1924 c
782.1094 156.5596 781.5645 155.2109 780.4756 154.1445 c
779.3857 153.0781 777.96 152.5449 776.1982 152.5449 c
773.0107 152.5449 l
772.2314 152.5449 771.5938 151.9072 771.5938 151.1279 c
771.5938 146.2559 l
s
1 D
771.5938 155.9365 m
771.5938 155.1572 772.2314 154.5195 773.0107 154.5195 c
774.5449 154.5195 l
775.3242 154.5195 776.5908 154.624 777.3604 154.752 c
777.9873 154.8564 778.6738 155.5283 v
779.3604 156.2012 779.7031 157.0889 779.7031 158.1924 c
779.7031 159.1377 779.3975 159.9814 778.7852 160.7236 c
778.1729 161.4658 777.2881 161.8369 776.1289 161.8369 c
773.0107 161.8369 l
772.2314 161.8369 771.5938 161.1992 771.5938 160.4199 c
771.5938 155.9365 l
s
*U
U
U
u
u
*u
0 D
371.1348 287.5098 m
371.8945 287.6826 l
372.6548 287.8545 373.644 287.4746 374.0923 286.8369 c
376.0078 284.1152 378.8828 284.1152 v
380.3848 284.1152 381.5161 284.4346 382.2764 285.0723 c
383.0366 285.709 383.417 286.5625 383.417 287.6328 c
383.417 288.4424 383.1274 289.0938 382.5483 289.5869 c
381.9688 290.0801 381.2993 290.4199 380.5396 290.6055 c
378.1167 291.2031 l
377.3599 291.3896 376.1318 291.7314 375.3872 291.9619 c
374.9531 292.0967 374.3271 292.4551 v
373.7012 292.8125 373.1704 293.3623 372.7344 294.1055 c
372.2983 294.8486 372.0806 295.6982 372.0806 296.6548 c
372.0806 298.2427 372.6787 299.5078 373.875 300.4507 c
375.0713 301.3931 376.606 301.8643 378.479 301.8643 c
381.9287 301.8643 384.1963 300.3018 385.2813 297.1768 c
384.4839 296.9404 l
383.7363 296.7183 382.873 297.123 382.5654 297.8394 c
382.2856 298.4912 381.3584 299.0615 v
380.4312 299.6318 379.4434 299.917 378.3955 299.917 c
377.3569 299.917 376.4321 299.6421 375.6206 299.0928 c
374.8091 298.543 374.4038 297.7651 374.4038 296.7588 c
374.4038 295.3516 375.4321 294.4014 377.4883 293.9072 c
379.6587 293.3984 l
380.4175 293.2207 381.6045 292.7813 382.2964 292.4219 c
385.9067 290.5479 385.9067 287.8301 v
385.9067 286.1885 385.2974 284.8232 384.0776 283.7334 c
382.8584 282.6436 381.1406 282.0986 378.9243 282.0986 c
374.9922 282.0986 372.396 283.9023 371.1348 287.5098 c
s
*U
U
u
*u
400.3047 284.5752 m
401.0845 284.5752 401.7222 284.1055 401.7222 283.5322 c
401.7222 282.958 401.0845 282.4883 400.3047 282.4883 c
390.8574 282.4883 l
390.0776 282.4883 389.4399 283.126 389.4399 283.9053 c
389.4399 300.0576 l
389.4399 300.8374 390.0776 301.4751 390.8574 301.4751 c
400.0405 301.4751 l
400.8203 301.4751 401.458 301.0059 401.458 300.4316 c
401.458 299.8579 400.8203 299.3887 400.0405 299.3887 c
393.2363 299.3887 l
392.4565 299.3887 391.8188 298.751 391.8188 297.9712 c
391.8188 294.7686 l
391.8188 293.9893 392.4565 293.3516 393.2363 293.3516 c
398.0513 293.3516 l
398.8311 293.3516 399.4688 292.917 399.4688 292.3848 c
399.4688 291.8525 398.8311 291.418 398.0513 291.418 c
393.2363 291.418 l
392.4565 291.418 391.8188 290.7803 391.8188 290.001 c
391.8188 285.9922 l
391.8188 285.2129 392.4565 284.5752 393.2363 284.5752 c
400.3047 284.5752 l
s
*U
U
u
*u
414.8403 284.5752 m
415.6201 284.5752 416.2578 284.1055 416.2578 283.5322 c
416.2578 282.958 415.6201 282.4883 414.8403 282.4883 c
406.4639 282.4883 l
405.6841 282.4883 405.0464 283.126 405.0464 283.9053 c
405.0464 300.0576 l
405.0464 300.8374 405.5942 301.4751 406.2637 301.4751 c
406.9331 301.4751 407.481 300.8374 407.481 300.0576 c
407.481 285.9922 l
407.481 285.2129 408.1187 284.5752 408.8984 284.5752 c
414.8403 284.5752 l
s
*U
U
u
*u
429.8633 284.5752 m
430.6426 284.5752 431.2803 284.1055 431.2803 283.5322 c
431.2803 282.958 430.6426 282.4883 429.8633 282.4883 c
420.4155 282.4883 l
419.6357 282.4883 418.998 283.126 418.998 283.9053 c
418.998 300.0576 l
418.998 300.8374 419.6357 301.4751 420.4155 301.4751 c
429.5996 301.4751 l
430.3789 301.4751 431.0166 301.0059 431.0166 300.4316 c
431.0166 299.8579 430.3789 299.3887 429.5996 299.3887 c
422.7939 299.3887 l
422.0146 299.3887 421.377 298.751 421.377 297.9712 c
421.377 294.7686 l
421.377 293.9893 422.0146 293.3516 422.7939 293.3516 c
427.6104 293.3516 l
428.3896 293.3516 429.0273 292.917 429.0273 292.3848 c
429.0273 291.8525 428.3896 291.418 427.6104 291.418 c
422.7939 291.418 l
422.0146 291.418 421.377 290.7803 421.377 290.001 c
421.377 285.9922 l
421.377 285.2129 422.0146 284.5752 422.7939 284.5752 c
429.8633 284.5752 l
s
*U
U
u
*u
445.9834 288.873 m
446.7705 288.6963 l
447.5313 288.5254 447.8506 287.8242 447.4814 287.1377 c
444.7686 282.0986 441.1152 282.0986 v
438.7129 282.0986 436.8281 283.0684 435.4609 285.0078 c
434.0928 286.9473 433.4092 289.332 433.4092 292.1621 c
433.4092 295.085 434.123 297.4336 435.5508 299.2056 c
436.9785 300.978 438.8936 301.8643 441.2959 301.8643 c
444.8564 301.8643 447.1426 299.8291 448.1533 295.7578 c
447.3037 295.5889 l
446.54 295.4365 445.6191 295.8779 445.2598 296.5698 c
443.5537 299.8477 441.2822 299.8477 v
439.6035 299.8477 438.3027 299.145 437.3799 297.7402 c
436.457 296.3354 435.9961 294.3623 435.9961 291.8213 c
435.9961 289.4941 436.4688 287.6279 437.415 286.2227 c
438.3604 284.8184 439.6123 284.1152 441.1709 284.1152 c
443.5908 284.1152 445.1953 285.7012 445.9834 288.873 c
s
*U
U
u
*u
456.832 283.9053 m
456.832 283.126 456.2969 282.4883 455.6426 282.4883 c
454.9883 282.4883 454.4531 283.126 454.4531 283.9053 c
454.4531 297.9712 l
454.4531 298.751 453.8154 299.3887 453.0361 299.3887 c
450.4316 299.3887 l
449.6523 299.3887 449.0146 299.8579 449.0146 300.4316 c
449.0146 301.0059 449.6523 301.4751 450.4316 301.4751 c
460.8672 301.4751 l
461.6465 301.4751 462.2842 301.0059 462.2842 300.4316 c
462.2842 299.8579 461.6465 299.3887 460.8672 299.3887 c
458.249 299.3887 l
457.4697 299.3887 456.832 298.751 456.832 297.9712 c
456.832 283.9053 l
s
*U
U
U
u
*u
540.6123 541.7715 m
541.373 541.9443 l
542.1328 542.1172 543.1221 541.7368 543.5703 541.0991 c
545.4854 538.3774 548.3604 538.3774 v
549.8623 538.3774 550.9932 538.6963 551.7539 539.3335 c
552.5146 539.9707 552.8945 540.8247 552.8945 541.895 c
552.8945 542.7041 552.6045 543.3555 552.0254 543.8491 c
551.4463 544.3423 550.7764 544.6816 550.0166 544.8677 c
547.5938 545.4648 l
546.8369 545.6514 545.6084 545.9932 544.8643 546.2246 c
544.4307 546.3589 543.8047 546.7168 v
543.1787 547.0742 542.6475 547.6245 542.2119 548.3672 c
541.7764 549.1104 541.5586 549.96 541.5586 550.9165 c
541.5586 552.5044 542.1563 553.7695 543.3525 554.7124 c
544.5488 555.6548 546.083 556.126 547.957 556.126 c
551.4063 556.126 553.6738 554.5635 554.7588 551.4385 c
553.9609 551.2021 l
553.2139 550.9805 552.3506 551.3848 552.043 552.1011 c
551.7637 552.7529 550.8359 553.3232 v
549.9082 553.8936 548.9209 554.1787 547.873 554.1787 c
546.835 554.1787 545.9092 553.9038 545.0986 553.3545 c
544.2871 552.8047 543.8809 552.0269 543.8809 551.0205 c
543.8809 549.6138 544.9092 548.6636 546.9658 548.1694 c
549.1367 547.6606 l
549.8955 547.4829 551.083 547.0435 551.7744 546.6841 c
555.3848 544.8096 555.3848 542.0923 v
555.3848 540.4507 554.7744 539.085 553.5557 537.9951 c
552.3359 536.9053 550.6182 536.3604 548.4014 536.3604 c
544.4697 536.3604 541.873 538.1641 540.6123 541.7715 c
s
*U
U
u
*u
573.2559 537.999 m
573.625 537.312 573.3408 536.75 572.627 536.75 c
571.9121 536.75 571.0234 537.3105 570.6523 537.9961 c
566.3184 545.9917 l
565.9473 546.6772 565.2451 546.7402 564.7568 546.1318 c
562.1826 542.9189 l
561.6943 542.3105 561.2959 541.1753 561.2959 540.3955 c
561.2959 538.1675 l
561.2959 537.3877 560.7607 536.75 560.1074 536.75 c
559.4531 536.75 558.918 537.3877 558.918 538.1675 c
558.918 554.3193 l
558.918 555.0991 559.4531 555.7368 560.1074 555.7368 c
560.7607 555.7368 561.2959 555.0991 561.2959 554.3193 c
561.2959 546.144 l
561.2959 545.3643 561.6885 545.2295 562.168 545.8438 c
569.0166 554.6196 l
569.4961 555.2339 570.4658 555.7368 571.1719 555.7368 c
571.8779 555.7368 572.0645 555.2324 571.5869 554.6162 c
568.1787 550.2163 l
567.7012 549.6001 567.6113 548.5337 567.9805 547.8467 c
573.2559 537.999 l
s
*U
U
u
*u
579.1973 538.1675 m
579.1973 537.3877 578.6621 536.75 578.0078 536.75 c
577.3545 536.75 576.8193 537.3877 576.8193 538.1675 c
576.8193 554.3193 l
576.8193 555.0991 577.3545 555.7368 578.0078 555.7368 c
578.6621 555.7368 579.1973 555.0991 579.1973 554.3193 c
579.1973 538.1675 l
s
*U
U
u
*u
586.3193 538.1675 m
586.3193 537.3877 585.7842 536.75 585.1309 536.75 c
584.4766 536.75 583.9414 537.3877 583.9414 538.1675 c
583.9414 554.3193 l
583.9414 555.0991 584.5791 555.7368 585.3584 555.7368 c
589.2568 555.7368 l
590.0361 555.7368 591.3037 555.6382 592.0742 555.5176 c
594.332 555.1641 595.333 554.019 v
596.335 552.8735 596.835 551.5684 596.835 550.1035 c
596.835 548.4712 596.29 547.1221 595.2012 546.0557 c
594.1113 544.9893 592.6855 544.4561 590.9238 544.4561 c
587.7363 544.4561 l
586.957 544.4561 586.3193 543.8184 586.3193 543.0386 c
586.3193 538.1675 l
s
1 D
586.3193 547.8486 m
586.3193 547.0688 586.957 546.4312 587.7363 546.4312 c
589.2705 546.4312 l
590.0498 546.4312 591.3164 546.5356 592.0859 546.6631 c
592.7129 546.7671 593.3994 547.4395 v
594.0859 548.1118 594.4287 548.9995 594.4287 550.1035 c
594.4287 551.0493 594.123 551.8931 593.5107 552.6348 c
592.8984 553.3765 592.0137 553.7476 590.8545 553.7476 c
587.7363 553.7476 l
586.957 553.7476 586.3193 553.1099 586.3193 552.3301 c
586.3193 547.8486 l
s
*U
U
u
*u
0 D
615.0176 544.7202 m
615.7969 544.7202 616.4346 544.3384 616.4346 543.8721 c
616.4346 543.4053 615.7969 543.0234 615.0176 543.0234 c
598.9482 543.0234 l
598.1689 543.0234 597.5313 543.4053 597.5313 543.8721 c
597.5313 544.3384 598.1689 544.7202 598.9482 544.7202 c
615.0176 544.7202 l
s
*U
U
u
*u
607.8311 535.8369 m
607.8311 535.0576 607.4492 534.4199 606.9834 534.4199 c
606.5166 534.4199 606.1348 535.0576 606.1348 535.8369 c
606.1348 551.9063 l
606.1348 552.6855 606.5166 553.3232 606.9834 553.3232 c
607.4492 553.3232 607.8311 552.6855 607.8311 551.9063 c
607.8311 535.8369 l
s
*U
U
u
u
*u
232.0811 46.3242 m
232.0811 45.5449 231.5615 44.9072 230.9268 44.9072 c
230.2915 44.9072 229.772 45.5449 229.772 46.3242 c
229.772 60.0703 l
229.772 60.8496 229.5498 60.8896 229.2783 60.1592 c
224.1025 46.2354 l
223.8311 45.5049 223.2456 44.9072 222.8018 44.9072 c
222.3584 44.9072 221.771 45.5039 221.4966 46.2344 c
216.2637 60.1602 l
215.9893 60.8906 215.7651 60.8496 215.7651 60.0703 c
215.7651 46.3242 l
215.7651 45.5449 215.3115 44.9072 214.7568 44.9072 c
214.2017 44.9072 213.748 45.5449 213.748 46.3242 c
213.748 62.4766 l
213.748 63.2559 214.3857 63.8936 215.1655 63.8936 c
215.8516 63.8936 l
216.6313 63.8936 217.4946 63.2969 217.77 62.5674 c
222.5039 50.0342 l
222.7793 49.3047 223.2256 49.3066 223.4951 50.0381 c
228.1143 62.5635 l
228.3838 63.2949 229.2422 63.8936 230.022 63.8936 c
230.6636 63.8936 l
231.4434 63.8936 232.0811 63.2559 232.0811 62.4766 c
232.0811 46.3242 l
s
*U
U
u
*u
247.689 46.9941 m
248.4688 46.9941 249.1064 46.5244 249.1064 45.9502 c
249.1064 45.377 248.4688 44.9072 247.689 44.9072 c
238.2417 44.9072 l
237.4619 44.9072 236.8242 45.5449 236.8242 46.3242 c
236.8242 62.4766 l
236.8242 63.2559 237.4619 63.8936 238.2417 63.8936 c
247.4248 63.8936 l
248.2046 63.8936 248.8423 63.4238 248.8423 62.8506 c
248.8423 62.2773 248.2046 61.8076 247.4248 61.8076 c
240.6206 61.8076 l
239.8408 61.8076 239.2031 61.1699 239.2031 60.3906 c
239.2031 57.1875 l
239.2031 56.4082 239.8408 55.7705 240.6206 55.7705 c
245.4355 55.7705 l
246.2153 55.7705 246.853 55.335 246.853 54.8037 c
246.853 54.2725 246.2153 53.8369 245.4355 53.8369 c
240.6206 53.8369 l
239.8408 53.8369 239.2031 53.1992 239.2031 52.4199 c
239.2031 48.4111 l
239.2031 47.6318 239.8408 46.9941 240.6206 46.9941 c
247.689 46.9941 l
s
*U
U
u
*u
266.4106 46.3242 m
266.4106 45.5449 265.8911 44.9072 265.2559 44.9072 c
264.6211 44.9072 263.7764 45.4561 263.3784 46.126 c
255.0044 60.2402 l
254.6064 60.9102 254.2876 61.1777 254.2949 60.833 c
254.3027 60.4883 254.3281 59.8154 254.3511 59.3359 c
254.3511 59.3359 254.3511 59.0107 v
254.3511 46.3242 l
254.3511 45.5449 253.9189 44.9072 253.3911 44.9072 c
252.8633 44.9072 252.4312 45.5449 252.4312 46.3242 c
252.4312 62.4766 l
252.4312 63.2559 253.0688 63.8936 253.8486 63.8936 c
253.9907 63.8936 l
254.7705 63.8936 255.7334 63.3447 256.1313 62.6748 c
263.8652 49.6396 l
264.2627 48.9697 264.582 48.7178 264.5742 49.0811 c
264.5669 49.4453 264.5479 50.1816 264.5327 50.7197 c
264.5327 50.7197 264.5327 51.1182 v
264.5327 62.4766 l
264.5327 63.2559 264.9551 63.8936 265.4717 63.8936 c
265.9883 63.8936 266.4106 63.2559 266.4106 62.4766 c
266.4106 46.3242 l
s
*U
U
u
*u
281.9751 62.4766 m
281.9751 63.2559 282.4194 63.8936 282.9629 63.8936 c
283.5059 63.8936 283.9502 63.2559 283.9502 62.4766 c
283.9502 52.9082 l
283.9502 52.1289 283.8599 50.8594 283.75 50.0879 c
283.3403 47.2207 282.1211 46.1396 v
280.9019 45.0586 279.3047 44.5176 277.3296 44.5176 c
275.1318 44.5176 273.5044 45.0742 272.4473 46.1885 c
271.3901 47.3018 270.8613 49.0693 270.8613 51.4912 c
270.8613 62.4766 l
270.8613 63.2559 271.3965 63.8936 272.0508 63.8936 c
272.7046 63.8936 273.2397 63.2559 273.2397 62.4766 c
273.2397 52.9072 l
273.2397 52.1279 273.2832 50.8535 273.3364 50.0762 c
273.4116 48.9756 273.7544 48.3721 v
274.0977 47.7686 274.6172 47.3232 275.3125 47.0352 c
276.0078 46.748 276.7358 46.6045 277.4961 46.6045 c
278.9614 46.6045 280.0742 46.9893 280.8345 47.7598 c
281.5947 48.5303 281.9751 49.7734 281.9751 51.4902 c
281.9751 62.4766 l
s
*U
U
U
u
u
*u
557.9238 44.9072 m
557.1445 44.9072 556.5068 45.5449 556.5068 46.3242 c
556.5068 62.4766 l
556.5068 63.2559 557.1445 63.8936 557.9238 63.8936 c
562.6006 63.8936 l
563.3799 63.8936 564.6494 63.8047 565.4209 63.6963 c
567.3115 63.4307 568.2256 62.5039 v
569.1387 61.5771 569.5957 60.5029 569.5957 59.2793 c
569.5957 57.1299 568.4736 55.7031 566.2295 54.999 c
567.5645 54.6553 568.5566 54.043 569.2061 53.1611 c
569.8555 52.2803 570.1797 51.2822 570.1797 50.1689 c
570.1797 48.6748 569.6768 47.4238 568.6709 46.418 c
567.6641 45.4102 566.1133 44.9072 564.0176 44.9072 c
557.9238 44.9072 l
s
1 D
558.8018 57.1738 m
558.8018 56.3945 559.4395 55.7568 560.2188 55.7568 c
561.5156 55.7568 l
562.2949 55.7568 563.5664 55.8291 564.3408 55.918 c
565.793 56.084 566.3682 56.7373 v
566.9434 57.3916 567.2305 58.1582 567.2305 59.0391 c
567.2305 59.9111 566.9229 60.6162 566.3057 61.1533 c
565.6895 61.6914 564.7686 61.9609 563.5449 61.9609 c
560.2188 61.9609 l
559.4395 61.9609 558.8018 61.3232 558.8018 60.5439 c
558.8018 57.1738 l
s
558.8018 48.4111 m
558.8018 47.6318 559.4395 46.9941 560.2188 46.9941 c
562.4756 46.9941 l
563.2549 46.9941 564.5244 47.0801 565.2969 47.1855 c
566.0947 47.2949 566.7715 47.8975 v
567.4482 48.501 567.7871 49.2842 567.7871 50.249 c
567.7871 50.9258 567.6338 51.5537 567.3281 52.1338 c
567.0225 52.7129 566.5908 53.1602 566.0342 53.4756 c
565.4785 53.791 564.6484 53.9482 563.5449 53.9482 c
560.2188 53.9482 l
559.4395 53.9482 558.8018 53.3105 558.8018 52.5313 c
558.8018 48.4111 l
s
*U
U
u
*u
0 D
586.0723 46.2539 m
586.3145 45.5137 585.9658 44.9072 585.2988 44.9072 c
584.6309 44.9072 583.877 45.5107 583.623 46.2471 c
582.6357 49.1172 l
582.3818 49.8535 581.5371 50.457 580.7578 50.457 c
576.5459 50.457 l
575.7666 50.457 574.9424 49.8467 574.7139 49.1016 c
573.8457 46.2627 l
573.6172 45.5176 572.9834 44.9072 572.4355 44.9072 c
571.8887 44.9072 571.6387 45.5137 571.8799 46.2549 c
577.1729 62.5459 l
577.4141 63.2871 578.2168 63.8936 578.957 63.8936 c
579.6963 63.8936 580.5 63.2871 580.7422 62.5469 c
586.0723 46.2539 l
s
1 D
580.251 52.2373 m
581.0303 52.2373 581.4727 52.8447 581.2334 53.5859 c
579.1611 60.0137 l
578.9219 60.7549 578.5313 60.7549 578.292 60.0127 c
576.2246 53.5869 l
575.9854 52.8447 576.4277 52.2373 577.207 52.2373 c
580.251 52.2373 l
s
*U
U
u
*u
0 D
599.6543 51.292 m
600.4414 51.1152 l
601.2021 50.9443 601.5215 50.2432 601.1523 49.5566 c
598.4395 44.5176 594.7861 44.5176 v
592.3838 44.5176 590.499 45.4873 589.1318 47.4268 c
587.7637 49.3662 587.0801 51.751 587.0801 54.582 c
587.0801 57.5049 587.7939 59.8525 589.2217 61.625 c
590.6494 63.3975 592.5645 64.2832 594.9668 64.2832 c
598.5273 64.2832 600.8135 62.248 601.8242 58.1768 c
600.9756 58.0078 l
600.2109 57.8564 599.29 58.2979 598.9307 58.9893 c
597.2246 62.2666 594.9531 62.2666 v
593.2744 62.2666 591.9736 61.5645 591.0508 60.1592 c
590.1279 58.7539 589.667 56.7813 589.667 54.2402 c
589.667 51.9131 590.1396 50.0469 591.0859 48.6416 c
592.0313 47.2373 593.2832 46.5342 594.8418 46.5342 c
597.2617 46.5342 598.8662 48.1201 599.6543 51.292 c
s
*U
U
u
*u
619.1113 46.1563 m
619.4805 45.4697 619.1963 44.9072 618.4824 44.9072 c
617.7676 44.9072 616.8789 45.4678 616.5078 46.1533 c
612.1738 54.1494 l
611.8027 54.835 611.1006 54.8975 610.6123 54.2891 c
608.0381 51.0771 l
607.5498 50.4688 607.1514 49.333 607.1514 48.5537 c
607.1514 46.3242 l
607.1514 45.5449 606.6162 44.9072 605.9629 44.9072 c
605.3086 44.9072 604.7734 45.5449 604.7734 46.3242 c
604.7734 62.4766 l
604.7734 63.2559 605.3086 63.8936 605.9629 63.8936 c
606.6162 63.8936 607.1514 63.2559 607.1514 62.4766 c
607.1514 54.3008 l
607.1514 53.5215 607.5439 53.3867 608.0234 54.001 c
614.8721 62.7764 l
615.3516 63.3906 616.3213 63.8936 617.0273 63.8936 c
617.7334 63.8936 617.9199 63.3896 617.4424 62.7734 c
614.0342 58.373 l
613.5566 57.7568 613.4668 56.6904 613.8359 56.0039 c
619.1113 46.1563 l
s
*U
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
